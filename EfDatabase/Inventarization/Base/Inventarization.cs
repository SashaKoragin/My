

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace EfDatabase.Inventarization.Base
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IInventarizationContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification
        System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave
        System.Data.Entity.DbSet<FullInventarization> FullInventarizations { get; set; } // FullInventarization
        System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel
        System.Data.Entity.DbSet<FullMonitorSysBlok> FullMonitorSysBloks { get; set; } // FullMonitorSysBlok
        System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel
        System.Data.Entity.DbSet<History> Histories { get; set; } // History
        System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic
        System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet
        System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu
        System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors
        System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitors
        System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock
        System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel
        System.Data.Entity.DbSet<Position> Positions { get; set; } // Position
        System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer
        System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        System.Data.Entity.DbSet<Scaner> Scaners { get; set; } // Scaner
        System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing
        System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock
        System.Data.Entity.DbSet<User> Users { get; set; } // Users

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InventarizationContext : System.Data.Entity.DbContext, IInventarizationContext
    {
        public System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification
        public System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave
        public System.Data.Entity.DbSet<FullInventarization> FullInventarizations { get; set; } // FullInventarization
        public System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel
        public System.Data.Entity.DbSet<FullMonitorSysBlok> FullMonitorSysBloks { get; set; } // FullMonitorSysBlok
        public System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel
        public System.Data.Entity.DbSet<History> Histories { get; set; } // History
        public System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic
        public System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        public System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet
        public System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu
        public System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors
        public System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitors
        public System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock
        public System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel
        public System.Data.Entity.DbSet<Position> Positions { get; set; } // Position
        public System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer
        public System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        public System.Data.Entity.DbSet<Scaner> Scaners { get; set; } // Scaner
        public System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing
        public System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users

        static InventarizationContext()
        {
            System.Data.Entity.Database.SetInitializer<InventarizationContext>(null);
        }

        public InventarizationContext()
            : base("Name=Inventarization")
        {
        }

        public InventarizationContext(string connectionString)
            : base(connectionString)
        {
        }

        public InventarizationContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public InventarizationContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public InventarizationContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        public InventarizationContext(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ClassificationConfiguration());
            modelBuilder.Configurations.Add(new CopySaveConfiguration());
            modelBuilder.Configurations.Add(new FullInventarizationConfiguration());
            modelBuilder.Configurations.Add(new FullModelConfiguration());
            modelBuilder.Configurations.Add(new FullMonitorSysBlokConfiguration());
            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration());
            modelBuilder.Configurations.Add(new HistoryConfiguration());
            modelBuilder.Configurations.Add(new InfoLogicConfiguration());
            modelBuilder.Configurations.Add(new InfoTableConfiguration());
            modelBuilder.Configurations.Add(new KabinetConfiguration());
            modelBuilder.Configurations.Add(new MfuConfiguration());
            modelBuilder.Configurations.Add(new MonitorConfiguration());
            modelBuilder.Configurations.Add(new NameMonitorConfiguration());
            modelBuilder.Configurations.Add(new NameSysBlockConfiguration());
            modelBuilder.Configurations.Add(new OtdelConfiguration());
            modelBuilder.Configurations.Add(new PositionConfiguration());
            modelBuilder.Configurations.Add(new PrinterConfiguration());
            modelBuilder.Configurations.Add(new RuleConfiguration());
            modelBuilder.Configurations.Add(new ScanerConfiguration());
            modelBuilder.Configurations.Add(new StatusingConfiguration());
            modelBuilder.Configurations.Add(new SysBlockConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ClassificationConfiguration(schema));
            modelBuilder.Configurations.Add(new CopySaveConfiguration(schema));
            modelBuilder.Configurations.Add(new FullInventarizationConfiguration(schema));
            modelBuilder.Configurations.Add(new FullModelConfiguration(schema));
            modelBuilder.Configurations.Add(new FullMonitorSysBlokConfiguration(schema));
            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration(schema));
            modelBuilder.Configurations.Add(new HistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoLogicConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoTableConfiguration(schema));
            modelBuilder.Configurations.Add(new KabinetConfiguration(schema));
            modelBuilder.Configurations.Add(new MfuConfiguration(schema));
            modelBuilder.Configurations.Add(new MonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new NameMonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new NameSysBlockConfiguration(schema));
            modelBuilder.Configurations.Add(new OtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new PositionConfiguration(schema));
            modelBuilder.Configurations.Add(new PrinterConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleConfiguration(schema));
            modelBuilder.Configurations.Add(new ScanerConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusingConfiguration(schema));
            modelBuilder.Configurations.Add(new SysBlockConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class InventarizationContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<InventarizationContext>
    {
        public InventarizationContext Create()
        {
            return new InventarizationContext();
        }
    }

    #endregion

    #region POCO classes

    // Classification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Classification
    {
        public int IdClasification { get; set; } // IdClasification (Primary key)
        public string NameClass { get; set; } // NameClass (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullModels where [FullModel].[IdClasification] point to this entity (FK_Classification_FullModel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullModel> FullModels { get; set; } // FullModel.FK_Classification_FullModel

        public Classification()
        {
            DataCreate = System.DateTime.Now;
            FullModels = new System.Collections.Generic.List<FullModel>();
        }
    }

    // CopySave
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CopySave
    {
        public int IdCopySave { get; set; } // IdCopySave (Primary key)
        public string NameCopySave { get; set; } // NameCopySave (length: 64)
        public string SerNum { get; set; } // SerNum (length: 64)
        public string InventarNum { get; set; } // InventarNum (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdCopySave] point to this entity (FK_CopySave_Mfu)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_CopySave_Mfu

        public CopySave()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
        }
    }

    // FullInventarization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullInventarization
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdUser { get; set; } // IdUser
        public int? IdMonitor { get; set; } // IdMonitor
        public int? IdSysBlock { get; set; } // IdSysBlock
        public int? IdScaner { get; set; } // IdScaner
        public int? IdPrinter { get; set; } // IdPrinter
        public int? IdMfu { get; set; } // IdMfu
        public bool? StatusActual { get; set; } // StatusActual
        public string Coment { get; set; } // Coment (length: 254)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Mfu pointed by [FullInventarization].([IdMfu]) (FK_Mfu_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public Mfu Mfu { get; set; } // FK_Mfu_FullInventarization

        /// <summary>
        /// Parent Monitor pointed by [FullInventarization].([IdMonitor]) (FK_Monitors_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public Monitor Monitor { get; set; } // FK_Monitors_FullInventarization

        /// <summary>
        /// Parent Printer pointed by [FullInventarization].([IdPrinter]) (FK_Printer_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public Printer Printer { get; set; } // FK_Printer_FullInventarization

        /// <summary>
        /// Parent Scaner pointed by [FullInventarization].([IdScaner]) (FK_Scaner_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public Scaner Scaner { get; set; } // FK_Scaner_FullInventarization

        /// <summary>
        /// Parent SysBlock pointed by [FullInventarization].([IdSysBlock]) (FK_SysBlock_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public SysBlock SysBlock { get; set; } // FK_SysBlock_FullInventarization

        /// <summary>
        /// Parent User pointed by [FullInventarization].([IdUser]) (FK_FullInventarization_Users)
        /// </summary>
        [JsonIgnore]
        public User User { get; set; } // FK_FullInventarization_Users

        public FullInventarization()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // FullModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullModel
    {
        public int IdModel { get; set; } // IdModel (Primary key)
        public string NameModel { get; set; } // NameModel (length: 64)
        public int IdClasification { get; set; } // IdClasification
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdModel] point to this entity (FK_Mfu_FullModel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullModel
        /// <summary>
        /// Child Printers where [Printer].[IdModel] point to this entity (FK_Printer_FullModel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullModel
        /// <summary>
        /// Child Scaners where [Scaner].[IdModel] point to this entity (FK_Scaner_FullModel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Scaner> Scaners { get; set; } // Scaner.FK_Scaner_FullModel

        // Foreign keys

        /// <summary>
        /// Parent Classification pointed by [FullModel].([IdClasification]) (FK_Classification_FullModel)
        /// </summary>
        [JsonIgnore]
        public Classification Classification { get; set; } // FK_Classification_FullModel

        public FullModel()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
            Printers = new System.Collections.Generic.List<Printer>();
            Scaners = new System.Collections.Generic.List<Scaner>();
        }
    }

    // FullMonitorSysBlok
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullMonitorSysBlok
    {
        public int Id { get; set; } // Id (Primary key)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 64)
        public string InventarNumMonitor { get; set; } // InventarNumMonitor (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public FullMonitorSysBlok()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // FullProizvoditel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullProizvoditel
    {
        public int IdProizvoditel { get; set; } // IdProizvoditel (Primary key)
        public string NameProizvoditel { get; set; } // NameProizvoditel (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdProizvoditel] point to this entity (FK_Mfu_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullProizvoditel
        /// <summary>
        /// Child Printers where [Printer].[IdProizvoditel] point to this entity (FK_Printer_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullProizvoditel
        /// <summary>
        /// Child Scaners where [Scaner].[IdProizvoditel] point to this entity (FK_Scaner_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Scaner> Scaners { get; set; } // Scaner.FK_Scaner_FullProizvoditel

        public FullProizvoditel()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
            Printers = new System.Collections.Generic.List<Printer>();
            Scaners = new System.Collections.Generic.List<Scaner>();
        }
    }

    // History
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class History
    {
        public int Id { get; set; } // Id (Primary key)
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public int? IdUser { get; set; } // IdUser
        public string UserProcess { get; set; } // UserProcess (length: 512)
        public System.DateTime? DataCreate { get; set; } // DataCreate


        public History()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoLogic
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoLogic
    {
        public int Id { get; set; } // Id (Primary key)
        public string InfoProcedure { get; set; } // InfoProcedure (length: 64)
        public string ParamProcedure { get; set; } // ParamProcedure (length: 64)
        public string NameProcedure { get; set; } // NameProcedure (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public InfoLogic()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTable
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameTable { get; set; } // NameTable (length: 64)
        public string NameColumns { get; set; } // NameColumns (length: 64)
        public string InfoColumn { get; set; } // InfoColumn (length: 256)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public InfoTable()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // Kabinet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Kabinet
    {
        public int IdNumberKabinet { get; set; } // IdNumberKabinet (Primary key)
        public int? NumberKabinet { get; set; } // NumberKabinet
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdNumberKabinet] point to this entity (FK_Users_Kabinet)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Kabinet

        public Kabinet()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Mfu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Mfu
    {
        public int IdMfu { get; set; } // IdMfu (Primary key)
        public int? IdProizvoditel { get; set; } // IdProizvoditel
        public int? IdModel { get; set; } // IdModel
        public string ZavNumber { get; set; } // ZavNumber (length: 64)
        public string ServiceNumber { get; set; } // ServiceNumber (length: 64)
        public string InventarNumber { get; set; } // InventarNumber (length: 64)
        public int? IdCopySave { get; set; } // IdCopySave
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdMfu] point to this entity (FK_Mfu_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_Mfu_FullInventarization

        // Foreign keys

        /// <summary>
        /// Parent CopySave pointed by [Mfu].([IdCopySave]) (FK_CopySave_Mfu)
        /// </summary>
        [JsonIgnore]
        public CopySave CopySave { get; set; } // FK_CopySave_Mfu

        /// <summary>
        /// Parent FullModel pointed by [Mfu].([IdModel]) (FK_Mfu_FullModel)
        /// </summary>
        [JsonIgnore]
        public FullModel FullModel { get; set; } // FK_Mfu_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [Mfu].([IdProizvoditel]) (FK_Mfu_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public FullProizvoditel FullProizvoditel { get; set; } // FK_Mfu_FullProizvoditel

        /// <summary>
        /// Parent Statusing pointed by [Mfu].([IdStatus]) (FK_Statusing_Mfu)
        /// </summary>
        [JsonIgnore]
        public Statusing Statusing { get; set; } // FK_Statusing_Mfu

        public Mfu()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    // Monitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Monitor
    {
        public int IdMonitor { get; set; } // IdMonitor (Primary key)
        public int? IdModelMonitor { get; set; } // IdModelMonitor
        public string SerNum { get; set; } // SerNum (length: 64)
        public string InventarNumMonitor { get; set; } // InventarNumMonitor (length: 64)
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdMonitor] point to this entity (FK_Monitors_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_Monitors_FullInventarization

        // Foreign keys

        /// <summary>
        /// Parent NameMonitor pointed by [Monitors].([IdModelMonitor]) (FK_Monitors_NameMonitors)
        /// </summary>
        [JsonIgnore]
        public NameMonitor NameMonitor { get; set; } // FK_Monitors_NameMonitors

        /// <summary>
        /// Parent Statusing pointed by [Monitors].([IdStatus]) (FK_Statusing_Monitors)
        /// </summary>
        [JsonIgnore]
        public Statusing Statusing { get; set; } // FK_Statusing_Monitors

        public Monitor()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    // NameMonitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameMonitor
    {
        public int IdModelMonitor { get; set; } // IdModelMonitor (Primary key)
        public string NameMonitor_ { get; set; } // NameMonitor (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Monitors where [Monitors].[IdModelMonitor] point to this entity (FK_Monitors_NameMonitors)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_NameMonitors

        public NameMonitor()
        {
            DataCreate = System.DateTime.Now;
            Monitors = new System.Collections.Generic.List<Monitor>();
        }
    }

    // NameSysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameSysBlock
    {
        public int IdModelSysBlock { get; set; } // IdModelSysBlock (Primary key)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdModelSysBlock] point to this entity (FK_NameSysBlock_SysBlock)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_NameSysBlock_SysBlock

        public NameSysBlock()
        {
            DataCreate = System.DateTime.Now;
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
        }
    }

    // Otdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Otdel
    {
        public int IdOtdel { get; set; } // IdOtdel (Primary key)
        public string NameOtdel { get; set; } // NameOtdel (length: 256)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdOtdel] point to this entity (FK_Otdel_Users)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Otdel_Users

        public Otdel()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Position
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Position
    {
        public int IdPosition { get; set; } // IdPosition (Primary key)
        public string NamePosition { get; set; } // NamePosition (length: 256)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdPosition] point to this entity (FK_Users_Position)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Position

        public Position()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Printer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Printer
    {
        public int IdPrinter { get; set; } // IdPrinter (Primary key)
        public int? IdProizvoditel { get; set; } // IdProizvoditel
        public int? IdModel { get; set; } // IdModel
        public string ZavNumber { get; set; } // ZavNumber (length: 64)
        public string ServiceNumber { get; set; } // ServiceNumber (length: 64)
        public string InventarNumber { get; set; } // InventarNumber (length: 64)
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdPrinter] point to this entity (FK_Printer_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_Printer_FullInventarization

        // Foreign keys

        /// <summary>
        /// Parent FullModel pointed by [Printer].([IdModel]) (FK_Printer_FullModel)
        /// </summary>
        [JsonIgnore]
        public FullModel FullModel { get; set; } // FK_Printer_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [Printer].([IdProizvoditel]) (FK_Printer_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public FullProizvoditel FullProizvoditel { get; set; } // FK_Printer_FullProizvoditel

        /// <summary>
        /// Parent Statusing pointed by [Printer].([IdStatus]) (FK_Statusing_Printer)
        /// </summary>
        [JsonIgnore]
        public Statusing Statusing { get; set; } // FK_Statusing_Printer

        public Printer()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    // Rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Rule
    {
        public int IdRule { get; set; } // IdRule (Primary key)
        public string NameRules { get; set; } // NameRules (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdRule] point to this entity (FK_Users_Rules)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Rules

        public Rule()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Scaner
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Scaner
    {
        public int IdScaner { get; set; } // IdScaner (Primary key)
        public int? IdProizvoditel { get; set; } // IdProizvoditel
        public int? IdModel { get; set; } // IdModel
        public string ZavNumber { get; set; } // ZavNumber (length: 64)
        public string ServiceNumber { get; set; } // ServiceNumber (length: 64)
        public string InventarNumber { get; set; } // InventarNumber (length: 64)
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdScaner] point to this entity (FK_Scaner_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_Scaner_FullInventarization

        // Foreign keys

        /// <summary>
        /// Parent FullModel pointed by [Scaner].([IdModel]) (FK_Scaner_FullModel)
        /// </summary>
        [JsonIgnore]
        public FullModel FullModel { get; set; } // FK_Scaner_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [Scaner].([IdProizvoditel]) (FK_Scaner_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public FullProizvoditel FullProizvoditel { get; set; } // FK_Scaner_FullProizvoditel

        /// <summary>
        /// Parent Statusing pointed by [Scaner].([IdStatus]) (FK_Statusing_Scaner)
        /// </summary>
        [JsonIgnore]
        public Statusing Statusing { get; set; } // FK_Statusing_Scaner

        public Scaner()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    // Statusing
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Statusing
    {
        public int IdStatus { get; set; } // IdStatus (Primary key)
        public string Name { get; set; } // Name (length: 64)
        public string Color { get; set; } // Color (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdStatus] point to this entity (FK_Statusing_Mfu)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Statusing_Mfu
        /// <summary>
        /// Child Monitors where [Monitors].[IdStatus] point to this entity (FK_Statusing_Monitors)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Statusing_Monitors
        /// <summary>
        /// Child Printers where [Printer].[IdStatus] point to this entity (FK_Statusing_Printer)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Statusing_Printer
        /// <summary>
        /// Child Scaners where [Scaner].[IdStatus] point to this entity (FK_Statusing_Scaner)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<Scaner> Scaners { get; set; } // Scaner.FK_Statusing_Scaner
        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdStatus] point to this entity (FK_Statusing_SysBlock)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_Statusing_SysBlock

        public Statusing()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
            Monitors = new System.Collections.Generic.List<Monitor>();
            Printers = new System.Collections.Generic.List<Printer>();
            Scaners = new System.Collections.Generic.List<Scaner>();
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
        }
    }

    // SysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SysBlock
    {
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)
        public int? IdModelSysBlock { get; set; } // IdModelSysBlock
        public string ServiceNum { get; set; } // ServiceNum (length: 32)
        public string SerNum { get; set; } // SerNum (length: 64)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 64)
        public string NameComputer { get; set; } // NameComputer (length: 64)
        public string IpAdress { get; set; } // IpAdress (length: 20)
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdSysBlock] point to this entity (FK_SysBlock_FullInventarization)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_SysBlock_FullInventarization

        // Foreign keys

        /// <summary>
        /// Parent NameSysBlock pointed by [SysBlock].([IdModelSysBlock]) (FK_NameSysBlock_SysBlock)
        /// </summary>
        [JsonIgnore]
        public NameSysBlock NameSysBlock { get; set; } // FK_NameSysBlock_SysBlock

        /// <summary>
        /// Parent Statusing pointed by [SysBlock].([IdStatus]) (FK_Statusing_SysBlock)
        /// </summary>
        [JsonIgnore]
        public Statusing Statusing { get; set; } // FK_Statusing_SysBlock

        public SysBlock()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    // Users
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class User
    {
        public int IdUser { get; set; } // IdUser (Primary key)
        public string Name { get; set; } // Name (length: 256)
        public int? IdOtdel { get; set; } // IdOtdel
        public int? IdPosition { get; set; } // IdPosition
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet
        public int? IdRule { get; set; } // IdRule
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string Telephon { get; set; } // Telephon (length: 32)
        public string TelephonUndeground { get; set; } // TelephonUndeground (length: 32)
        public string IpTelephon { get; set; } // IpTelephon (length: 64)
        public string MacTelephon { get; set; } // MacTelephon (length: 64)
        public string NameUser { get; set; } // NameUser (length: 64)
        public string Passwords { get; set; } // Passwords (length: 64)
        public bool? StatusActual { get; set; } // StatusActual
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullInventarizations where [FullInventarization].[IdUser] point to this entity (FK_FullInventarization_Users)
        /// </summary>
        [JsonIgnore]
        public System.Collections.Generic.ICollection<FullInventarization> FullInventarizations { get; set; } // FullInventarization.FK_FullInventarization_Users

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [Users].([IdNumberKabinet]) (FK_Users_Kabinet)
        /// </summary>
        [JsonIgnore]
        public Kabinet Kabinet { get; set; } // FK_Users_Kabinet

        /// <summary>
        /// Parent Otdel pointed by [Users].([IdOtdel]) (FK_Otdel_Users)
        /// </summary>
        [JsonIgnore]
        public Otdel Otdel { get; set; } // FK_Otdel_Users

        /// <summary>
        /// Parent Position pointed by [Users].([IdPosition]) (FK_Users_Position)
        /// </summary>
        [JsonIgnore]
        public Position Position { get; set; } // FK_Users_Position

        /// <summary>
        /// Parent Rule pointed by [Users].([IdRule]) (FK_Users_Rules)
        /// </summary>
        [JsonIgnore]
        public Rule Rule { get; set; } // FK_Users_Rules

        public User()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            FullInventarizations = new System.Collections.Generic.List<FullInventarization>();
        }
    }

    #endregion

    #region POCO Configuration

    // Classification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClassificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Classification>
    {
        public ClassificationConfiguration()
            : this("dbo")
        {
        }

        public ClassificationConfiguration(string schema)
        {
            ToTable("Classification", schema);
            HasKey(x => x.IdClasification);

            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameClass).HasColumnName(@"NameClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CopySave
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CopySaveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CopySave>
    {
        public CopySaveConfiguration()
            : this("dbo")
        {
        }

        public CopySaveConfiguration(string schema)
        {
            ToTable("CopySave", schema);
            HasKey(x => x.IdCopySave);

            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameCopySave).HasColumnName(@"NameCopySave").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FullInventarization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullInventarizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullInventarization>
    {
        public FullInventarizationConfiguration()
            : this("dbo")
        {
        }

        public FullInventarizationConfiguration(string schema)
        {
            ToTable("FullInventarization", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdMonitor).HasColumnName(@"IdMonitor").HasColumnType("int").IsOptional();
            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsOptional();
            Property(x => x.IdScaner).HasColumnName(@"IdScaner").HasColumnType("int").IsOptional();
            Property(x => x.IdPrinter).HasColumnName(@"IdPrinter").HasColumnType("int").IsOptional();
            Property(x => x.IdMfu).HasColumnName(@"IdMfu").HasColumnType("int").IsOptional();
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Mfu).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdMfu).WillCascadeOnDelete(false); // FK_Mfu_FullInventarization
            HasOptional(a => a.Monitor).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdMonitor).WillCascadeOnDelete(false); // FK_Monitors_FullInventarization
            HasOptional(a => a.Printer).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdPrinter).WillCascadeOnDelete(false); // FK_Printer_FullInventarization
            HasOptional(a => a.Scaner).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdScaner).WillCascadeOnDelete(false); // FK_Scaner_FullInventarization
            HasOptional(a => a.SysBlock).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdSysBlock).WillCascadeOnDelete(false); // FK_SysBlock_FullInventarization
            HasOptional(a => a.User).WithMany(b => b.FullInventarizations).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_FullInventarization_Users
        }
    }

    // FullModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullModel>
    {
        public FullModelConfiguration()
            : this("dbo")
        {
        }

        public FullModelConfiguration(string schema)
        {
            ToTable("FullModel", schema);
            HasKey(x => x.IdModel);

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Classification).WithMany(b => b.FullModels).HasForeignKey(c => c.IdClasification).WillCascadeOnDelete(false); // FK_Classification_FullModel
        }
    }

    // FullMonitorSysBlok
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullMonitorSysBlokConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullMonitorSysBlok>
    {
        public FullMonitorSysBlokConfiguration()
            : this("dbo")
        {
        }

        public FullMonitorSysBlokConfiguration(string schema)
        {
            ToTable("FullMonitorSysBlok", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumMonitor).HasColumnName(@"InventarNumMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FullProizvoditel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullProizvoditelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullProizvoditel>
    {
        public FullProizvoditelConfiguration()
            : this("dbo")
        {
        }

        public FullProizvoditelConfiguration(string schema)
        {
            ToTable("FullProizvoditel", schema);
            HasKey(x => x.IdProizvoditel);

            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameProizvoditel).HasColumnName(@"NameProizvoditel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // History
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class HistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<History>
    {
        public HistoryConfiguration()
            : this("dbo")
        {
        }

        public HistoryConfiguration(string schema)
        {
            ToTable("History", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.UserProcess).HasColumnName(@"UserProcess").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

        }
    }

    // InfoLogic
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoLogicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoLogic>
    {
        public InfoLogicConfiguration()
            : this("dbo")
        {
        }

        public InfoLogicConfiguration(string schema)
        {
            ToTable("InfoLogic", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InfoProcedure).HasColumnName(@"InfoProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ParamProcedure).HasColumnName(@"ParamProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameProcedure).HasColumnName(@"NameProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoTable>
    {
        public InfoTableConfiguration()
            : this("dbo")
        {
        }

        public InfoTableConfiguration(string schema)
        {
            ToTable("InfoTable", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTable).HasColumnName(@"NameTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameColumns).HasColumnName(@"NameColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Kabinet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class KabinetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Kabinet>
    {
        public KabinetConfiguration()
            : this("dbo")
        {
        }

        public KabinetConfiguration(string schema)
        {
            ToTable("Kabinet", schema);
            HasKey(x => x.IdNumberKabinet);

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Mfu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MfuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Mfu>
    {
        public MfuConfiguration()
            : this("dbo")
        {
        }

        public MfuConfiguration(string schema)
        {
            ToTable("Mfu", schema);
            HasKey(x => x.IdMfu);

            Property(x => x.IdMfu).HasColumnName(@"IdMfu").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsOptional();
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.CopySave).WithMany(b => b.Mfus).HasForeignKey(c => c.IdCopySave).WillCascadeOnDelete(false); // FK_CopySave_Mfu
            HasOptional(a => a.FullModel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Mfu_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Mfu_FullProizvoditel
            HasOptional(a => a.Statusing).WithMany(b => b.Mfus).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Mfu
        }
    }

    // Monitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Monitor>
    {
        public MonitorConfiguration()
            : this("dbo")
        {
        }

        public MonitorConfiguration(string schema)
        {
            ToTable("Monitors", schema);
            HasKey(x => x.IdMonitor);

            Property(x => x.IdMonitor).HasColumnName(@"IdMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsOptional();
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumMonitor).HasColumnName(@"InventarNumMonitor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.NameMonitor).WithMany(b => b.Monitors).HasForeignKey(c => c.IdModelMonitor).WillCascadeOnDelete(false); // FK_Monitors_NameMonitors
            HasOptional(a => a.Statusing).WithMany(b => b.Monitors).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Monitors
        }
    }

    // NameMonitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameMonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameMonitor>
    {
        public NameMonitorConfiguration()
            : this("dbo")
        {
        }

        public NameMonitorConfiguration(string schema)
        {
            ToTable("NameMonitors", schema);
            HasKey(x => x.IdModelMonitor);

            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameMonitor_).HasColumnName(@"NameMonitor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // NameSysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameSysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameSysBlock>
    {
        public NameSysBlockConfiguration()
            : this("dbo")
        {
        }

        public NameSysBlockConfiguration(string schema)
        {
            ToTable("NameSysBlock", schema);
            HasKey(x => x.IdModelSysBlock);

            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Otdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Otdel>
    {
        public OtdelConfiguration()
            : this("dbo")
        {
        }

        public OtdelConfiguration(string schema)
        {
            ToTable("Otdel", schema);
            HasKey(x => x.IdOtdel);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Position
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PositionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Position>
    {
        public PositionConfiguration()
            : this("dbo")
        {
        }

        public PositionConfiguration(string schema)
        {
            ToTable("Position", schema);
            HasKey(x => x.IdPosition);

            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NamePosition).HasColumnName(@"NamePosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Printer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PrinterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Printer>
    {
        public PrinterConfiguration()
            : this("dbo")
        {
        }

        public PrinterConfiguration(string schema)
        {
            ToTable("Printer", schema);
            HasKey(x => x.IdPrinter);

            Property(x => x.IdPrinter).HasColumnName(@"IdPrinter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullModel).WithMany(b => b.Printers).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Printer_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Printers).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Printer_FullProizvoditel
            HasOptional(a => a.Statusing).WithMany(b => b.Printers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Printer
        }
    }

    // Rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rule>
    {
        public RuleConfiguration()
            : this("dbo")
        {
        }

        public RuleConfiguration(string schema)
        {
            ToTable("Rules", schema);
            HasKey(x => x.IdRule);

            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameRules).HasColumnName(@"NameRules").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Scaner
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ScanerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Scaner>
    {
        public ScanerConfiguration()
            : this("dbo")
        {
        }

        public ScanerConfiguration(string schema)
        {
            ToTable("Scaner", schema);
            HasKey(x => x.IdScaner);

            Property(x => x.IdScaner).HasColumnName(@"IdScaner").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullModel).WithMany(b => b.Scaners).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Scaner_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Scaners).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Scaner_FullProizvoditel
            HasOptional(a => a.Statusing).WithMany(b => b.Scaners).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Scaner
        }
    }

    // Statusing
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Statusing>
    {
        public StatusingConfiguration()
            : this("dbo")
        {
        }

        public StatusingConfiguration(string schema)
        {
            ToTable("Statusing", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SysBlock>
    {
        public SysBlockConfiguration()
            : this("dbo")
        {
        }

        public SysBlockConfiguration(string schema)
        {
            ToTable("SysBlock", schema);
            HasKey(x => x.IdSysBlock);

            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.NameSysBlock).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdModelSysBlock).WillCascadeOnDelete(false); // FK_NameSysBlock_SysBlock
            HasOptional(a => a.Statusing).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_SysBlock
        }
    }

    // Users
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {
            ToTable("Users", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();
            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsOptional();
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Telephon).HasColumnName(@"Telephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.TelephonUndeground).HasColumnName(@"TelephonUndeground").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IpTelephon).HasColumnName(@"IpTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MacTelephon).HasColumnName(@"MacTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Passwords).HasColumnName(@"Passwords").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.Users).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Users_Kabinet
            HasOptional(a => a.Otdel).WithMany(b => b.Users).HasForeignKey(c => c.IdOtdel).WillCascadeOnDelete(false); // FK_Otdel_Users
            HasOptional(a => a.Position).WithMany(b => b.Users).HasForeignKey(c => c.IdPosition).WillCascadeOnDelete(false); // FK_Users_Position
            HasOptional(a => a.Rule).WithMany(b => b.Users).HasForeignKey(c => c.IdRule).WillCascadeOnDelete(false); // FK_Users_Rules
        }
    }

    #endregion

}
// </auto-generated>

