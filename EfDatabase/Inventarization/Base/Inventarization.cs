















// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//



// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning



namespace EfDatabase.Inventarization.Base
{

    using Newtonsoft.Json;



    #region Unit of work


    public interface IInventarizationContext : System.IDisposable
    {

        System.Data.Entity.DbSet<BlockPower> BlockPowers { get; set; } // BlockPower


        System.Data.Entity.DbSet<BookAccounting> BookAccountings { get; set; } // BookAccounting


        System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification


        System.Data.Entity.DbSet<ComputerIpAdressSynhronization> ComputerIpAdressSynhronizations { get; set; } // ComputerIpAdressSynhronization


        System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave


        System.Data.Entity.DbSet<Document> Documents { get; set; } // Document


        System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel


        System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel


        System.Data.Entity.DbSet<History> Histories { get; set; } // History


        System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic


        System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable


        System.Data.Entity.DbSet<InfoView> InfoViews { get; set; } // InfoView


        System.Data.Entity.DbSet<IsProcessComplete> IsProcessCompletes { get; set; } // IsProcessComplete


        System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet


        System.Data.Entity.DbSet<LogicaSelect> LogicaSelects { get; set; } // LogicaSelect


        System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu


        System.Data.Entity.DbSet<ModelBlockPower> ModelBlockPowers { get; set; } // ModelBlockPower


        System.Data.Entity.DbSet<ModelSwithe> ModelSwithes { get; set; } // ModelSwithes


        System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors


        System.Data.Entity.DbSet<Namedocument> Namedocuments { get; set; } // Namedocument


        System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitor


        System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock


        System.Data.Entity.DbSet<Organization> Organizations { get; set; } // Organization


        System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel


        System.Data.Entity.DbSet<OtdelPadeg> OtdelPadegs { get; set; } // OtdelPadeg


        System.Data.Entity.DbSet<Position> Positions { get; set; } // Position


        System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer


        System.Data.Entity.DbSet<ProizvoditelBlockPower> ProizvoditelBlockPowers { get; set; } // ProizvoditelBlockPower


        System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules


        System.Data.Entity.DbSet<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer


        System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing


        System.Data.Entity.DbSet<Supply> Supplies { get; set; } // Supply


        System.Data.Entity.DbSet<Swithe> Swithes { get; set; } // Swithes


        System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock


        System.Data.Entity.DbSet<Telephon> Telephons { get; set; } // Telephon


        System.Data.Entity.DbSet<User> Users { get; set; } // Users


        System.Data.Entity.DbSet<UsersIsActualsStat> UsersIsActualsStats { get; set; } // UsersIsActualsStat





        int SaveChanges();

        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);

        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();


    }


    #endregion



    #region Database context


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InventarizationContext : System.Data.Entity.DbContext, IInventarizationContext
    {

        public System.Data.Entity.DbSet<BlockPower> BlockPowers { get; set; } // BlockPower


        public System.Data.Entity.DbSet<BookAccounting> BookAccountings { get; set; } // BookAccounting


        public System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification


        public System.Data.Entity.DbSet<ComputerIpAdressSynhronization> ComputerIpAdressSynhronizations { get; set; } // ComputerIpAdressSynhronization


        public System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave


        public System.Data.Entity.DbSet<Document> Documents { get; set; } // Document


        public System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel


        public System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel


        public System.Data.Entity.DbSet<History> Histories { get; set; } // History


        public System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic


        public System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable


        public System.Data.Entity.DbSet<InfoView> InfoViews { get; set; } // InfoView


        public System.Data.Entity.DbSet<IsProcessComplete> IsProcessCompletes { get; set; } // IsProcessComplete


        public System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet


        public System.Data.Entity.DbSet<LogicaSelect> LogicaSelects { get; set; } // LogicaSelect


        public System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu


        public System.Data.Entity.DbSet<ModelBlockPower> ModelBlockPowers { get; set; } // ModelBlockPower


        public System.Data.Entity.DbSet<ModelSwithe> ModelSwithes { get; set; } // ModelSwithes


        public System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors


        public System.Data.Entity.DbSet<Namedocument> Namedocuments { get; set; } // Namedocument


        public System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitor


        public System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock


        public System.Data.Entity.DbSet<Organization> Organizations { get; set; } // Organization


        public System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel


        public System.Data.Entity.DbSet<OtdelPadeg> OtdelPadegs { get; set; } // OtdelPadeg


        public System.Data.Entity.DbSet<Position> Positions { get; set; } // Position


        public System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer


        public System.Data.Entity.DbSet<ProizvoditelBlockPower> ProizvoditelBlockPowers { get; set; } // ProizvoditelBlockPower


        public System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules


        public System.Data.Entity.DbSet<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer


        public System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing


        public System.Data.Entity.DbSet<Supply> Supplies { get; set; } // Supply


        public System.Data.Entity.DbSet<Swithe> Swithes { get; set; } // Swithes


        public System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock


        public System.Data.Entity.DbSet<Telephon> Telephons { get; set; } // Telephon


        public System.Data.Entity.DbSet<User> Users { get; set; } // Users


        public System.Data.Entity.DbSet<UsersIsActualsStat> UsersIsActualsStats { get; set; } // UsersIsActualsStat



        static InventarizationContext()
        {

            System.Data.Entity.Database.SetInitializer<InventarizationContext>(null);

        }


        public InventarizationContext()
            : base("Name=Inventarization")
        {

        }


        public InventarizationContext(string connectionString)
            : base(connectionString)
        {

        }

        public InventarizationContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {

        }

        public InventarizationContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {

        }

        public InventarizationContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {

        }

        public InventarizationContext(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {

        }

        protected override void Dispose(bool disposing)
        {

            base.Dispose(disposing);
        }


        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }


        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);



            modelBuilder.Configurations.Add(new BlockPowerConfiguration());

            modelBuilder.Configurations.Add(new BookAccountingConfiguration());

            modelBuilder.Configurations.Add(new ClassificationConfiguration());

            modelBuilder.Configurations.Add(new ComputerIpAdressSynhronizationConfiguration());

            modelBuilder.Configurations.Add(new CopySaveConfiguration());

            modelBuilder.Configurations.Add(new DocumentConfiguration());

            modelBuilder.Configurations.Add(new FullModelConfiguration());

            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration());

            modelBuilder.Configurations.Add(new HistoryConfiguration());

            modelBuilder.Configurations.Add(new InfoLogicConfiguration());

            modelBuilder.Configurations.Add(new InfoTableConfiguration());

            modelBuilder.Configurations.Add(new InfoViewConfiguration());

            modelBuilder.Configurations.Add(new IsProcessCompleteConfiguration());

            modelBuilder.Configurations.Add(new KabinetConfiguration());

            modelBuilder.Configurations.Add(new LogicaSelectConfiguration());

            modelBuilder.Configurations.Add(new MfuConfiguration());

            modelBuilder.Configurations.Add(new ModelBlockPowerConfiguration());

            modelBuilder.Configurations.Add(new ModelSwitheConfiguration());

            modelBuilder.Configurations.Add(new MonitorConfiguration());

            modelBuilder.Configurations.Add(new NamedocumentConfiguration());

            modelBuilder.Configurations.Add(new NameMonitorConfiguration());

            modelBuilder.Configurations.Add(new NameSysBlockConfiguration());

            modelBuilder.Configurations.Add(new OrganizationConfiguration());

            modelBuilder.Configurations.Add(new OtdelConfiguration());

            modelBuilder.Configurations.Add(new OtdelPadegConfiguration());

            modelBuilder.Configurations.Add(new PositionConfiguration());

            modelBuilder.Configurations.Add(new PrinterConfiguration());

            modelBuilder.Configurations.Add(new ProizvoditelBlockPowerConfiguration());

            modelBuilder.Configurations.Add(new RuleConfiguration());

            modelBuilder.Configurations.Add(new ScanerAndCamerConfiguration());

            modelBuilder.Configurations.Add(new StatusingConfiguration());

            modelBuilder.Configurations.Add(new SupplyConfiguration());

            modelBuilder.Configurations.Add(new SwitheConfiguration());

            modelBuilder.Configurations.Add(new SysBlockConfiguration());

            modelBuilder.Configurations.Add(new TelephonConfiguration());

            modelBuilder.Configurations.Add(new UserConfiguration());

            modelBuilder.Configurations.Add(new UsersIsActualsStatConfiguration());


        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {

            modelBuilder.Configurations.Add(new BlockPowerConfiguration(schema));

            modelBuilder.Configurations.Add(new BookAccountingConfiguration(schema));

            modelBuilder.Configurations.Add(new ClassificationConfiguration(schema));

            modelBuilder.Configurations.Add(new ComputerIpAdressSynhronizationConfiguration(schema));

            modelBuilder.Configurations.Add(new CopySaveConfiguration(schema));

            modelBuilder.Configurations.Add(new DocumentConfiguration(schema));

            modelBuilder.Configurations.Add(new FullModelConfiguration(schema));

            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration(schema));

            modelBuilder.Configurations.Add(new HistoryConfiguration(schema));

            modelBuilder.Configurations.Add(new InfoLogicConfiguration(schema));

            modelBuilder.Configurations.Add(new InfoTableConfiguration(schema));

            modelBuilder.Configurations.Add(new InfoViewConfiguration(schema));

            modelBuilder.Configurations.Add(new IsProcessCompleteConfiguration(schema));

            modelBuilder.Configurations.Add(new KabinetConfiguration(schema));

            modelBuilder.Configurations.Add(new LogicaSelectConfiguration(schema));

            modelBuilder.Configurations.Add(new MfuConfiguration(schema));

            modelBuilder.Configurations.Add(new ModelBlockPowerConfiguration(schema));

            modelBuilder.Configurations.Add(new ModelSwitheConfiguration(schema));

            modelBuilder.Configurations.Add(new MonitorConfiguration(schema));

            modelBuilder.Configurations.Add(new NamedocumentConfiguration(schema));

            modelBuilder.Configurations.Add(new NameMonitorConfiguration(schema));

            modelBuilder.Configurations.Add(new NameSysBlockConfiguration(schema));

            modelBuilder.Configurations.Add(new OrganizationConfiguration(schema));

            modelBuilder.Configurations.Add(new OtdelConfiguration(schema));

            modelBuilder.Configurations.Add(new OtdelPadegConfiguration(schema));

            modelBuilder.Configurations.Add(new PositionConfiguration(schema));

            modelBuilder.Configurations.Add(new PrinterConfiguration(schema));

            modelBuilder.Configurations.Add(new ProizvoditelBlockPowerConfiguration(schema));

            modelBuilder.Configurations.Add(new RuleConfiguration(schema));

            modelBuilder.Configurations.Add(new ScanerAndCamerConfiguration(schema));

            modelBuilder.Configurations.Add(new StatusingConfiguration(schema));

            modelBuilder.Configurations.Add(new SupplyConfiguration(schema));

            modelBuilder.Configurations.Add(new SwitheConfiguration(schema));

            modelBuilder.Configurations.Add(new SysBlockConfiguration(schema));

            modelBuilder.Configurations.Add(new TelephonConfiguration(schema));

            modelBuilder.Configurations.Add(new UserConfiguration(schema));

            modelBuilder.Configurations.Add(new UsersIsActualsStatConfiguration(schema));


            return modelBuilder;
        }

    }

    #endregion



    #region Database context factory


    public class InventarizationContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<InventarizationContext>
    {
        public InventarizationContext Create()
        {
            return new InventarizationContext();
        }
    }


    #endregion



    #region POCO classes




    // BlockPower


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class BlockPower
    {



        ///<summary>
        /// Ун бесперебойника
        ///</summary>
        public int IdBlockPowers { get; set; } // IdBlockPowers (Primary key)


        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdProizvoditelBP { get; set; } // IdProizvoditelBP


        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModelBP { get; set; } // IdModelBP


        ///<summary>
        /// Ун поставки
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Заводской номер
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)


        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)


        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent Kabinet pointed by [BlockPower].([IdNumberKabinet]) (FK_BlockPower_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_BlockPower_Kabinet


        /// <summary>
        /// Parent ModelBlockPower pointed by [BlockPower].([IdModelBP]) (FK_BlockPower_ModelBlockPower)
        /// </summary>

        public virtual ModelBlockPower ModelBlockPower { get; set; } // FK_BlockPower_ModelBlockPower


        /// <summary>
        /// Parent ProizvoditelBlockPower pointed by [BlockPower].([IdProizvoditelBP]) (FK_BlockPower_ProizvoditelBlockPower)
        /// </summary>

        public virtual ProizvoditelBlockPower ProizvoditelBlockPower { get; set; } // FK_BlockPower_ProizvoditelBlockPower


        /// <summary>
        /// Parent Statusing pointed by [BlockPower].([IdStatus]) (FK_Statusing_BlockPower)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_BlockPower


        /// <summary>
        /// Parent Supply pointed by [BlockPower].([IdSupply]) (FK_BlockPower_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_BlockPower_Supply


        /// <summary>
        /// Parent User pointed by [BlockPower].([IdUser]) (FK_BlockPower_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_BlockPower_Users



        public BlockPower()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // BookAccounting


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class BookAccounting
    {


        public int IdBook { get; set; } // IdBook (Primary key)

        public int? IdNameBook { get; set; } // IdNameBook

        public int? IdKeys { get; set; } // IdKeys

        public int? IdModel { get; set; } // IdModel

        public string ClassName { get; set; } // ClassName (length: 256)

        public string NameModel { get; set; } // NameModel (length: 256)

        public bool? IsFileExists { get; set; } // IsFileExists

        public string NameBook { get; set; } // NameBook (length: 128)

        public byte[] Book { get; set; } // Book (length: 2147483647)

        public string TypeFile { get; set; } // TypeFile (length: 5)

        public bool? IsActual { get; set; } // IsActual

        public System.DateTime? DateCreate { get; set; } // DateCreate




        // Foreign keys



        /// <summary>
        /// Parent Namedocument pointed by [BookAccounting].([IdNameBook]) (FK_BookAccounting_Namedocument)
        /// </summary>

        public virtual Namedocument Namedocument { get; set; } // FK_BookAccounting_Namedocument



        public BookAccounting()
        {

            DateCreate = System.DateTime.Now;

        }

    }



    // Classification


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Classification
    {



        ///<summary>
        /// Ун классификации
        ///</summary>
        public int IdClasification { get; set; } // IdClasification (Primary key)


        ///<summary>
        /// Наименование классификации
        ///</summary>
        public string NameClass { get; set; } // NameClass (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child FullModels where [FullModel].[IdClasification] point to this entity (FK_Classification_FullModel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<FullModel> FullModels { get; set; } // FullModel.FK_Classification_FullModel




        public Classification()
        {

            DataCreate = System.DateTime.Now;


            FullModels = new System.Collections.Generic.List<FullModel>();
        }

    }



    // ComputerIpAdressSynhronization


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ComputerIpAdressSynhronization
    {


        public int Id { get; set; } // Id (Primary key)

        public string NameHost { get; set; } // NameHost (length: 256)

        public string IpAdress { get; set; } // IpAdress (length: 256)

        public string StatusIp { get; set; } // StatusIp (length: 256)

        public string MacAdress { get; set; } // MacAdress (length: 256)

        public string UserName { get; set; } // UserName (length: 256)

        public System.DateTime? DateCreate { get; set; } // DateCreate





        public ComputerIpAdressSynhronization()
        {

            DateCreate = System.DateTime.Now;

        }

    }



    // CopySave


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class CopySave
    {



        ///<summary>
        /// Ун CopySave
        ///</summary>
        public int IdCopySave { get; set; } // IdCopySave (Primary key)


        ///<summary>
        /// Наименование CopySave
        ///</summary>
        public string NameCopySave { get; set; } // NameCopySave (length: 64)


        ///<summary>
        /// Серийный номер CopySave
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 64)


        ///<summary>
        /// Инвентарный номер CopySave
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Mfus where [Mfu].[IdCopySave] point to this entity (FK_CopySave_Mfu)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_CopySave_Mfu




        public CopySave()
        {

            DataCreate = System.DateTime.Now;


            Mfus = new System.Collections.Generic.List<Mfu>();
        }

    }



    // Document


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Document
    {



        ///<summary>
        /// Уникальный номер
        ///</summary>
        public int Id { get; set; } // Id (Primary key)


        ///<summary>
        /// Ун наименования документа
        ///</summary>
        public int? IdNamedocument { get; set; } // IdNamedocument


        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Содержание
        ///</summary>
        public string InfoUserFile { get; set; } // InfoUserFile (length: 256)


        ///<summary>
        /// Присутствие файла
        ///</summary>
        public bool? IsFileExists { get; set; } // IsFileExists


        ///<summary>
        /// Имя файла
        ///</summary>
        public string Namefile { get; set; } // Namefile (length: 128)


        ///<summary>
        /// Документ
        ///</summary>
        public byte[] Document_ { get; set; } // Document (length: 2147483647)


        ///<summary>
        /// Тип документа
        ///</summary>
        public string TypeFile { get; set; } // TypeFile (length: 5)


        ///<summary>
        /// Актуальность документа
        ///</summary>
        public bool? IsActual { get; set; } // IsActual


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate




        // Foreign keys



        /// <summary>
        /// Parent Namedocument pointed by [Document].([IdNamedocument]) (FK_Document_Namedocument)
        /// </summary>

        public virtual Namedocument Namedocument { get; set; } // FK_Document_Namedocument


        /// <summary>
        /// Parent User pointed by [Document].([IdUser]) (FK_Users_Document)
        /// </summary>

        public virtual User User { get; set; } // FK_Users_Document



        public Document()
        {

            DateCreate = System.DateTime.Now;

        }

    }



    // FullModel


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class FullModel
    {



        ///<summary>
        /// Ун модели
        ///</summary>
        public int IdModel { get; set; } // IdModel (Primary key)


        ///<summary>
        /// Наименование модели
        ///</summary>
        public string NameModel { get; set; } // NameModel (length: 64)

        public int IdClasification { get; set; } // IdClasification


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Mfus where [Mfu].[IdModel] point to this entity (FK_Mfu_FullModel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullModel

        /// <summary>
        /// Child Printers where [Printer].[IdModel] point to this entity (FK_Printer_FullModel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullModel

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdModel] point to this entity (FK_ScanerAndCamer_FullModel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_FullModel



        // Foreign keys



        /// <summary>
        /// Parent Classification pointed by [FullModel].([IdClasification]) (FK_Classification_FullModel)
        /// </summary>

        public virtual Classification Classification { get; set; } // FK_Classification_FullModel



        public FullModel()
        {

            DataCreate = System.DateTime.Now;


            Mfus = new System.Collections.Generic.List<Mfu>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
        }

    }



    // FullProizvoditel


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class FullProizvoditel
    {



        ///<summary>
        /// Ун производителя
        ///</summary>
        public int IdProizvoditel { get; set; } // IdProizvoditel (Primary key)


        ///<summary>
        /// Наименование производителя
        ///</summary>
        public string NameProizvoditel { get; set; } // NameProizvoditel (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Mfus where [Mfu].[IdProizvoditel] point to this entity (FK_Mfu_FullProizvoditel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullProizvoditel

        /// <summary>
        /// Child Printers where [Printer].[IdProizvoditel] point to this entity (FK_Printer_FullProizvoditel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullProizvoditel

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdProizvoditel] point to this entity (FK_ScanerAndCamer_FullProizvoditel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_FullProizvoditel




        public FullProizvoditel()
        {

            DataCreate = System.DateTime.Now;


            Mfus = new System.Collections.Generic.List<Mfu>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
        }

    }



    // History


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class History
    {


        public int Id { get; set; } // Id (Primary key)

        public string IdHistory { get; set; } // IdHistory (length: 64)

        public int? IdModel { get; set; } // IdModel

        public string NameModelClass { get; set; } // NameModelClass (length: 512)

        public int? IdUser { get; set; } // IdUser

        public string OldModelColums { get; set; } // OldModelColums (length: 1024)

        public string NewModelColums { get; set; } // NewModelColums (length: 1024)

        public System.DateTime? DataCreate { get; set; } // DataCreate





        public History()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // InfoLogic


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoLogic
    {



        ///<summary>
        /// Ключ таблицы
        ///</summary>
        public int Id { get; set; } // Id (Primary key)


        ///<summary>
        /// Информация о процедуре
        ///</summary>
        public string InfoProcedure { get; set; } // InfoProcedure (length: 64)


        ///<summary>
        /// Параметры процедуры
        ///</summary>
        public string ParamProcedure { get; set; } // ParamProcedure (length: 64)


        ///<summary>
        /// Название процедуры
        ///</summary>
        public string NameProcedure { get; set; } // NameProcedure (length: 64)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate





        public InfoLogic()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // InfoTable


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoTable
    {


        public int Id { get; set; } // Id (Primary key)

        public string NameTable { get; set; } // NameTable (length: 64)

        public string NameColumns { get; set; } // NameColumns (length: 64)

        public string InfoColumn { get; set; } // InfoColumn (length: 256)

        public System.DateTime? DataCreate { get; set; } // DataCreate





        public InfoTable()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // InfoView


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoView
    {


        public int Id { get; set; } // Id (Primary key)

        public string NameView { get; set; } // NameView (length: 64)

        public string NameViewColumns { get; set; } // NameViewColumns (length: 64)

        public string InfoColumn { get; set; } // InfoColumn (length: 256)

        public string FormatView { get; set; } // FormatView (length: 16)

        public bool? IsVisible { get; set; } // IsVisible

        public System.DateTime? DataCreate { get; set; } // DataCreate





        public InfoView()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // IsProcessComplete


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class IsProcessComplete
    {


        public int Id { get; set; } // Id (Primary key)

        public string NameProcess { get; set; } // NameProcess (length: 256)

        public bool? IsComplete { get; set; } // IsComplete

        public System.DateTime? DataStart { get; set; } // DataStart

        public System.DateTime? DataFinish { get; set; } // DataFinish




    }



    // Kabinet


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Kabinet
    {



        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int IdNumberKabinet { get; set; } // IdNumberKabinet (Primary key)


        ///<summary>
        /// Номер кабинета
        ///</summary>
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdNumberKabinet] point to this entity (FK_BlockPower_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Kabinet

        /// <summary>
        /// Child Mfus where [Mfu].[IdNumberKabinet] point to this entity (FK_Mfu_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Kabinet

        /// <summary>
        /// Child Monitors where [Monitors].[IdNumberKabinet] point to this entity (FK_Monitors_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Kabinet

        /// <summary>
        /// Child Printers where [Printer].[IdNumberKabinet] point to this entity (FK_Printer_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Kabinet

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdNumberKabinet] point to this entity (FK_ScanerAndCamer_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Kabinet

        /// <summary>
        /// Child Swithes where [Swithes].[IdNumberKabinet] point to this entity (FK_Swithes_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Kabinet

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdNumberKabinet] point to this entity (FK_SysBlock_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Kabinet

        /// <summary>
        /// Child Telephons where [Telephon].[IdNumberKabinet] point to this entity (FK_Telephon_Kabinet)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Kabinet




        public Kabinet()
        {

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();

            Mfus = new System.Collections.Generic.List<Mfu>();

            Monitors = new System.Collections.Generic.List<Monitor>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();

            Swithes = new System.Collections.Generic.List<Swithe>();

            SysBlocks = new System.Collections.Generic.List<SysBlock>();

            Telephons = new System.Collections.Generic.List<Telephon>();
        }

    }



    // LogicaSelect


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class LogicaSelect
    {


        public int Id { get; set; } // Id (Primary key)

        public string SelectInfo { get; set; } // SelectInfo (length: 512)

        public string SelectedParametr { get; set; } // SelectedParametr

        public string SelectUser { get; set; } // SelectUser

        public System.DateTime? DataCreate { get; set; } // DataCreate





        public LogicaSelect()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // Mfu


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Mfu
    {



        ///<summary>
        /// Ун МФУ
        ///</summary>
        public int IdMfu { get; set; } // IdMfu (Primary key)


        ///<summary>
        /// Уникальный номер пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун производителя МФУ
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel


        ///<summary>
        /// Ун модели МФУ
        ///</summary>
        public int? IdModel { get; set; } // IdModel


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун номера кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Заводской номер МФУ
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)


        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)


        ///<summary>
        /// Инвентарный номер МФУ
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)


        ///<summary>
        /// Изменненый инвентарный номер МФУ
        ///</summary>
        public string IzmInventarNumber { get; set; } // IzmInventarNumber (length: 128)


        ///<summary>
        /// Ip Адрес МФУ
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)


        ///<summary>
        /// Ун CopySave
        ///</summary>
        public int? IdCopySave { get; set; } // IdCopySave


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent CopySave pointed by [Mfu].([IdCopySave]) (FK_CopySave_Mfu)
        /// </summary>

        public virtual CopySave CopySave { get; set; } // FK_CopySave_Mfu


        /// <summary>
        /// Parent FullModel pointed by [Mfu].([IdModel]) (FK_Mfu_FullModel)
        /// </summary>

        public virtual FullModel FullModel { get; set; } // FK_Mfu_FullModel


        /// <summary>
        /// Parent FullProizvoditel pointed by [Mfu].([IdProizvoditel]) (FK_Mfu_FullProizvoditel)
        /// </summary>

        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_Mfu_FullProizvoditel


        /// <summary>
        /// Parent Kabinet pointed by [Mfu].([IdNumberKabinet]) (FK_Mfu_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_Mfu_Kabinet


        /// <summary>
        /// Parent Statusing pointed by [Mfu].([IdStatus]) (FK_Statusing_Mfu)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Mfu


        /// <summary>
        /// Parent Supply pointed by [Mfu].([IdSupply]) (FK_Mfu_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_Mfu_Supply


        /// <summary>
        /// Parent User pointed by [Mfu].([IdUser]) (FK_Mfu_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_Mfu_Users



        public Mfu()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // ModelBlockPower


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ModelBlockPower
    {



        ///<summary>
        /// Ун модели
        ///</summary>
        public int IdModelBP { get; set; } // IdModelBP (Primary key)


        ///<summary>
        /// Наименование модели
        ///</summary>
        public string Name { get; set; } // Name (length: 512)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdModelBP] point to this entity (FK_BlockPower_ModelBlockPower)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_ModelBlockPower




        public ModelBlockPower()
        {

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();
        }

    }



    // ModelSwithes


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ModelSwithe
    {


        public int IdModelSwithes { get; set; } // IdModelSwithes (Primary key)

        public string NameModel { get; set; } // NameModel (length: 128)

        public string CountPort { get; set; } // CountPort (length: 128)

        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Swithes where [Swithes].[IdModelSwithes] point to this entity (FK_Swithes_ModelSwithes)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_ModelSwithes




        public ModelSwithe()
        {

            DataCreate = System.DateTime.Now;


            Swithes = new System.Collections.Generic.List<Swithe>();
        }

    }



    // Monitors


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Monitor
    {



        ///<summary>
        /// Уникальный номер монитора
        ///</summary>
        public int IdMonitor { get; set; } // IdMonitor (Primary key)


        ///<summary>
        /// Уникальный номер пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун модели монитора
        ///</summary>
        public int? IdModelMonitor { get; set; } // IdModelMonitor


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун номера кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Инвентарный номер монитора
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)


        ///<summary>
        /// Серийный номер монитора
        ///</summary>
        public string InventarNumMonitor { get; set; } // InventarNumMonitor (length: 128)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent Kabinet pointed by [Monitors].([IdNumberKabinet]) (FK_Monitors_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_Monitors_Kabinet


        /// <summary>
        /// Parent NameMonitor pointed by [Monitors].([IdModelMonitor]) (FK_Monitors_NameMonitor)
        /// </summary>

        public virtual NameMonitor NameMonitor { get; set; } // FK_Monitors_NameMonitor


        /// <summary>
        /// Parent Statusing pointed by [Monitors].([IdStatus]) (FK_Statusing_Monitors)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Monitors


        /// <summary>
        /// Parent Supply pointed by [Monitors].([IdSupply]) (FK_Monitors_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_Monitors_Supply


        /// <summary>
        /// Parent User pointed by [Monitors].([IdUser]) (FK_Monitors_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_Monitors_Users



        public Monitor()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // Namedocument


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Namedocument
    {



        ///<summary>
        /// Ун документа
        ///</summary>
        public int IdNamedocument { get; set; } // IdNamedocument (Primary key)


        ///<summary>
        /// Наименование документа
        ///</summary>
        public string NameDocument { get; set; } // NameDocument (length: 128)


        ///<summary>
        /// Дата создания документа
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate



        // Reverse navigation



        /// <summary>
        /// Child BookAccountings where [BookAccounting].[IdNameBook] point to this entity (FK_BookAccounting_Namedocument)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BookAccounting> BookAccountings { get; set; } // BookAccounting.FK_BookAccounting_Namedocument

        /// <summary>
        /// Child Documents where [Document].[IdNamedocument] point to this entity (FK_Document_Namedocument)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Document> Documents { get; set; } // Document.FK_Document_Namedocument




        public Namedocument()
        {

            DateCreate = System.DateTime.Now;


            BookAccountings = new System.Collections.Generic.List<BookAccounting>();

            Documents = new System.Collections.Generic.List<Document>();
        }

    }



    // NameMonitor


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class NameMonitor
    {



        ///<summary>
        /// Уникальный номер
        ///</summary>
        public int IdModelMonitor { get; set; } // IdModelMonitor (Primary key)


        ///<summary>
        /// Название мониторов
        ///</summary>
        public string Name { get; set; } // Name (length: 128)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Monitors where [Monitors].[IdModelMonitor] point to this entity (FK_Monitors_NameMonitor)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_NameMonitor




        public NameMonitor()
        {

            DataCreate = System.DateTime.Now;


            Monitors = new System.Collections.Generic.List<Monitor>();
        }

    }



    // NameSysBlock


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class NameSysBlock
    {



        ///<summary>
        /// Уникальный номер
        ///</summary>
        public int IdModelSysBlock { get; set; } // IdModelSysBlock (Primary key)


        ///<summary>
        /// Марка системного блока
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdModelSysBlock] point to this entity (FK_NameSysBlock_SysBlock)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_NameSysBlock_SysBlock




        public NameSysBlock()
        {

            DataCreate = System.DateTime.Now;


            SysBlocks = new System.Collections.Generic.List<SysBlock>();
        }

    }



    // Organization


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Organization
    {


        public int Id { get; set; } // Id (Primary key)

        public string NameOrganization { get; set; } // NameOrganization (length: 512)

        public string NameFace { get; set; } // NameFace (length: 512)

        public string InameOrganization { get; set; } // InameOrganization (length: 512)

        public string RnameOrganization { get; set; } // RnameOrganization (length: 512)

        public string DnameOrganization { get; set; } // DnameOrganization (length: 512)

        public string VnameOrganization { get; set; } // VnameOrganization (length: 512)

        public string TnameOrganization { get; set; } // TnameOrganization (length: 512)

        public string PnameOrganization { get; set; } // PnameOrganization (length: 512)

        public string NameDepartament { get; set; } // NameDepartament (length: 512)

        public System.DateTime? DataCreate { get; set; } // DataCreate





        public Organization()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // Otdel


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Otdel
    {



        ///<summary>
        /// Номер отдела
        ///</summary>
        public int IdOtdel { get; set; } // IdOtdel (Primary key)


        ///<summary>
        /// Константа начальника отдела
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Наименование отдела
        ///</summary>
        public string NameOtdel { get; set; } // NameOtdel (length: 256)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Parent (One-to-One) Otdel pointed by [OtdelPadeg].[IdOtdel] (FK_Otdel_OtdelPadeg)
        /// </summary>

        [JsonIgnore]

        public virtual OtdelPadeg OtdelPadeg { get; set; } // OtdelPadeg.FK_Otdel_OtdelPadeg

        /// <summary>
        /// Child Users where [Users].[IdOtdel] point to this entity (FK_Otdel_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Otdel_Users



        // Foreign keys



        /// <summary>
        /// Parent User pointed by [Otdel].([IdUser]) (FK_Users_Otdel)
        /// </summary>

        public virtual User User { get; set; } // FK_Users_Otdel



        public Otdel()
        {

            DataCreate = System.DateTime.Now;


            Users = new System.Collections.Generic.List<User>();
        }

    }



    // OtdelPadeg


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class OtdelPadeg
    {


        public int IdOtdel { get; set; } // IdOtdel (Primary key)

        public string InameOtdel { get; set; } // InameOtdel (length: 256)

        public string RnameOtdel { get; set; } // RnameOtdel (length: 256)

        public string DnameOtdel { get; set; } // DnameOtdel (length: 256)

        public string VnameOtdel { get; set; } // VnameOtdel (length: 256)

        public string TnameOtdel { get; set; } // TnameOtdel (length: 256)

        public string PnameOtdel { get; set; } // PnameOtdel (length: 256)

        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent Otdel pointed by [OtdelPadeg].([IdOtdel]) (FK_Otdel_OtdelPadeg)
        /// </summary>

        public virtual Otdel Otdel { get; set; } // FK_Otdel_OtdelPadeg



        public OtdelPadeg()
        {

            DataCreate = System.DateTime.Now;

        }

    }



    // Position


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Position
    {



        ///<summary>
        /// Ун должности
        ///</summary>
        public int IdPosition { get; set; } // IdPosition (Primary key)


        ///<summary>
        /// Наименование должности
        ///</summary>
        public string NamePosition { get; set; } // NamePosition (length: 256)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Users where [Users].[IdPosition] point to this entity (FK_Users_Position)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Position




        public Position()
        {

            DataCreate = System.DateTime.Now;


            Users = new System.Collections.Generic.List<User>();
        }

    }



    // Printer


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Printer
    {



        ///<summary>
        /// Ун принтера
        ///</summary>
        public int IdPrinter { get; set; } // IdPrinter (Primary key)


        ///<summary>
        /// Уникальный номер пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун производителя принтера
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel


        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун номера кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Заводской номер принтера
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)


        ///<summary>
        /// Сервисный номер принтера
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)


        ///<summary>
        /// Инвентарный номер принтера
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)


        ///<summary>
        /// Изменненый инвентарный номер принтера
        ///</summary>
        public string IzmInventarNumber { get; set; } // IzmInventarNumber (length: 128)


        ///<summary>
        /// Ip Адрес Принтера
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent FullModel pointed by [Printer].([IdModel]) (FK_Printer_FullModel)
        /// </summary>

        public virtual FullModel FullModel { get; set; } // FK_Printer_FullModel


        /// <summary>
        /// Parent FullProizvoditel pointed by [Printer].([IdProizvoditel]) (FK_Printer_FullProizvoditel)
        /// </summary>

        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_Printer_FullProizvoditel


        /// <summary>
        /// Parent Kabinet pointed by [Printer].([IdNumberKabinet]) (FK_Printer_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_Printer_Kabinet


        /// <summary>
        /// Parent Statusing pointed by [Printer].([IdStatus]) (FK_Statusing_Printer)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Printer


        /// <summary>
        /// Parent Supply pointed by [Printer].([IdSupply]) (FK_Printer_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_Printer_Supply


        /// <summary>
        /// Parent User pointed by [Printer].([IdUser]) (FK_Printer_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_Printer_Users



        public Printer()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // ProizvoditelBlockPower


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ProizvoditelBlockPower
    {



        ///<summary>
        /// Ун производителя
        ///</summary>
        public int IdProizvoditelBP { get; set; } // IdProizvoditelBP (Primary key)


        ///<summary>
        /// Наименование производителя
        ///</summary>
        public string Name { get; set; } // Name (length: 512)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdProizvoditelBP] point to this entity (FK_BlockPower_ProizvoditelBlockPower)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_ProizvoditelBlockPower




        public ProizvoditelBlockPower()
        {

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();
        }

    }



    // Rules


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Rule
    {



        ///<summary>
        /// Ун роли
        ///</summary>
        public int IdRule { get; set; } // IdRule (Primary key)


        ///<summary>
        /// Имя роли
        ///</summary>
        public string NameRules { get; set; } // NameRules (length: 128)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Users where [Users].[IdRule] point to this entity (FK_Users_Rules)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Rules




        public Rule()
        {

            DataCreate = System.DateTime.Now;


            Users = new System.Collections.Generic.List<User>();
        }

    }



    // ScanerAndCamer


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ScanerAndCamer
    {



        ///<summary>
        /// Ун сканера
        ///</summary>
        public int IdScaner { get; set; } // IdScaner (Primary key)


        ///<summary>
        /// Уникальный номер пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун производителя сканера
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel


        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун номера кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Заводской номер сканера
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)


        ///<summary>
        /// Сервисный номер сканера
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)


        ///<summary>
        /// Инвентарный номер сканера
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)


        ///<summary>
        /// Изменненый инвентарный номер сканера
        ///</summary>
        public string IzmInventarNumber { get; set; } // IzmInventarNumber (length: 128)


        ///<summary>
        /// Ip Адрес Камеры или сканера
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent FullModel pointed by [ScanerAndCamer].([IdModel]) (FK_ScanerAndCamer_FullModel)
        /// </summary>

        public virtual FullModel FullModel { get; set; } // FK_ScanerAndCamer_FullModel


        /// <summary>
        /// Parent FullProizvoditel pointed by [ScanerAndCamer].([IdProizvoditel]) (FK_ScanerAndCamer_FullProizvoditel)
        /// </summary>

        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_ScanerAndCamer_FullProizvoditel


        /// <summary>
        /// Parent Kabinet pointed by [ScanerAndCamer].([IdNumberKabinet]) (FK_ScanerAndCamer_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_ScanerAndCamer_Kabinet


        /// <summary>
        /// Parent Statusing pointed by [ScanerAndCamer].([IdStatus]) (FK_Statusing_Scaner)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Scaner


        /// <summary>
        /// Parent Supply pointed by [ScanerAndCamer].([IdSupply]) (FK_ScanerAndCamer_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_ScanerAndCamer_Supply


        /// <summary>
        /// Parent User pointed by [ScanerAndCamer].([IdUser]) (FK_ScanerAndCamer_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_ScanerAndCamer_Users



        public ScanerAndCamer()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // Statusing


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Statusing
    {



        ///<summary>
        /// Ун статуса
        ///</summary>
        public int IdStatus { get; set; } // IdStatus (Primary key)


        ///<summary>
        /// Наименование статуса
        ///</summary>
        public string Name { get; set; } // Name (length: 64)


        ///<summary>
        /// Цвет статуса
        ///</summary>
        public string Color { get; set; } // Color (length: 64)


        ///<summary>
        /// Цвет статуса
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdStatus] point to this entity (FK_Statusing_BlockPower)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_Statusing_BlockPower

        /// <summary>
        /// Child Mfus where [Mfu].[IdStatus] point to this entity (FK_Statusing_Mfu)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Statusing_Mfu

        /// <summary>
        /// Child Monitors where [Monitors].[IdStatus] point to this entity (FK_Statusing_Monitors)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Statusing_Monitors

        /// <summary>
        /// Child Printers where [Printer].[IdStatus] point to this entity (FK_Statusing_Printer)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Statusing_Printer

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdStatus] point to this entity (FK_Statusing_Scaner)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_Statusing_Scaner

        /// <summary>
        /// Child Swithes where [Swithes].[IdStatus] point to this entity (FK_Statusing_Swithes)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Statusing_Swithes

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdStatus] point to this entity (FK_Statusing_SysBlock)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_Statusing_SysBlock

        /// <summary>
        /// Child Telephons where [Telephon].[IdStatus] point to this entity (FK_Statusing_Telephon)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Statusing_Telephon




        public Statusing()
        {

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();

            Mfus = new System.Collections.Generic.List<Mfu>();

            Monitors = new System.Collections.Generic.List<Monitor>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();

            Swithes = new System.Collections.Generic.List<Swithe>();

            SysBlocks = new System.Collections.Generic.List<SysBlock>();

            Telephons = new System.Collections.Generic.List<Telephon>();
        }

    }



    // Supply


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Supply
    {



        ///<summary>
        /// Ун поставки
        ///</summary>
        public int IdSupply { get; set; } // IdSupply (Primary key)


        ///<summary>
        /// Наименование поставки
        ///</summary>
        public string NameSupply { get; set; } // NameSupply (length: 512)


        ///<summary>
        /// Наименование контракта
        ///</summary>
        public string NameKontract { get; set; } // NameKontract (length: 512)


        ///<summary>
        /// Наименование контракта
        ///</summary>
        public System.DateTime? DatePostavki { get; set; } // DatePostavki


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdSupply] point to this entity (FK_BlockPower_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Supply

        /// <summary>
        /// Child Mfus where [Mfu].[IdSupply] point to this entity (FK_Mfu_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Supply

        /// <summary>
        /// Child Monitors where [Monitors].[IdSupply] point to this entity (FK_Monitors_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Supply

        /// <summary>
        /// Child Printers where [Printer].[IdSupply] point to this entity (FK_Printer_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Supply

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdSupply] point to this entity (FK_ScanerAndCamer_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Supply

        /// <summary>
        /// Child Swithes where [Swithes].[IdSupply] point to this entity (FK_Swithes_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Supply

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdSupply] point to this entity (FK_SysBlock_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Supply

        /// <summary>
        /// Child Telephons where [Telephon].[IdSupply] point to this entity (FK_Telephon_Supply)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Supply




        public Supply()
        {

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();

            Mfus = new System.Collections.Generic.List<Mfu>();

            Monitors = new System.Collections.Generic.List<Monitor>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();

            Swithes = new System.Collections.Generic.List<Swithe>();

            SysBlocks = new System.Collections.Generic.List<SysBlock>();

            Telephons = new System.Collections.Generic.List<Telephon>();
        }

    }



    // Swithes


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Swithe
    {


        public int IdSwithes { get; set; } // IdSwithes (Primary key)

        public int? IdUser { get; set; } // IdUser

        public int? IdModelSwithes { get; set; } // IdModelSwithes

        public int? IdSupply { get; set; } // IdSupply

        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        public string ServiceNum { get; set; } // ServiceNum (length: 128)

        public string SerNum { get; set; } // SerNum (length: 128)

        public string InventarNum { get; set; } // InventarNum (length: 128)

        public string Coment { get; set; } // Coment (length: 254)

        public int? IdStatus { get; set; } // IdStatus

        public string IdHistory { get; set; } // IdHistory (length: 64)

        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent Kabinet pointed by [Swithes].([IdNumberKabinet]) (FK_Swithes_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_Swithes_Kabinet


        /// <summary>
        /// Parent ModelSwithe pointed by [Swithes].([IdModelSwithes]) (FK_Swithes_ModelSwithes)
        /// </summary>

        public virtual ModelSwithe ModelSwithe { get; set; } // FK_Swithes_ModelSwithes


        /// <summary>
        /// Parent Statusing pointed by [Swithes].([IdStatus]) (FK_Statusing_Swithes)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Swithes


        /// <summary>
        /// Parent Supply pointed by [Swithes].([IdSupply]) (FK_Swithes_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_Swithes_Supply


        /// <summary>
        /// Parent User pointed by [Swithes].([IdUser]) (FK_Swithes_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_Swithes_Users



        public Swithe()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // The table 'SynhronizationIp' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.

    // SynhronizationIp


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class SynhronizationIp
    {


        public string Task { get; set; } // Task (length: 64)

        public int? IdSysBlock { get; set; } // IdSysBlock

        public int? IdUser { get; set; } // IdUser

        public string ActualIpAdress { get; set; } // ActualIpAdress (length: 128)

        public string NameComputer { get; set; } // NameComputer (length: 128)

        public string IpAdressOld { get; set; } // IpAdressOld (length: 128)

        public string IpAdressNew { get; set; } // IpAdressNew (length: 128)

        public System.DateTime? Dates { get; set; } // Dates




    }



    // SysBlock


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class SysBlock
    {



        ///<summary>
        /// Уникальный номер системного блока
        ///</summary>
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)


        ///<summary>
        /// Уникальный номер пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Ун модели системного блока
        ///</summary>
        public int? IdModelSysBlock { get; set; } // IdModelSysBlock


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун номера кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 128)


        ///<summary>
        /// Серийный номер системного блока
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)


        ///<summary>
        /// Инвентарный номер системного блока
        ///</summary>
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)


        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)


        ///<summary>
        /// Ip Адрес
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate




        // Foreign keys



        /// <summary>
        /// Parent Kabinet pointed by [SysBlock].([IdNumberKabinet]) (FK_SysBlock_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_SysBlock_Kabinet


        /// <summary>
        /// Parent NameSysBlock pointed by [SysBlock].([IdModelSysBlock]) (FK_NameSysBlock_SysBlock)
        /// </summary>

        public virtual NameSysBlock NameSysBlock { get; set; } // FK_NameSysBlock_SysBlock


        /// <summary>
        /// Parent Statusing pointed by [SysBlock].([IdStatus]) (FK_Statusing_SysBlock)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_SysBlock


        /// <summary>
        /// Parent Supply pointed by [SysBlock].([IdSupply]) (FK_SysBlock_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_SysBlock_Supply


        /// <summary>
        /// Parent User pointed by [SysBlock].([IdUser]) (FK_SysBlock_Users)
        /// </summary>

        public virtual User User { get; set; } // FK_SysBlock_Users



        public SysBlock()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;

        }

    }



    // Telephon


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class Telephon
    {



        ///<summary>
        /// Уникальный номер телефона
        ///</summary>
        public int IdTelephon { get; set; } // IdTelephon (Primary key)


        ///<summary>
        /// Ун поставщика
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply


        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet


        ///<summary>
        /// Наименование телефона
        ///</summary>
        public string NameTelephone { get; set; } // NameTelephone (length: 128)


        ///<summary>
        /// Номер телефона
        ///</summary>
        public string Telephon_ { get; set; } // Telephon (length: 32)


        ///<summary>
        /// Городской номер телефона
        ///</summary>
        public string TelephonUndeground { get; set; } // TelephonUndeground (length: 32)


        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNumber { get; set; } // SerNumber (length: 64)


        ///<summary>
        /// Ip телефона
        ///</summary>
        public string IpTelephon { get; set; } // IpTelephon (length: 64)


        ///<summary>
        /// Мак Адресс телефона
        ///</summary>
        public string MacTelephon { get; set; } // MacTelephon (length: 64)


        ///<summary>
        /// Коментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)


        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus


        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child Users where [Users].[IdTelephon] point to this entity (FK_Users_Telephon)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Telephon



        // Foreign keys



        /// <summary>
        /// Parent Kabinet pointed by [Telephon].([IdNumberKabinet]) (FK_Telephon_Kabinet)
        /// </summary>

        public virtual Kabinet Kabinet { get; set; } // FK_Telephon_Kabinet


        /// <summary>
        /// Parent Statusing pointed by [Telephon].([IdStatus]) (FK_Statusing_Telephon)
        /// </summary>

        public virtual Statusing Statusing { get; set; } // FK_Statusing_Telephon


        /// <summary>
        /// Parent Supply pointed by [Telephon].([IdSupply]) (FK_Telephon_Supply)
        /// </summary>

        public virtual Supply Supply { get; set; } // FK_Telephon_Supply



        public Telephon()
        {

            DataCreate = System.DateTime.Now;


            Users = new System.Collections.Generic.List<User>();
        }

    }



    // Users


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class User
    {



        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int IdUser { get; set; } // IdUser (Primary key)


        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string Name { get; set; } // Name (length: 256)


        ///<summary>
        /// Сокращенное имя пользователя
        ///</summary>
        public string SmallName { get; set; } // SmallName (length: 128)


        ///<summary>
        /// Ун отдела
        ///</summary>
        public int? IdOtdel { get; set; } // IdOtdel


        ///<summary>
        /// Ун должности
        ///</summary>
        public int? IdPosition { get; set; } // IdPosition


        ///<summary>
        /// Ун роли
        ///</summary>
        public int? IdRule { get; set; } // IdRule


        ///<summary>
        /// Табельный номер
        ///</summary>
        public string TabelNumber { get; set; } // TabelNumber (length: 32)


        ///<summary>
        /// Уникальный номер телефона
        ///</summary>
        public int? IdTelephon { get; set; } // IdTelephon


        ///<summary>
        /// Логин для входа
        ///</summary>
        public string NameUser { get; set; } // NameUser (length: 64)


        ///<summary>
        /// Пароль для входа
        ///</summary>
        public string Passwords { get; set; } // Passwords (length: 64)


        ///<summary>
        /// Актуальный статус
        ///</summary>
        public bool? StatusActual { get; set; } // StatusActual


        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)


        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate



        // Reverse navigation



        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdUser] point to this entity (FK_BlockPower_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Users

        /// <summary>
        /// Child Documents where [Document].[IdUser] point to this entity (FK_Users_Document)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Document> Documents { get; set; } // Document.FK_Users_Document

        /// <summary>
        /// Child Mfus where [Mfu].[IdUser] point to this entity (FK_Mfu_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Users

        /// <summary>
        /// Child Monitors where [Monitors].[IdUser] point to this entity (FK_Monitors_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Users

        /// <summary>
        /// Child Otdels where [Otdel].[IdUser] point to this entity (FK_Users_Otdel)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Otdel> Otdels { get; set; } // Otdel.FK_Users_Otdel

        /// <summary>
        /// Child Printers where [Printer].[IdUser] point to this entity (FK_Printer_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Users

        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdUser] point to this entity (FK_ScanerAndCamer_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Users

        /// <summary>
        /// Child Swithes where [Swithes].[IdUser] point to this entity (FK_Swithes_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Users

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdUser] point to this entity (FK_SysBlock_Users)
        /// </summary>

        [JsonIgnore]

        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Users



        // Foreign keys



        /// <summary>
        /// Parent Otdel pointed by [Users].([IdOtdel]) (FK_Otdel_Users)
        /// </summary>

        public virtual Otdel Otdel { get; set; } // FK_Otdel_Users


        /// <summary>
        /// Parent Position pointed by [Users].([IdPosition]) (FK_Users_Position)
        /// </summary>

        public virtual Position Position { get; set; } // FK_Users_Position


        /// <summary>
        /// Parent Rule pointed by [Users].([IdRule]) (FK_Users_Rules)
        /// </summary>

        public virtual Rule Rule { get; set; } // FK_Users_Rules


        /// <summary>
        /// Parent Telephon pointed by [Users].([IdTelephon]) (FK_Users_Telephon)
        /// </summary>

        public virtual Telephon Telephon { get; set; } // FK_Users_Telephon



        public User()
        {

            IdHistory = System.Guid.NewGuid().ToString();

            DataCreate = System.DateTime.Now;


            BlockPowers = new System.Collections.Generic.List<BlockPower>();

            Documents = new System.Collections.Generic.List<Document>();

            Mfus = new System.Collections.Generic.List<Mfu>();

            Monitors = new System.Collections.Generic.List<Monitor>();

            Otdels = new System.Collections.Generic.List<Otdel>();

            Printers = new System.Collections.Generic.List<Printer>();

            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();

            Swithes = new System.Collections.Generic.List<Swithe>();

            SysBlocks = new System.Collections.Generic.List<SysBlock>();
        }

    }



    // UsersIsActualsStat


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class UsersIsActualsStat
    {



        ///<summary>
        /// Уникальный номер
        ///</summary>
        public int Id { get; set; } // Id (Primary key)


        ///<summary>
        /// Действие актулизации
        ///</summary>
        public string ChangeType { get; set; } // ChangeType (length: 100)


        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser


        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string NameUsers { get; set; } // NameUsers (length: 256)


        ///<summary>
        /// Маленькое имя пользователя
        ///</summary>
        public string SmallNameUsers { get; set; } // SmallNameUsers (length: 256)


        ///<summary>
        /// Ун отдела
        ///</summary>
        public int? IdOtdel { get; set; } // IdOtdel


        ///<summary>
        /// Ун должности
        ///</summary>
        public int? IdPosition { get; set; } // IdPosition


        ///<summary>
        /// Табельный номер
        ///</summary>
        public string TabelNumber { get; set; } // TabelNumber (length: 32)


        ///<summary>
        /// Актуальность
        ///</summary>
        public bool? StatusActual { get; set; } // StatusActual


        ///<summary>
        /// Дата обновления
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate




    }


    #endregion


    #region POCO Configuration



    // BlockPower

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class BlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BlockPower>
    {
        public BlockPowerConfiguration()
            : this("dbo")
        {
        }

        public BlockPowerConfiguration(string schema)
        {

            ToTable("BlockPower", schema);

            HasKey(x => x.IdBlockPowers);



            Property(x => x.IdBlockPowers).HasColumnName(@"IdBlockPowers").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdProizvoditelBP).HasColumnName(@"IdProizvoditelBP").HasColumnType("int").IsOptional();

            Property(x => x.IdModelBP).HasColumnName(@"IdModelBP").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Kabinet).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_BlockPower_Kabinet

            HasOptional(a => a.ModelBlockPower).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdModelBP).WillCascadeOnDelete(false); // FK_BlockPower_ModelBlockPower

            HasOptional(a => a.ProizvoditelBlockPower).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdProizvoditelBP).WillCascadeOnDelete(false); // FK_BlockPower_ProizvoditelBlockPower

            HasOptional(a => a.Statusing).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_BlockPower

            HasOptional(a => a.Supply).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_BlockPower_Supply

            HasOptional(a => a.User).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_BlockPower_Users


        }
    }


    // BookAccounting

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class BookAccountingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BookAccounting>
    {
        public BookAccountingConfiguration()
            : this("dbo")
        {
        }

        public BookAccountingConfiguration(string schema)
        {

            ToTable("BookAccounting", schema);

            HasKey(x => x.IdBook);



            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdNameBook).HasColumnName(@"IdNameBook").HasColumnType("int").IsOptional();

            Property(x => x.IdKeys).HasColumnName(@"IdKeys").HasColumnType("int").IsOptional();

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();

            Property(x => x.ClassName).HasColumnName(@"ClassName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.IsFileExists).HasColumnName(@"IsFileExists").HasColumnType("bit").IsOptional();

            Property(x => x.NameBook).HasColumnName(@"NameBook").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Book).HasColumnName(@"Book").HasColumnType("image").IsOptional().HasMaxLength(2147483647);

            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);

            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsOptional();

            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Namedocument).WithMany(b => b.BookAccountings).HasForeignKey(c => c.IdNameBook).WillCascadeOnDelete(false); // FK_BookAccounting_Namedocument


        }
    }


    // Classification

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ClassificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Classification>
    {
        public ClassificationConfiguration()
            : this("dbo")
        {
        }

        public ClassificationConfiguration(string schema)
        {

            ToTable("Classification", schema);

            HasKey(x => x.IdClasification);



            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameClass).HasColumnName(@"NameClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // ComputerIpAdressSynhronization

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ComputerIpAdressSynhronizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ComputerIpAdressSynhronization>
    {
        public ComputerIpAdressSynhronizationConfiguration()
            : this("dbo")
        {
        }

        public ComputerIpAdressSynhronizationConfiguration(string schema)
        {

            ToTable("ComputerIpAdressSynhronization", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameHost).HasColumnName(@"NameHost").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.StatusIp).HasColumnName(@"StatusIp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.MacAdress).HasColumnName(@"MacAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // CopySave

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class CopySaveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CopySave>
    {
        public CopySaveConfiguration()
            : this("dbo")
        {
        }

        public CopySaveConfiguration(string schema)
        {

            ToTable("CopySave", schema);

            HasKey(x => x.IdCopySave);



            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameCopySave).HasColumnName(@"NameCopySave").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Document

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class DocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Document>
    {
        public DocumentConfiguration()
            : this("dbo")
        {
        }

        public DocumentConfiguration(string schema)
        {

            ToTable("Document", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsOptional();

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.InfoUserFile).HasColumnName(@"InfoUserFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.IsFileExists).HasColumnName(@"IsFileExists").HasColumnType("bit").IsOptional();

            Property(x => x.Namefile).HasColumnName(@"Namefile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Document_).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);

            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);

            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsOptional();

            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Namedocument).WithMany(b => b.Documents).HasForeignKey(c => c.IdNamedocument).WillCascadeOnDelete(false); // FK_Document_Namedocument

            HasOptional(a => a.User).WithMany(b => b.Documents).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Users_Document


        }
    }


    // FullModel

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class FullModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullModel>
    {
        public FullModelConfiguration()
            : this("dbo")
        {
        }

        public FullModelConfiguration(string schema)
        {

            ToTable("FullModel", schema);

            HasKey(x => x.IdModel);



            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired();

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasRequired(a => a.Classification).WithMany(b => b.FullModels).HasForeignKey(c => c.IdClasification).WillCascadeOnDelete(false); // FK_Classification_FullModel


        }
    }


    // FullProizvoditel

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class FullProizvoditelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullProizvoditel>
    {
        public FullProizvoditelConfiguration()
            : this("dbo")
        {
        }

        public FullProizvoditelConfiguration(string schema)
        {

            ToTable("FullProizvoditel", schema);

            HasKey(x => x.IdProizvoditel);



            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameProizvoditel).HasColumnName(@"NameProizvoditel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // History

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class HistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<History>
    {
        public HistoryConfiguration()
            : this("dbo")
        {
        }

        public HistoryConfiguration(string schema)
        {

            ToTable("History", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();

            Property(x => x.NameModelClass).HasColumnName(@"NameModelClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.OldModelColums).HasColumnName(@"OldModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            Property(x => x.NewModelColums).HasColumnName(@"NewModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // InfoLogic

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoLogicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoLogic>
    {
        public InfoLogicConfiguration()
            : this("dbo")
        {
        }

        public InfoLogicConfiguration(string schema)
        {

            ToTable("InfoLogic", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.InfoProcedure).HasColumnName(@"InfoProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.ParamProcedure).HasColumnName(@"ParamProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.NameProcedure).HasColumnName(@"NameProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // InfoTable

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoTableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoTable>
    {
        public InfoTableConfiguration()
            : this("dbo")
        {
        }

        public InfoTableConfiguration(string schema)
        {

            ToTable("InfoTable", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameTable).HasColumnName(@"NameTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.NameColumns).HasColumnName(@"NameColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // InfoView

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class InfoViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoView>
    {
        public InfoViewConfiguration()
            : this("dbo")
        {
        }

        public InfoViewConfiguration(string schema)
        {

            ToTable("InfoView", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameView).HasColumnName(@"NameView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.NameViewColumns).HasColumnName(@"NameViewColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.FormatView).HasColumnName(@"FormatView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);

            Property(x => x.IsVisible).HasColumnName(@"IsVisible").HasColumnType("bit").IsOptional();

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // IsProcessComplete

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class IsProcessCompleteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IsProcessComplete>
    {
        public IsProcessCompleteConfiguration()
            : this("dbo")
        {
        }

        public IsProcessCompleteConfiguration(string schema)
        {

            ToTable("IsProcessComplete", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameProcess).HasColumnName(@"NameProcess").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.IsComplete).HasColumnName(@"IsComplete").HasColumnType("bit").IsOptional();

            Property(x => x.DataStart).HasColumnName(@"DataStart").HasColumnType("smalldatetime").IsOptional();

            Property(x => x.DataFinish).HasColumnName(@"DataFinish").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Kabinet

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class KabinetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Kabinet>
    {
        public KabinetConfiguration()
            : this("dbo")
        {
        }

        public KabinetConfiguration(string schema)
        {

            ToTable("Kabinet", schema);

            HasKey(x => x.IdNumberKabinet);



            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // LogicaSelect

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class LogicaSelectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogicaSelect>
    {
        public LogicaSelectConfiguration()
            : this("dbo")
        {
        }

        public LogicaSelectConfiguration(string schema)
        {

            ToTable("LogicaSelect", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.SelectInfo).HasColumnName(@"SelectInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.SelectedParametr).HasColumnName(@"SelectedParametr").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Mfu

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class MfuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Mfu>
    {
        public MfuConfiguration()
            : this("dbo")
        {
        }

        public MfuConfiguration(string schema)
        {

            ToTable("Mfu", schema);

            HasKey(x => x.IdMfu);



            Property(x => x.IdMfu).HasColumnName(@"IdMfu").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IzmInventarNumber).HasColumnName(@"IzmInventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsOptional();

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.CopySave).WithMany(b => b.Mfus).HasForeignKey(c => c.IdCopySave).WillCascadeOnDelete(false); // FK_CopySave_Mfu

            HasOptional(a => a.FullModel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Mfu_FullModel

            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Mfu_FullProizvoditel

            HasOptional(a => a.Kabinet).WithMany(b => b.Mfus).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Mfu_Kabinet

            HasOptional(a => a.Statusing).WithMany(b => b.Mfus).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Mfu

            HasOptional(a => a.Supply).WithMany(b => b.Mfus).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Mfu_Supply

            HasOptional(a => a.User).WithMany(b => b.Mfus).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Mfu_Users


        }
    }


    // ModelBlockPower

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ModelBlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelBlockPower>
    {
        public ModelBlockPowerConfiguration()
            : this("dbo")
        {
        }

        public ModelBlockPowerConfiguration(string schema)
        {

            ToTable("ModelBlockPower", schema);

            HasKey(x => x.IdModelBP);



            Property(x => x.IdModelBP).HasColumnName(@"IdModelBP").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // ModelSwithes

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ModelSwitheConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelSwithe>
    {
        public ModelSwitheConfiguration()
            : this("dbo")
        {
        }

        public ModelSwitheConfiguration(string schema)
        {

            ToTable("ModelSwithes", schema);

            HasKey(x => x.IdModelSwithes);



            Property(x => x.IdModelSwithes).HasColumnName(@"IdModelSwithes").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.CountPort).HasColumnName(@"CountPort").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Monitors

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class MonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Monitor>
    {
        public MonitorConfiguration()
            : this("dbo")
        {
        }

        public MonitorConfiguration(string schema)
        {

            ToTable("Monitors", schema);

            HasKey(x => x.IdMonitor);



            Property(x => x.IdMonitor).HasColumnName(@"IdMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumMonitor).HasColumnName(@"InventarNumMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Kabinet).WithMany(b => b.Monitors).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Monitors_Kabinet

            HasOptional(a => a.NameMonitor).WithMany(b => b.Monitors).HasForeignKey(c => c.IdModelMonitor).WillCascadeOnDelete(false); // FK_Monitors_NameMonitor

            HasOptional(a => a.Statusing).WithMany(b => b.Monitors).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Monitors

            HasOptional(a => a.Supply).WithMany(b => b.Monitors).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Monitors_Supply

            HasOptional(a => a.User).WithMany(b => b.Monitors).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Monitors_Users


        }
    }


    // Namedocument

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class NamedocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Namedocument>
    {
        public NamedocumentConfiguration()
            : this("dbo")
        {
        }

        public NamedocumentConfiguration(string schema)
        {

            ToTable("Namedocument", schema);

            HasKey(x => x.IdNamedocument);



            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // NameMonitor

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class NameMonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameMonitor>
    {
        public NameMonitorConfiguration()
            : this("dbo")
        {
        }

        public NameMonitorConfiguration(string schema)
        {

            ToTable("NameMonitor", schema);

            HasKey(x => x.IdModelMonitor);



            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // NameSysBlock

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class NameSysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameSysBlock>
    {
        public NameSysBlockConfiguration()
            : this("dbo")
        {
        }

        public NameSysBlockConfiguration(string schema)
        {

            ToTable("NameSysBlock", schema);

            HasKey(x => x.IdModelSysBlock);



            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Organization

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class OrganizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Organization>
    {
        public OrganizationConfiguration()
            : this("dbo")
        {
        }

        public OrganizationConfiguration(string schema)
        {

            ToTable("Organization", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameOrganization).HasColumnName(@"NameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.InameOrganization).HasColumnName(@"InameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.RnameOrganization).HasColumnName(@"RnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.DnameOrganization).HasColumnName(@"DnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.VnameOrganization).HasColumnName(@"VnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.TnameOrganization).HasColumnName(@"TnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.PnameOrganization).HasColumnName(@"PnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.NameDepartament).HasColumnName(@"NameDepartament").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Otdel

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class OtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Otdel>
    {
        public OtdelConfiguration()
            : this("dbo")
        {
        }

        public OtdelConfiguration(string schema)
        {

            ToTable("Otdel", schema);

            HasKey(x => x.IdOtdel);



            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.User).WithMany(b => b.Otdels).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Users_Otdel


        }
    }


    // OtdelPadeg

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class OtdelPadegConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OtdelPadeg>
    {
        public OtdelPadegConfiguration()
            : this("dbo")
        {
        }

        public OtdelPadegConfiguration(string schema)
        {

            ToTable("OtdelPadeg", schema);

            HasKey(x => x.IdOtdel);



            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.InameOtdel).HasColumnName(@"InameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.RnameOtdel).HasColumnName(@"RnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DnameOtdel).HasColumnName(@"DnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.VnameOtdel).HasColumnName(@"VnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.TnameOtdel).HasColumnName(@"TnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.PnameOtdel).HasColumnName(@"PnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasRequired(a => a.Otdel).WithOptional(b => b.OtdelPadeg).WillCascadeOnDelete(false); // FK_Otdel_OtdelPadeg


        }
    }


    // Position

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class PositionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Position>
    {
        public PositionConfiguration()
            : this("dbo")
        {
        }

        public PositionConfiguration(string schema)
        {

            ToTable("Position", schema);

            HasKey(x => x.IdPosition);



            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NamePosition).HasColumnName(@"NamePosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Printer

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class PrinterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Printer>
    {
        public PrinterConfiguration()
            : this("dbo")
        {
        }

        public PrinterConfiguration(string schema)
        {

            ToTable("Printer", schema);

            HasKey(x => x.IdPrinter);



            Property(x => x.IdPrinter).HasColumnName(@"IdPrinter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IzmInventarNumber).HasColumnName(@"IzmInventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.FullModel).WithMany(b => b.Printers).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Printer_FullModel

            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Printers).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Printer_FullProizvoditel

            HasOptional(a => a.Kabinet).WithMany(b => b.Printers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Printer_Kabinet

            HasOptional(a => a.Statusing).WithMany(b => b.Printers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Printer

            HasOptional(a => a.Supply).WithMany(b => b.Printers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Printer_Supply

            HasOptional(a => a.User).WithMany(b => b.Printers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Printer_Users


        }
    }


    // ProizvoditelBlockPower

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ProizvoditelBlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProizvoditelBlockPower>
    {
        public ProizvoditelBlockPowerConfiguration()
            : this("dbo")
        {
        }

        public ProizvoditelBlockPowerConfiguration(string schema)
        {

            ToTable("ProizvoditelBlockPower", schema);

            HasKey(x => x.IdProizvoditelBP);



            Property(x => x.IdProizvoditelBP).HasColumnName(@"IdProizvoditelBP").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Rules

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class RuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rule>
    {
        public RuleConfiguration()
            : this("dbo")
        {
        }

        public RuleConfiguration(string schema)
        {

            ToTable("Rules", schema);

            HasKey(x => x.IdRule);



            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameRules).HasColumnName(@"NameRules").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // ScanerAndCamer

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class ScanerAndCamerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScanerAndCamer>
    {
        public ScanerAndCamerConfiguration()
            : this("dbo")
        {
        }

        public ScanerAndCamerConfiguration(string schema)
        {

            ToTable("ScanerAndCamer", schema);

            HasKey(x => x.IdScaner);



            Property(x => x.IdScaner).HasColumnName(@"IdScaner").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IzmInventarNumber).HasColumnName(@"IzmInventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.FullModel).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_ScanerAndCamer_FullModel

            HasOptional(a => a.FullProizvoditel).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_ScanerAndCamer_FullProizvoditel

            HasOptional(a => a.Kabinet).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Kabinet

            HasOptional(a => a.Statusing).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Scaner

            HasOptional(a => a.Supply).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Supply

            HasOptional(a => a.User).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Users


        }
    }


    // Statusing

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class StatusingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Statusing>
    {
        public StatusingConfiguration()
            : this("dbo")
        {
        }

        public StatusingConfiguration(string schema)
        {

            ToTable("Statusing", schema);

            HasKey(x => x.IdStatus);



            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Supply

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class SupplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Supply>
    {
        public SupplyConfiguration()
            : this("dbo")
        {
        }

        public SupplyConfiguration(string schema)
        {

            ToTable("Supply", schema);

            HasKey(x => x.IdSupply);



            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.NameSupply).HasColumnName(@"NameSupply").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.NameKontract).HasColumnName(@"NameKontract").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            Property(x => x.DatePostavki).HasColumnName(@"DatePostavki").HasColumnType("date").IsOptional();

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    // Swithes

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class SwitheConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Swithe>
    {
        public SwitheConfiguration()
            : this("dbo")
        {
        }

        public SwitheConfiguration(string schema)
        {

            ToTable("Swithes", schema);

            HasKey(x => x.IdSwithes);



            Property(x => x.IdSwithes).HasColumnName(@"IdSwithes").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdModelSwithes).HasColumnName(@"IdModelSwithes").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Kabinet).WithMany(b => b.Swithes).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Swithes_Kabinet

            HasOptional(a => a.ModelSwithe).WithMany(b => b.Swithes).HasForeignKey(c => c.IdModelSwithes).WillCascadeOnDelete(false); // FK_Swithes_ModelSwithes

            HasOptional(a => a.Statusing).WithMany(b => b.Swithes).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Swithes

            HasOptional(a => a.Supply).WithMany(b => b.Swithes).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Swithes_Supply

            HasOptional(a => a.User).WithMany(b => b.Swithes).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Swithes_Users


        }
    }


    // SysBlock

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class SysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SysBlock>
    {
        public SysBlockConfiguration()
            : this("dbo")
        {
        }

        public SysBlockConfiguration(string schema)
        {

            ToTable("SysBlock", schema);

            HasKey(x => x.IdSysBlock);



            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsOptional();

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Kabinet).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_SysBlock_Kabinet

            HasOptional(a => a.NameSysBlock).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdModelSysBlock).WillCascadeOnDelete(false); // FK_NameSysBlock_SysBlock

            HasOptional(a => a.Statusing).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_SysBlock

            HasOptional(a => a.Supply).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_SysBlock_Supply

            HasOptional(a => a.User).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_SysBlock_Users


        }
    }


    // Telephon

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class TelephonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Telephon>
    {
        public TelephonConfiguration()
            : this("dbo")
        {
        }

        public TelephonConfiguration(string schema)
        {

            ToTable("Telephon", schema);

            HasKey(x => x.IdTelephon);



            Property(x => x.IdTelephon).HasColumnName(@"IdTelephon").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();

            Property(x => x.NameTelephone).HasColumnName(@"NameTelephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.Telephon_).HasColumnName(@"Telephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);

            Property(x => x.TelephonUndeground).HasColumnName(@"TelephonUndeground").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);

            Property(x => x.SerNumber).HasColumnName(@"SerNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.IpTelephon).HasColumnName(@"IpTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.MacTelephon).HasColumnName(@"MacTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Kabinet).WithMany(b => b.Telephons).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Telephon_Kabinet

            HasOptional(a => a.Statusing).WithMany(b => b.Telephons).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Telephon

            HasOptional(a => a.Supply).WithMany(b => b.Telephons).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Telephon_Supply


        }
    }


    // Users

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class UserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {

            ToTable("Users", schema);

            HasKey(x => x.IdUser);



            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);

            Property(x => x.SmallName).HasColumnName(@"SmallName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();

            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();

            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsOptional();

            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);

            Property(x => x.IdTelephon).HasColumnName(@"IdTelephon").HasColumnType("int").IsOptional();

            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.Passwords).HasColumnName(@"Passwords").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();

            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);

            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();



            // Foreign keys


            HasOptional(a => a.Otdel).WithMany(b => b.Users).HasForeignKey(c => c.IdOtdel).WillCascadeOnDelete(false); // FK_Otdel_Users

            HasOptional(a => a.Position).WithMany(b => b.Users).HasForeignKey(c => c.IdPosition).WillCascadeOnDelete(false); // FK_Users_Position

            HasOptional(a => a.Rule).WithMany(b => b.Users).HasForeignKey(c => c.IdRule).WillCascadeOnDelete(false); // FK_Users_Rules

            HasOptional(a => a.Telephon).WithMany(b => b.Users).HasForeignKey(c => c.IdTelephon).WillCascadeOnDelete(false); // FK_Users_Telephon


        }
    }


    // UsersIsActualsStat

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]

    public class UsersIsActualsStatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersIsActualsStat>
    {
        public UsersIsActualsStatConfiguration()
            : this("dbo")
        {
        }

        public UsersIsActualsStatConfiguration(string schema)
        {

            ToTable("UsersIsActualsStat", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            Property(x => x.ChangeType).HasColumnName(@"ChangeType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();

            Property(x => x.NameUsers).HasColumnName(@"NameUsers").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.SmallNameUsers).HasColumnName(@"SmallNameUsers").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();

            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();

            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);

            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();

            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();



        }
    }


    #endregion



}
// </auto-generated>



