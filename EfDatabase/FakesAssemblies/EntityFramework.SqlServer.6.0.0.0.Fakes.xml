<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.SqlServer.6.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.EntityFrameworkSqlServerDelegates">
            <summary>Содержит пользовательские делегаты для заглушек и оболочек совместимости EntityFramework.SqlServer</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlAzureExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.#ctor(System.Data.Entity.SqlServer.SqlAzureExecutionStrategy)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.AllInstances.ShouldRetryOnException">
            <summary>Задает оболочка совместимости SqlAzureExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.Bind(System.Data.Entity.Infrastructure.IDbExecutionStrategy)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.Constructor">
            <summary>Задает оболочка совместимости SqlAzureExecutionStrategy.SqlAzureExecutionStrategy()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.ConstructorInt32TimeSpan">
            <summary>Задает оболочка совместимости SqlAzureExecutionStrategy.SqlAzureExecutionStrategy(Int32 maxRetryCount, TimeSpan maxDelay)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlAzureExecutionStrategy.ShouldRetryOnException">
            <summary>Задает оболочка совместимости SqlAzureExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlFunctions</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AcosNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Acos(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AcosNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Acos(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AsciiString">
            <summary>Задает оболочка совместимости SqlFunctions.Ascii(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AsinNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Asin(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AsinNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Asin(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Atan2NullableOfDecimalNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Atan2(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Atan2NullableOfDoubleNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Atan2(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AtanNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Atan(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.AtanNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Atan(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.BootstrapFunctionOf2ExpressionOfFuncOfIEnumerableOfM0M1IEnumerableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{``0},``1}},System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>Задает оболочка совместимости SqlFunctions.BootstrapFunction(Expression`1&lt;Func`2&lt;IEnumerable`1&lt;!!0&gt;,!!1&gt;&gt; methodExpression, IEnumerable`1&lt;!!0&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArray">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(Byte[] toFind, Byte[] toSearch)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArrayNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(Byte[] toFind, Byte[] toSearch, Nullable`1&lt;Int32&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexByteArrayByteArrayNullableOfInt64">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(Byte[] toFind, Byte[] toSearch, Nullable`1&lt;Int64&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexStringString">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(String toFind, String toSearch)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexStringStringNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(String toFind, String toSearch, Nullable`1&lt;Int32&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharIndexStringStringNullableOfInt64">
            <summary>Задает оболочка совместимости SqlFunctions.CharIndex(String toFind, String toSearch, Nullable`1&lt;Int64&gt; startLocation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CharNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Char(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumAggregateIEnumerableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.ChecksumAggregate(IEnumerable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumAggregateIEnumerableOfNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.ChecksumAggregate(IEnumerable`1&lt;Nullable`1&lt;Int32&gt;&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumByteArray">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Byte[] arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumByteArrayByteArray">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Byte[] arg1, Byte[] arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumByteArrayByteArrayByteArray">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Byte[] arg1, Byte[] arg2, Byte[] arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfBooleanNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1, Nullable`1&lt;Boolean&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfBooleanNullableOfBooleanNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Boolean&gt; arg1, Nullable`1&lt;Boolean&gt; arg2, Nullable`1&lt;Boolean&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1, Nullable`1&lt;DateTime&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeNullableOfDateTimeNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTime&gt; arg1, Nullable`1&lt;DateTime&gt; arg2, Nullable`1&lt;DateTime&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1, Nullable`1&lt;DateTimeOffset&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;DateTimeOffset&gt; arg1, Nullable`1&lt;DateTimeOffset&gt; arg2, Nullable`1&lt;DateTimeOffset&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimalNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDecimalNullableOfDecimalNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Decimal&gt; arg1, Nullable`1&lt;Decimal&gt; arg2, Nullable`1&lt;Decimal&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDoubleNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfDoubleNullableOfDoubleNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Double&gt; arg1, Nullable`1&lt;Double&gt; arg2, Nullable`1&lt;Double&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfGuid">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfGuidNullableOfGuid">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1, Nullable`1&lt;Guid&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfGuidNullableOfGuidNullableOfGuid">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;Guid&gt; arg1, Nullable`1&lt;Guid&gt; arg2, Nullable`1&lt;Guid&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1, Nullable`1&lt;TimeSpan&gt; arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumNullableOfTimeSpanNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(Nullable`1&lt;TimeSpan&gt; arg1, Nullable`1&lt;TimeSpan&gt; arg2, Nullable`1&lt;TimeSpan&gt; arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumString">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(String arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumStringString">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(String arg1, String arg2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ChecksumStringStringString">
            <summary>Задает оболочка совместимости SqlFunctions.Checksum(String arg1, String arg2, String arg3)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CosNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Cos(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CosNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Cos(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CotNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Cot(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CotNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Cot(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CurrentTimestamp">
            <summary>Задает оболочка совместимости SqlFunctions.CurrentTimestamp()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.CurrentUser">
            <summary>Задает оболочка совместимости SqlFunctions.CurrentUser()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthByteArray">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Byte[] arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;Boolean&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;DateTime&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;DateTimeOffset&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfGuid">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;Guid&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(Nullable`1&lt;TimeSpan&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DataLengthString">
            <summary>Задает оболочка совместимости SqlFunctions.DataLength(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;DateTimeOffset&gt; dateTimeOffsetArg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, Nullable`1&lt;TimeSpan&gt; time)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateAddStringNullableOfDoubleString">
            <summary>Задает оболочка совместимости SqlFunctions.DateAdd(String datePartArg, Nullable`1&lt;Double&gt; number, String date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeOffsetString">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfDateTimeString">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;DateTime&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringNullableOfTimeSpanString">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, Nullable`1&lt;TimeSpan&gt; startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringStringNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, String startDate, Nullable`1&lt;TimeSpan&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateDiffStringStringString">
            <summary>Задает оболочка совместимости SqlFunctions.DateDiff(String datePartArg, String startDate, String endDate)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateNameStringNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DateName(String datePartArg, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateNameStringNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DateName(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateNameStringNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DateName(String datePartArg, Nullable`1&lt;TimeSpan&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DateNameStringString">
            <summary>Задает оболочка совместимости SqlFunctions.DateName(String datePartArg, String date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DatePartStringNullableOfDateTime">
            <summary>Задает оболочка совместимости SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;DateTime&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DatePartStringNullableOfDateTimeOffset">
            <summary>Задает оболочка совместимости SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;DateTimeOffset&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DatePartStringNullableOfTimeSpan">
            <summary>Задает оболочка совместимости SqlFunctions.DatePart(String datePartArg, Nullable`1&lt;TimeSpan&gt; date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DatePartStringString">
            <summary>Задает оболочка совместимости SqlFunctions.DatePart(String datePartArg, String date)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DegreesNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Degrees(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DegreesNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Degrees(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DegreesNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Degrees(Nullable`1&lt;Int32&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DegreesNullableOfInt64">
            <summary>Задает оболочка совместимости SqlFunctions.Degrees(Nullable`1&lt;Int64&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.DifferenceStringString">
            <summary>Задает оболочка совместимости SqlFunctions.Difference(String string1, String string2)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ExpNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Exp(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ExpNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Exp(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.GetDate">
            <summary>Задает оболочка совместимости SqlFunctions.GetDate()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.GetUtcDate">
            <summary>Задает оболочка совместимости SqlFunctions.GetUtcDate()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.HostName">
            <summary>Задает оболочка совместимости SqlFunctions.HostName()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.IsDateString">
            <summary>Задает оболочка совместимости SqlFunctions.IsDate(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.IsNumericString">
            <summary>Задает оболочка совместимости SqlFunctions.IsNumeric(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Log10NullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Log10(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Log10NullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Log10(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.LogNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Log(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.LogNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Log(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.NCharNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.NChar(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.PatIndexStringString">
            <summary>Задает оболочка совместимости SqlFunctions.PatIndex(String stringPattern, String target)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Pi">
            <summary>Задает оболочка совместимости SqlFunctions.Pi()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.QuoteNameString">
            <summary>Задает оболочка совместимости SqlFunctions.QuoteName(String stringArg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.QuoteNameStringString">
            <summary>Задает оболочка совместимости SqlFunctions.QuoteName(String stringArg, String quoteCharacter)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.RadiansNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Radians(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.RadiansNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Radians(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.RadiansNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Radians(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.RadiansNullableOfInt64">
            <summary>Задает оболочка совместимости SqlFunctions.Radians(Nullable`1&lt;Int64&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.Rand">
            <summary>Задает оболочка совместимости SqlFunctions.Rand()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.RandNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Rand(Nullable`1&lt;Int32&gt; seed)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.ReplicateStringNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Replicate(String target, Nullable`1&lt;Int32&gt; count)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SignNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Sign(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SignNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Sign(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SignNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Sign(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SignNullableOfInt64">
            <summary>Задает оболочка совместимости SqlFunctions.Sign(Nullable`1&lt;Int64&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SinNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Sin(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SinNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Sin(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SoundCodeString">
            <summary>Задает оболочка совместимости SqlFunctions.SoundCode(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SpaceNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.Space(Nullable`1&lt;Int32&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SquareNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Square(Nullable`1&lt;Decimal&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SquareNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Square(Nullable`1&lt;Double&gt; arg1)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SquareRootNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.SquareRoot(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.SquareRootNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.SquareRoot(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimalNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number, Nullable`1&lt;Int32&gt; length)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDecimalNullableOfInt32NullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Decimal&gt; number, Nullable`1&lt;Int32&gt; length, Nullable`1&lt;Int32&gt; decimalArg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDoubleNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number, Nullable`1&lt;Int32&gt; length)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StringConvertNullableOfDoubleNullableOfInt32NullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.StringConvert(Nullable`1&lt;Double&gt; number, Nullable`1&lt;Int32&gt; length, Nullable`1&lt;Int32&gt; decimalArg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.StuffStringNullableOfInt32NullableOfInt32String">
            <summary>Задает оболочка совместимости SqlFunctions.Stuff(String stringInput, Nullable`1&lt;Int32&gt; start, Nullable`1&lt;Int32&gt; length, String stringReplacement)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.TanNullableOfDecimal">
            <summary>Задает оболочка совместимости SqlFunctions.Tan(Nullable`1&lt;Decimal&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.TanNullableOfDouble">
            <summary>Задает оболочка совместимости SqlFunctions.Tan(Nullable`1&lt;Double&gt; arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.UnicodeString">
            <summary>Задает оболочка совместимости SqlFunctions.Unicode(String arg)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.UserName">
            <summary>Задает оболочка совместимости SqlFunctions.UserName()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlFunctions.UserNameNullableOfInt32">
            <summary>Задает оболочка совместимости SqlFunctions.UserName(Nullable`1&lt;Int32&gt; arg)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlProviderServices</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.#ctor(System.Data.Entity.SqlServer.SqlProviderServices)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.CheckDatabaseExistsSqlConnectionNullableOfInt32String">
            <summary>Задает оболочка совместимости SqlProviderServices.CheckDatabaseExists(SqlConnection sqlConnection, Nullable`1&lt;Int32&gt; commandTimeout, String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.CloneDbCommandDbCommand">
            <summary>Задает оболочка совместимости SqlProviderServices.CloneDbCommand(DbCommand fromDbCommand)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.CloneDbConnectionDbConnectionDbProviderFactory">
            <summary>Задает оболочка совместимости SqlProviderServices.CloneDbConnection(DbConnection connection, DbProviderFactory factory)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Задает оболочка совместимости SqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32LazyOfStoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, Lazy`1&lt;StoreItemCollection&gt; storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DbGetSpatialServicesString">
            <summary>Задает оболочка совместимости SqlProviderServices.DbGetSpatialServices(String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.DropDatabaseSqlConnectionNullableOfInt32String">
            <summary>Задает оболочка совместимости SqlProviderServices.DropDatabase(SqlConnection sqlConnection, Nullable`1&lt;Int32&gt; commandTimeout, String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.GetDbProviderManifestString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbProviderManifest(String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.GetDbProviderManifestTokenDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.RegisterInfoMessageHandlerDbConnectionActionOfString">
            <summary>Задает оболочка совместимости SqlProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Задает оболочка совместимости SqlProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.AllInstances.UsingMasterConnectionDbConnectionActionOfDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1&lt;DbConnection&gt; act)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.Bind(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CheckDatabaseExistsSqlConnectionNullableOfInt32String">
            <summary>Задает оболочка совместимости SqlProviderServices.CheckDatabaseExists(SqlConnection sqlConnection, Nullable`1&lt;Int32&gt; commandTimeout, String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CloneDbCommandDbCommand">
            <summary>Задает оболочка совместимости SqlProviderServices.CloneDbCommand(DbCommand fromDbCommand)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CloneDbConnectionDbConnectionDbProviderFactory">
            <summary>Задает оболочка совместимости SqlProviderServices.CloneDbConnection(DbConnection connection, DbProviderFactory factory)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.Constructor">
            <summary>Задает оболочка совместимости SqlProviderServices.SqlProviderServices()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CreateCommandDbConnectionStringNullableOfInt32">
            <summary>Задает оболочка совместимости SqlProviderServices.CreateCommand(DbConnection sqlConnection, String commandText, Nullable`1&lt;Int32&gt; commandTimeout)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CreateCommandDbProviderManifestDbCommandTree">
            <summary>Задает оболочка совместимости SqlProviderServices.CreateCommand(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.CreateDbCommandDefinitionDbProviderManifestDbCommandTree">
            <summary>Задает оболочка совместимости SqlProviderServices.CreateDbCommandDefinition(DbProviderManifest providerManifest, DbCommandTree commandTree)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbCreateDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbCreateDatabaseScriptStringStoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbCreateDatabaseScript(String providerManifestToken, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32LazyOfStoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, Lazy`1&lt;StoreItemCollection&gt; storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbDatabaseExistsDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDatabaseExists(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbDeleteDatabaseDbConnectionNullableOfInt32StoreItemCollection">
            <summary>Задает оболочка совместимости SqlProviderServices.DbDeleteDatabase(DbConnection connection, Nullable`1&lt;Int32&gt; commandTimeout, StoreItemCollection storeItemCollection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DbGetSpatialServicesString">
            <summary>Задает оболочка совместимости SqlProviderServices.DbGetSpatialServices(String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.DropDatabaseSqlConnectionNullableOfInt32String">
            <summary>Задает оболочка совместимости SqlProviderServices.DropDatabase(SqlConnection sqlConnection, Nullable`1&lt;Int32&gt; commandTimeout, String databaseName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.EnsureSqlParameterValueObject">
            <summary>Задает оболочка совместимости SqlProviderServices.EnsureSqlParameterValue(Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GenerateDatabaseNameString">
            <summary>Задает оболочка совместимости SqlProviderServices.GenerateDatabaseName(String mdfFileName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetBinaryDbTypeTypeUsage">
            <summary>Задает оболочка совместимости SqlProviderServices.GetBinaryDbType(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetDbProviderManifestString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbProviderManifest(String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetDbProviderManifestTokenDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbProviderManifestToken(DbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetDbSpatialDataReaderDbDataReaderString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetDbSpatialDataReader(DbDataReader fromReader, String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetKatmaiDateTimePrecisionTypeUsageBoolean">
            <summary>Задает оболочка совместимости SqlProviderServices.GetKatmaiDateTimePrecision(TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetLdfFileNameString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetLdfFileName(String dataFileName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetMdfFileNameString">
            <summary>Задает оболочка совместимости SqlProviderServices.GetMdfFileName(String attachDBFile)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetNonMaxLengthSqlDbType">
            <summary>Задает оболочка совместимости SqlProviderServices.GetNonMaxLength(SqlDbType type)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetOrGenerateDatabaseNameAndGetFileNamesSqlConnectionStringOutStringOutStringOut">
            <summary>Задает оболочка совместимости SqlProviderServices.GetOrGenerateDatabaseNameAndGetFileNames(SqlConnection sqlConnection, String&amp; databaseName, String&amp; dataFileName, String&amp; logFileName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetParameterPrecisionTypeUsageNullableOfByte">
            <summary>Задает оболочка совместимости SqlProviderServices.GetParameterPrecision(TypeUsage type, Nullable`1&lt;Byte&gt; defaultIfUndefined)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetParameterSizeTypeUsageBoolean">
            <summary>Задает оболочка совместимости SqlProviderServices.GetParameterSize(TypeUsage type, Boolean isOutParam)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetScaleTypeUsage">
            <summary>Задает оболочка совместимости SqlProviderServices.GetScale(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.GetStringDbTypeTypeUsage">
            <summary>Задает оболочка совместимости SqlProviderServices.GetStringDbType(TypeUsage type)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.InstanceGet">
            <summary>Задает оболочка совместимости SqlProviderServices.get_Instance()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.ParameterModeToParameterDirectionParameterMode">
            <summary>Задает оболочка совместимости SqlProviderServices.ParameterModeToParameterDirection(ParameterMode mode)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.QueryForManifestTokenDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.QueryForManifestToken(DbConnection conn)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.RegisterInfoMessageHandlerDbConnectionActionOfString">
            <summary>Задает оболочка совместимости SqlProviderServices.RegisterInfoMessageHandler(DbConnection connection, Action`1&lt;String&gt; handler)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.SetDbParameterValueDbParameterTypeUsageObject">
            <summary>Задает оболочка совместимости SqlProviderServices.SetDbParameterValue(DbParameter parameter, TypeUsage parameterType, Object value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.SqlServerTypesAssemblyNameGet">
            <summary>Задает оболочка совместимости SqlProviderServices.get_SqlServerTypesAssemblyName()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.SqlServerTypesAssemblyNameSetString">
            <summary>Задает оболочка совместимости SqlProviderServices.set_SqlServerTypesAssemblyName(String value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.StaticConstructor">
            <summary>Задает оболочка совместимости SqlProviderServices.SqlProviderServices()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.SupportsSpatialString">
            <summary>Задает оболочка совместимости SqlProviderServices.SupportsSpatial(String versionHint)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.TruncateDecimalsToScaleGet">
            <summary>Задает оболочка совместимости SqlProviderServices.get_TruncateDecimalsToScale()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.TruncateDecimalsToScaleSetBoolean">
            <summary>Задает оболочка совместимости SqlProviderServices.set_TruncateDecimalsToScale(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UseRowNumberOrderingInOffsetQueriesGet">
            <summary>Задает оболочка совместимости SqlProviderServices.get_UseRowNumberOrderingInOffsetQueries()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UseRowNumberOrderingInOffsetQueriesSetBoolean">
            <summary>Задает оболочка совместимости SqlProviderServices.set_UseRowNumberOrderingInOffsetQueries(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UseScopeIdentityGet">
            <summary>Задает оболочка совместимости SqlProviderServices.get_UseScopeIdentity()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UseScopeIdentitySetBoolean">
            <summary>Задает оболочка совместимости SqlProviderServices.set_UseScopeIdentity(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UsingConnectionDbConnectionActionOfDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.UsingConnection(DbConnection sqlConnection, Action`1&lt;DbConnection&gt; act)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices.UsingMasterConnectionDbConnectionActionOfDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1&lt;DbConnection&gt; act)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices._DbDatabaseExistsb__1fDbConnection">
            <summary>Задает оболочка совместимости SqlProviderServices.&lt;DbDatabaseExists&gt;b__1f(DbConnection con)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices._ctorb__1">
            <summary>Задает оболочка совместимости SqlProviderServices.&lt;.ctor&gt;b__1()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlProviderServices._ctorb__2Object">
            <summary>Задает оболочка совместимости SqlProviderServices.&lt;.ctor&gt;b__2(Object k)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.#ctor(System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.BuildColumnTypeColumnModel">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.BuildColumnType(ColumnModel columnModel)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.BuildPropertyTypePropertyModel">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.BuildPropertyType(PropertyModel propertyModel)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.CreateConnection">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.DropDefaultConstraintStringStringIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.DropDefaultConstraint(String table, String column, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAddColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddColumnOperation addColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAddForeignKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAddPrimaryKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAlterColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterColumnOperation alterColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAlterProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterProcedureOperation alterProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateAlterTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterTableOperation alterTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateBoolean">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Boolean defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateByteArray">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateColumnModelIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ColumnModel column, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateCreateIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateIndexOperation createIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateCreateProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateProcedureOperation createProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateCreateSchemaString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateCreateSchema(String schema)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateCreateTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDateTime">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDateTimeOffset">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDbGeography">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDbGeometry">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropColumnOperation dropColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropForeignKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropIndexOperation dropIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropPrimaryKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropProcedureOperation dropProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateDropTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropTableOperation dropTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateFunctionSqlICollectionOfDbModificationCommandTreeString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateFunctionSql(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateGuid">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateHistoryOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(HistoryOperation historyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateIEnumerableOfMigrationOperationString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateMakeSystemTableCreateTableOperationIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateMigrationOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateMoveProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MoveProcedureOperation moveProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateMoveTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MoveTableOperation moveTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateObject">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateParameterModelIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateProcedureOperationString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ProcedureOperation procedureOperation, String modifier)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateRenameColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameColumnOperation renameColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateRenameIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameIndexOperation renameIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateRenameProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameProcedureOperation renameProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateRenameTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameTableOperation renameTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateSqlOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(SqlOperation sqlOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateStatementsIEnumerableOfMigrationOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateStatements(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateTimeSpan">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GenerateUpdateDatabaseOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.GuidColumnDefaultGet">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.get_GuidColumnDefault()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.InitializeProviderServicesString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.InitializeProviderServices(String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.IsPermissionDeniedErrorException">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.IsPermissionDeniedError(Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.NameString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Name(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.QuoteString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.StatementBatchStringBoolean">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.StatementBatch(String sqlBatch, Boolean suppressTransaction)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.StatementIndentedTextWriterString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Statement(IndentedTextWriter writer, String batchTerminator)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.StatementStringBooleanString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Statement(String sql, Boolean suppressTransaction, String batchTerminator)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.WriteCreateTableCreateTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances.WriteCreateTableCreateTableOperationIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.AllInstances._GenerateStatementsb__2Object">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.&lt;GenerateStatements&gt;b__2(Object o)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.BuildColumnTypeColumnModel">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.BuildColumnType(ColumnModel columnModel)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.BuildPropertyTypePropertyModel">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.BuildPropertyType(PropertyModel propertyModel)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.Constructor">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.SqlServerMigrationSqlGenerator()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.CreateConnection">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.DetectHistoryRebuildIEnumerableOfMigrationOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.DetectHistoryRebuild(IEnumerable`1&lt;MigrationOperation&gt; operations)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.DropDefaultConstraintStringStringIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.DropDefaultConstraint(String table, String column, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.EscapeString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Escape(String s)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAddColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddColumnOperation addColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAddForeignKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAddPrimaryKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAlterColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterColumnOperation alterColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAlterProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterProcedureOperation alterProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateAlterTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(AlterTableOperation alterTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateBoolean">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Boolean defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateByteArray">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateColumnModelIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ColumnModel column, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateCreateIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateIndexOperation createIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateCreateProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateProcedureOperation createProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateCreateSchemaString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateCreateSchema(String schema)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateCreateTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDateTime">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDateTimeOffset">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDbGeography">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDbGeometry">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropColumnOperation dropColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropForeignKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropIndexOperation dropIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropPrimaryKeyOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropProcedureOperation dropProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateDropTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(DropTableOperation dropTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateFunctionSqlICollectionOfDbModificationCommandTreeString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateFunctionSql(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateGuid">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateHistoryOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(HistoryOperation historyOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateIEnumerableOfMigrationOperationString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateMakeSystemTableCreateTableOperationIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateMigrationOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateMoveProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MoveProcedureOperation moveProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateMoveTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(MoveTableOperation moveTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateObject">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateParameterModelIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ParameterModel parameterModel, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateProcedureOperationString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(ProcedureOperation procedureOperation, String modifier)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateRenameColumnOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameColumnOperation renameColumnOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateRenameIndexOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameIndexOperation renameIndexOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateRenameProcedureOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameProcedureOperation renameProcedureOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateRenameTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(RenameTableOperation renameTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateSqlOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(SqlOperation sqlOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateStatementsIEnumerableOfMigrationOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.GenerateStatements(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateTimeSpan">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GenerateUpdateDatabaseOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.GuidColumnDefaultGet">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.get_GuidColumnDefault()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.IndentStringString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Indent(String s, String indentation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.InitializeProviderServicesString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.InitializeProviderServices(String providerManifestToken)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.IsPermissionDeniedErrorException">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.IsPermissionDeniedError(Exception exception)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.NameString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Name(String name)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.QuoteString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Quote(String identifier)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.ResolveNameConflictsCreateTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.ResolveNameConflicts(CreateTableOperation source)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.StatementBatchStringBoolean">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.StatementBatch(String sqlBatch, Boolean suppressTransaction)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.StatementIndentedTextWriterString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Statement(IndentedTextWriter writer, String batchTerminator)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.StatementStringBooleanString">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Statement(String sql, Boolean suppressTransaction, String batchTerminator)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.WriteCreateTableCreateTableOperation">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.WriteCreateTableCreateTableOperationIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.WriteRenameTableRenameTableOperationIndentedTextWriter">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.WriteRenameTable(RenameTableOperation renameTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator.Writer">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.Writer()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlServerMigrationSqlGenerator._GenerateStatementsb__2Object">
            <summary>Задает оболочка совместимости SqlServerMigrationSqlGenerator.&lt;GenerateStatements&gt;b__2(Object o)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlSpatialFunctions</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.AsTextZMDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.AsTextZM(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.AsTextZMDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.AsTextZM(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.BufferWithToleranceDbGeographyNullableOfDoubleNullableOfDoubleNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.BufferWithTolerance(DbGeography geographyValue, Nullable`1&lt;Double&gt; distance, Nullable`1&lt;Double&gt; tolerance, Nullable`1&lt;Boolean&gt; relative)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.BufferWithToleranceDbGeometryNullableOfDoubleNullableOfDoubleNullableOfBoolean">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.BufferWithTolerance(DbGeometry geometryValue, Nullable`1&lt;Double&gt; distance, Nullable`1&lt;Double&gt; tolerance, Nullable`1&lt;Boolean&gt; relative)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.EnvelopeAngleDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.EnvelopeAngle(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.EnvelopeCenterDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.EnvelopeCenter(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.FilterDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.Filter(DbGeography geographyValue, DbGeography geographyOther)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.FilterDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.Filter(DbGeometry geometryValue, DbGeometry geometryOther)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.InstanceOfDbGeographyString">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.InstanceOf(DbGeography geographyValue, String geometryTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.InstanceOfDbGeometryString">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.InstanceOf(DbGeometry geometryValue, String geometryTypeName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.MakeValidDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.MakeValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.NumRingsDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.NumRings(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.PointGeographyNullableOfDoubleNullableOfDoubleNullableOfInt32">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.PointGeography(Nullable`1&lt;Double&gt; latitude, Nullable`1&lt;Double&gt; longitude, Nullable`1&lt;Int32&gt; spatialReferenceId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.PointGeometryNullableOfDoubleNullableOfDoubleNullableOfInt32">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.PointGeometry(Nullable`1&lt;Double&gt; xCoordinate, Nullable`1&lt;Double&gt; yCoordinate, Nullable`1&lt;Int32&gt; spatialReferenceId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.ReduceDbGeographyNullableOfDouble">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.Reduce(DbGeography geographyValue, Nullable`1&lt;Double&gt; tolerance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.ReduceDbGeometryNullableOfDouble">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.Reduce(DbGeometry geometryValue, Nullable`1&lt;Double&gt; tolerance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialFunctions.RingNDbGeographyNullableOfInt32">
            <summary>Задает оболочка совместимости SqlSpatialFunctions.RingN(DbGeography geographyValue, Nullable`1&lt;Int32&gt; index)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.SqlSpatialServices</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.#ctor(System.Data.Entity.SqlServer.SqlSpatialServices)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsBinaryDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsBinaryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsGmlDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsGmlDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsTextDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsTextDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.BufferDbGeographyDouble">
            <summary>Задает оболочка совместимости SqlSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.BufferDbGeometryDouble">
            <summary>Задает оболочка совместимости SqlSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ContainsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlBooleanToBooleanObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBooleanToBoolean(Object sqlBoolean)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlBooleanToNullableBooleanObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBooleanToNullableBoolean(Object sqlBoolean)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlBytesToBinaryObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBytesToBinary(Object sqlBytes)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlCharsToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlCharsToString(Object sqlCharsValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlDoubleToDoubleObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlDoubleToDouble(Object sqlDoubleValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlDoubleToNullableDoubleObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlDoubleToNullableDouble(Object sqlDoubleValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlInt32ToIntObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlInt32ToInt(Object sqlInt32Value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlInt32ToNullableIntObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlInt32ToNullableInt(Object sqlInt32Value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlStringToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlStringToString(Object sqlCharsValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertSqlXmlToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlXmlToString(Object sqlXmlValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlBytesByteArrayString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlBytes(Byte[] binaryValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlCharsStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlChars(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlStringStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlString(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlValueDbGeographyString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlValue(DbGeography geographyValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlValueDbGeometryString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlValue(DbGeometry geometryValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ConvertToSqlXmlStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlXml(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.CreateProviderValueDbGeographyWellKnownValue">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.CreateProviderValueDbGeometryWellKnownValue">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.CreateWellKnownValueDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.CreateWellKnownValueDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.CrossesDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DifferenceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DifferenceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DisjointDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DisjointDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DistanceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.DistanceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ElementAtDbGeographyInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.ElementAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyCollectionFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromBinaryByteArray">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromGmlString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromGmlStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromProviderValueObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromTextString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyMultiPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeographyPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryCollectionFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromBinaryByteArray">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromGmlString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromGmlStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromProviderValueObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromTextString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryMultiPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GeometryPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetAreaDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetAreaDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetBoundaryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetCentroidDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetConvexHullDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetCoordinateSystemIdDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetCoordinateSystemIdDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetDimensionDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetDimensionDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetElementCountDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetElementCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetElevationDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetElevationDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetEndPointDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetEndPointDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetEnvelopeDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetExteriorRingDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetInteriorRingCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsClosedDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsClosedDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsEmptyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsEmptyDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsRingDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsSimpleDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetIsValidDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetLatitudeDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetLengthDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetLengthDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetLongitudeDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetMeasureDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetMeasureDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetPointCountDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetPointCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetPointOnSurfaceDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetSpatialTypeNameDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetSpatialTypeNameDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetStartPointDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetStartPointDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetXCoordinateDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.GetYCoordinateDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.InteriorRingAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.IntersectionDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.IntersectionDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.IntersectsDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.IntersectsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.NativeTypesAvailableGet">
            <summary>Задает оболочка совместимости SqlSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.NormalizeProviderValueObjectType">
            <summary>Задает оболочка совместимости SqlSpatialServices.NormalizeProviderValue(Object providerValue, Type expectedSpatialType)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.OverlapsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.PointAtDbGeographyInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.PointAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.RelateDbGeometryDbGeometryString">
            <summary>Задает оболочка совместимости SqlSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.SpatialEqualsDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.SpatialEqualsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.SymmetricDifferenceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.SymmetricDifferenceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.TouchesDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.UnionDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.UnionDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AllInstances.WithinDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsBinaryDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsBinary(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsBinaryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsBinary(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsGmlDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsGml(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsGmlDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsGml(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsTextDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsText(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsTextDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsText(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsTextIncludingElevationAndMeasureDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsTextIncludingElevationAndMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.AsTextIncludingElevationAndMeasureDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.AsTextIncludingElevationAndMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.BufferDbGeographyDouble">
            <summary>Задает оболочка совместимости SqlSpatialServices.Buffer(DbGeography geographyValue, Double distance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.BufferDbGeometryDouble">
            <summary>Задает оболочка совместимости SqlSpatialServices.Buffer(DbGeometry geometryValue, Double distance)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.Constructor">
            <summary>Задает оболочка совместимости SqlSpatialServices.SqlSpatialServices()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ContainsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Contains(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlBooleanToBooleanObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBooleanToBoolean(Object sqlBoolean)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlBooleanToNullableBooleanObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBooleanToNullableBoolean(Object sqlBoolean)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlBytesToBinaryObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlBytesToBinary(Object sqlBytes)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlCharsToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlCharsToString(Object sqlCharsValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlDoubleToDoubleObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlDoubleToDouble(Object sqlDoubleValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlDoubleToNullableDoubleObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlDoubleToNullableDouble(Object sqlDoubleValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlInt32ToIntObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlInt32ToInt(Object sqlInt32Value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlInt32ToNullableIntObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlInt32ToNullableInt(Object sqlInt32Value)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlStringToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlStringToString(Object sqlCharsValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertSqlXmlToStringObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertSqlXmlToString(Object sqlXmlValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlBytesByteArrayString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlBytes(Byte[] binaryValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlCharsStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlChars(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlStringStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlString(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlValueDbGeographyString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlValue(DbGeography geographyValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlValueDbGeometryString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlValue(DbGeometry geometryValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ConvertToSqlXmlStringString">
            <summary>Задает оболочка совместимости SqlSpatialServices.ConvertToSqlXml(String stringValue, String argumentName)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.CreateProviderValueDbGeographyWellKnownValue">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateProviderValue(DbGeographyWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.CreateProviderValueDbGeometryWellKnownValue">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateProviderValue(DbGeometryWellKnownValue wellKnownValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.CreateWellKnownValueDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateWellKnownValue(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.CreateWellKnownValueDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.CreateWellKnownValue(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.CrossesDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Crosses(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DifferenceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Difference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DifferenceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Difference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DisjointDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Disjoint(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DisjointDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DistanceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Distance(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.DistanceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Distance(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ElementAtDbGeographyInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.ElementAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.ElementAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.ElementAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyCollectionFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyCollectionFromBinary(Byte[] geographyCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyCollectionFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyCollectionFromText(String geographyCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromBinaryByteArray">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromGmlString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromGml(String geographyMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromGmlStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromGml(String geographyMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromProviderValueObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromTextString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyMultiPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeographyPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeographyPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryCollectionFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryCollectionFromBinary(Byte[] geometryCollectionWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryCollectionFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryCollectionFromText(String geometryCollectionWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromBinaryByteArray">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromBinary(Byte[] wellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromGmlString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromGml(String geometryMarkup)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromGmlStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromGml(String geometryMarkup, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromProviderValueObject">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromProviderValue(Object providerValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromTextString">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromText(String wellKnownText)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryFromText(String wellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryLineFromBinary(Byte[] lineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryLineFromText(String lineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiLineFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiLineFromBinary(Byte[] multiLineWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiLineFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiLineFromText(String multiLineWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPointFromBinary(Byte[] multiPointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPointFromText(String multiPointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPolygonFromBinary(Byte[] multiPolygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryMultiPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryMultiPolygonFromText(String multiPolygonKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryPointFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPointFromBinary(Byte[] pointWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryPointFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPointFromText(String pointWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryPolygonFromBinaryByteArrayInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPolygonFromBinary(Byte[] polygonWellKnownBinary, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GeometryPolygonFromTextStringInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.GeometryPolygonFromText(String polygonWellKnownText, Int32 coordinateSystemId)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetAreaDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetArea(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetAreaDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetArea(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetBoundaryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetBoundary(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetCentroidDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCentroid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetConvexHullDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetConvexHull(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetCoordinateSystemIdDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCoordinateSystemId(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetCoordinateSystemIdDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetCoordinateSystemId(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetDimensionDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetDimension(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetDimensionDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetDimension(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetElementCountDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElementCount(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetElementCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElementCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetElevationDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElevation(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetElevationDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetElevation(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetEndPointDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEndPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetEndPointDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEndPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetEnvelopeDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetEnvelope(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetExteriorRingDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetExteriorRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetInteriorRingCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetInteriorRingCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsClosedDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsClosed(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsClosedDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsClosed(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsEmptyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsEmpty(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsEmptyDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsEmpty(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsRingDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsRing(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsSimpleDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsSimple(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetIsValidDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetIsValid(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetLatitudeDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLatitude(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetLengthDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLength(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetLengthDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLength(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetLongitudeDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetLongitude(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetMeasureDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetMeasure(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetMeasureDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetMeasure(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetPointCountDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointCount(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetPointCountDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointCount(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetPointOnSurfaceDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetPointOnSurface(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetSpatialTypeNameDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetSpatialTypeName(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetSpatialTypeNameDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetSpatialTypeName(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetStartPointDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetStartPoint(DbGeography geographyValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetStartPointDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetStartPoint(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetXCoordinateDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetXCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.GetYCoordinateDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.GetYCoordinate(DbGeometry geometryValue)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.InteriorRingAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.InteriorRingAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.IntersectionDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersection(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.IntersectionDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersection(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.IntersectsDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersects(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.IntersectsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Intersects(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.NativeTypesAvailableGet">
            <summary>Задает оболочка совместимости SqlSpatialServices.get_NativeTypesAvailable()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.NormalizeProviderValueObjectType">
            <summary>Задает оболочка совместимости SqlSpatialServices.NormalizeProviderValue(Object providerValue, Type expectedSpatialType)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.OverlapsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.PointAtDbGeographyInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.PointAt(DbGeography geographyValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.PointAtDbGeometryInt32">
            <summary>Задает оболочка совместимости SqlSpatialServices.PointAt(DbGeometry geometryValue, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.RelateDbGeometryDbGeometryString">
            <summary>Задает оболочка совместимости SqlSpatialServices.Relate(DbGeometry geometryValue, DbGeometry otherGeometry, String matrix)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.SpatialEqualsDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.SpatialEquals(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.SpatialEqualsDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.StaticConstructor">
            <summary>Задает оболочка совместимости SqlSpatialServices.SqlSpatialServices()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.SymmetricDifferenceDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.SymmetricDifferenceDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.TouchesDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Touches(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.TryGetSpatialServiceFromAssemblyAssemblySqlSpatialServicesOut">
            <summary>Задает оболочка совместимости SqlSpatialServices.TryGetSpatialServiceFromAssembly(Assembly assembly, SqlSpatialServices&amp; services)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.UnionDbGeographyDbGeography">
            <summary>Задает оболочка совместимости SqlSpatialServices.Union(DbGeography geographyValue, DbGeography otherGeography)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.UnionDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Union(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices.WithinDbGeometryDbGeometry">
            <summary>Задает оболочка совместимости SqlSpatialServices.Within(DbGeometry geometryValue, DbGeometry otherGeometry)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__2">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__2()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__3">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__3()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__4Int32ByteArrayString">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__4(Int32 coordinateSystemId, Byte[] wkb, String wkt)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__9">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__9()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__a">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__a()</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.ShimSqlSpatialServices._CreateWellKnownValueb__bInt32ByteArrayString">
            <summary>Задает оболочка совместимости SqlSpatialServices.&lt;CreateWellKnownValue&gt;b__b(Int32 coordinateSystemId, Byte[] wkb, String wkt)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy">
            <summary>Тип заглушки System.Data.Entity.SqlServer.SqlAzureExecutionStrategy</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.GetNextDelay(System.Exception)">
            <summary>Задает заглушка DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.GetNextDelayException">
            <summary>Задает stub DbExecutionStrategy.GetNextDelay(Exception lastException)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSqlAzureExecutionStrategy</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
            <summary>Задает заглушка SqlAzureExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlAzureExecutionStrategy.ShouldRetryOnException">
            <summary>Задает stub SqlAzureExecutionStrategy.ShouldRetryOn(Exception exception)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator">
            <summary>Тип заглушки System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.BuildColumnType(ColumnModel columnModel)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.BuildColumnTypeColumnModel">
            <summary>Задает stub SqlServerMigrationSqlGenerator.BuildColumnType(ColumnModel columnModel)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.BuildStoreTypeUsage(System.String,System.Data.Entity.Migrations.Model.PropertyModel)">
            <summary>Задает заглушка MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.BuildStoreTypeUsageStringPropertyModel">
            <summary>Задает stub MigrationSqlGenerator.BuildStoreTypeUsage(String storeTypeName, PropertyModel propertyModel)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.CreateConnection">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.CreateConnection()</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.CreateConnection01">
            <summary>Задает stub SqlServerMigrationSqlGenerator.CreateConnection()</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.DropDefaultConstraint(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.DropDefaultConstraint(String table, String column, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.DropDefaultConstraintStringStringIndentedTextWriter">
            <summary>Задает stub SqlServerMigrationSqlGenerator.DropDefaultConstraint(String table, String column, IndentedTextWriter writer)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AlterTableOperation alterTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Boolean)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(Boolean defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Object)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Byte[])">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AddColumnOperation addColumnOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(HistoryOperation historyOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(RenameIndexOperation renameIndexOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(RenameProcedureOperation renameProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.DateTime)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Guid)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(CreateProcedureOperation createProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AlterColumnOperation alterColumnOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(AlterProcedureOperation alterProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(CreateIndexOperation createIndexOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropColumnOperation dropColumnOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropIndexOperation dropIndexOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropProcedureOperation dropProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(DropTableOperation dropTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(MoveProcedureOperation moveProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(MoveTableOperation moveTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(RenameColumnOperation renameColumnOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(RenameTableOperation renameTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(SqlOperation sqlOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Generate(ColumnModel column, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAddColumnOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AddColumnOperation addColumnOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAddForeignKeyOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AddForeignKeyOperation addForeignKeyOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAddPrimaryKeyOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AddPrimaryKeyOperation addPrimaryKeyOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAlterColumnOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AlterColumnOperation alterColumnOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAlterProcedureOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AlterProcedureOperation alterProcedureOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateAlterTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(AlterTableOperation alterTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateBoolean">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(Boolean defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateByteArray">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(Byte[] defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateColumnModelIndentedTextWriter">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(ColumnModel column, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateCreateIndexOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(CreateIndexOperation createIndexOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateCreateProcedureOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(CreateProcedureOperation createProcedureOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.GenerateCreateSchema(String schema)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateCreateSchemaString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.GenerateCreateSchema(String schema)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateCreateTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDateTime">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DateTime defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDateTimeOffset">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DateTimeOffset defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDbGeography">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DbGeography defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDbGeometry">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DbGeometry defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropColumnOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropColumnOperation dropColumnOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropForeignKeyOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropForeignKeyOperation dropForeignKeyOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropIndexOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropIndexOperation dropIndexOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropPrimaryKeyOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropPrimaryKeyOperation dropPrimaryKeyOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropProcedureOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropProcedureOperation dropProcedureOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateDropTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(DropTableOperation dropTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateGuid">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(Guid defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateHistoryOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(HistoryOperation historyOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateIEnumerableOfMigrationOperationString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(IEnumerable`1&lt;MigrationOperation&gt; migrationOperations, String providerManifestToken)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateMakeSystemTableCreateTableOperationIndentedTextWriter">
            <summary>Задает stub SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateMigrationOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(MigrationOperation migrationOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateMoveProcedureOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(MoveProcedureOperation moveProcedureOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateMoveTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(MoveTableOperation moveTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateObject">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(Object defaultValue)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateProcedureBodyICollectionOfDbModificationCommandTreeStringString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.GenerateProcedureBody(ICollection`1&lt;DbModificationCommandTree&gt; commandTrees, String rowsAffectedParameter, String providerManifestToken)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateRenameColumnOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(RenameColumnOperation renameColumnOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateRenameIndexOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(RenameIndexOperation renameIndexOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateRenameProcedureOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(RenameProcedureOperation renameProcedureOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateRenameTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(RenameTableOperation renameTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateSqlOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(SqlOperation sqlOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(String defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateTimeSpan">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(TimeSpan defaultValue)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GenerateUpdateDatabaseOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Generate(UpdateDatabaseOperation updateDatabaseOperation)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GuidColumnDefault">
            <summary>Задает stub SqlServerMigrationSqlGenerator.get_GuidColumnDefault()</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.GuidColumnDefaultGet">
            <summary>Задает stub SqlServerMigrationSqlGenerator.get_GuidColumnDefault()</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSqlServerMigrationSqlGenerator</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.IsPermissionDeniedError(System.Exception)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.IsPermissionDeniedError(Exception exception)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.IsPermissionDeniedErrorException">
            <summary>Задает stub SqlServerMigrationSqlGenerator.IsPermissionDeniedError(Exception exception)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Name(System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Name(String name)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.NameString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Name(String name)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.Quote(System.String)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.Quote(String identifier)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.QuoteString">
            <summary>Задает stub SqlServerMigrationSqlGenerator.Quote(String identifier)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>Задает заглушка SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.WriteCreateTableCreateTableOperation">
            <summary>Задает stub SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation)</summary>
        </member>
        <member name="F:System.Data.Entity.SqlServer.Fakes.StubSqlServerMigrationSqlGenerator.WriteCreateTableCreateTableOperationIndentedTextWriter">
            <summary>Задает stub SqlServerMigrationSqlGenerator.WriteCreateTable(CreateTableOperation createTableOperation, IndentedTextWriter writer)</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.Utilities.TaskExtensions</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.Utilities.TaskExtensions+CultureAwaiter</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1">
            <summary>Тип оболочки совместимости для System.Data.Entity.SqlServer.Utilities.TaskExtensions+CultureAwaiter`1</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="T:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.ShimCultureAwaiter`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.WithCurrentCultureOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter{``0}})">
            <summary>Задает оболочка совместимости TaskExtensions.WithCurrentCulture(Task`1&lt;!!0&gt; task)</summary>
        </member>
        <member name="P:System.Data.Entity.SqlServer.Utilities.Fakes.ShimTaskExtensions.WithCurrentCultureTask">
            <summary>Задает оболочка совместимости TaskExtensions.WithCurrentCulture(Task task)</summary>
        </member>
    </members>
</doc>
