

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "EfDatabase\App.config"
//     Connection String Name: "RiskSyte"
//     Connection String:      "Data Source=77068-app065;Initial Catalog=RISKS;Integrated Security=True;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Standard Edition (64-bit)
// Database Engine Edition : Standard
// Database Version        : 12.0.5223.6

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ifns51.Risk
{

    #region Unit of work

    public interface IRisksContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Actstat> Actstats { get; set; } // ACTSTAT
        System.Data.Entity.DbSet<Addrobj> Addrobjs { get; set; } // ADDROBJ
        System.Data.Entity.DbSet<AhalisBdk> AhalisBdks { get; set; } // AhalisBdk
        System.Data.Entity.DbSet<AisHd> AisHds { get; set; } // AIS_HD
        System.Data.Entity.DbSet<AisProcess> AisProcesses { get; set; } // AIS_PROCESS
        System.Data.Entity.DbSet<AisProcessLog> AisProcessLogs { get; set; } // AIS_PROCESS_LOG
        System.Data.Entity.DbSet<AisRequest> AisRequests { get; set; } // AIS_REQUEST
        System.Data.Entity.DbSet<AisRule> AisRules { get; set; } // AIS_RULES
        System.Data.Entity.DbSet<AnalizNo> AnalizNoes { get; set; } // AnalizNO
        System.Data.Entity.DbSet<AsActstat> AsActstats { get; set; } // AS_ACTSTAT
        System.Data.Entity.DbSet<AsAddrobj> AsAddrobjs { get; set; } // AS_ADDROBJ
        System.Data.Entity.DbSet<AsCenterst> AsCentersts { get; set; } // AS_CENTERST
        System.Data.Entity.DbSet<AsCurentst> AsCurentsts { get; set; } // AS_CURENTST
        System.Data.Entity.DbSet<AsDelAddrobj> AsDelAddrobjs { get; set; } // AS_DEL_ADDROBJ
        System.Data.Entity.DbSet<AsDelHouse> AsDelHouses { get; set; } // AS_DEL_HOUSE
        System.Data.Entity.DbSet<AsDelHouseint> AsDelHouseints { get; set; } // AS_DEL_HOUSEINT
        System.Data.Entity.DbSet<AsDelLandmark> AsDelLandmarks { get; set; } // AS_DEL_LANDMARK
        System.Data.Entity.DbSet<AsDelNormdoc> AsDelNormdocs { get; set; } // AS_DEL_NORMDOC
        System.Data.Entity.DbSet<AsEststat> AsEststats { get; set; } // AS_ESTSTAT
        System.Data.Entity.DbSet<AsFlattype> AsFlattypes { get; set; } // AS_FLATTYPE
        System.Data.Entity.DbSet<AsHouse> AsHouses { get; set; } // AS_HOUSE
        System.Data.Entity.DbSet<AsHststat> AsHststats { get; set; } // AS_HSTSTAT
        System.Data.Entity.DbSet<AsNdoctype> AsNdoctypes { get; set; } // AS_NDOCTYPE
        System.Data.Entity.DbSet<AsNormdoc> AsNormdocs { get; set; } // AS_NORMDOC
        System.Data.Entity.DbSet<AsOperstat> AsOperstats { get; set; } // AS_OPERSTAT
        System.Data.Entity.DbSet<AsRoom> AsRooms { get; set; } // AS_ROOM
        System.Data.Entity.DbSet<AsRoomtype> AsRoomtypes { get; set; } // AS_ROOMTYPE
        System.Data.Entity.DbSet<AsSocrbase> AsSocrbases { get; set; } // AS_SOCRBASE
        System.Data.Entity.DbSet<AsStead> AsSteads { get; set; } // AS_STEAD
        System.Data.Entity.DbSet<AsStrstat> AsStrstats { get; set; } // AS_STRSTAT
        System.Data.Entity.DbSet<AsVersion> AsVersions { get; set; } // AS_VERSION
        System.Data.Entity.DbSet<BankAccExclusion> BankAccExclusions { get; set; } // BANK_ACC_EXCLUSION
        System.Data.Entity.DbSet<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN
        System.Data.Entity.DbSet<BankDocument> BankDocuments { get; set; } // BANK_DOCUMENT
        System.Data.Entity.DbSet<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS
        System.Data.Entity.DbSet<Bnkseek> Bnkseeks { get; set; } // BNKSEEK
        System.Data.Entity.DbSet<Body> Bodies { get; set; } // Body
        System.Data.Entity.DbSet<CbrBank> CbrBanks { get; set; } // CBR_BANKS
        System.Data.Entity.DbSet<CbrBankRelevance> CbrBankRelevances { get; set; } // CBR_BANK_RELEVANCE
        System.Data.Entity.DbSet<Centerst> Centersts { get; set; } // CENTERST
        System.Data.Entity.DbSet<ChainRequest> ChainRequests { get; set; } // CHAIN_REQUEST
        System.Data.Entity.DbSet<ChainRequestHistory> ChainRequestHistories { get; set; } // CHAIN_REQUEST_HISTORY
        System.Data.Entity.DbSet<ChainToHandler> ChainToHandlers { get; set; } // CHAIN_TO_HANDLER
        System.Data.Entity.DbSet<ClassOtdel> ClassOtdels { get; set; } // ClassOtdel
        System.Data.Entity.DbSet<ConfigCode> ConfigCodes { get; set; } // CONFIG_CODE
        System.Data.Entity.DbSet<Curentst> Curentsts { get; set; } // CURENTST
        System.Data.Entity.DbSet<DbConfig> DbConfigs { get; set; } // DB_CONFIG
        System.Data.Entity.DbSet<DeclDatum> DeclDatums { get; set; } // DECL_DATA
        System.Data.Entity.DbSet<DeclKndCode> DeclKndCodes { get; set; } // DECL_KND_CODE
        System.Data.Entity.DbSet<DeclRow> DeclRows { get; set; } // DECL_ROW
        System.Data.Entity.DbSet<DelaPriemObu> DelaPriemObus { get; set; } // DelaPriemObu
        System.Data.Entity.DbSet<Delo> Deloes { get; set; } // Delo
        System.Data.Entity.DbSet<DocTemplate> DocTemplates { get; set; } // DocTemplate
        System.Data.Entity.DbSet<DocumentDetalization> DocumentDetalizations { get; set; } // DocumentDetalization
        System.Data.Entity.DbSet<DocumentReglament> DocumentReglaments { get; set; } // DocumentReglament
        System.Data.Entity.DbSet<DplFile> DplFiles { get; set; } // DPL_FILES
        System.Data.Entity.DbSet<DplServer> DplServers { get; set; } // DPL_SERVERS
        System.Data.Entity.DbSet<Eststat> Eststats { get; set; } // ESTSTAT
        System.Data.Entity.DbSet<Face> Faces { get; set; } // Face
        System.Data.Entity.DbSet<FiasLoad> FiasLoads { get; set; } // FIAS_LOAD
        System.Data.Entity.DbSet<FiasLoadProgress> FiasLoadProgresses { get; set; } // FIAS_LOAD_PROGRESS
        System.Data.Entity.DbSet<FiasVersion> FiasVersions { get; set; } // FIAS_VERSION
        System.Data.Entity.DbSet<FileIcon> FileIcons { get; set; } // FILE_ICON
        System.Data.Entity.DbSet<Flattype> Flattypes { get; set; } // FLATTYPE
        System.Data.Entity.DbSet<Fn1341> Fn1341 { get; set; } // fn1341
        System.Data.Entity.DbSet<Fn1341Trust> Fn1341Trust { get; set; } // FN1341_TRUST
        System.Data.Entity.DbSet<Fn18441> Fn18441 { get; set; } // FN18441
        System.Data.Entity.DbSet<Fn1903> Fn1903 { get; set; } // FN1903
        System.Data.Entity.DbSet<Fn3042> Fn3042 { get; set; } // FN3042
        System.Data.Entity.DbSet<Fn502> Fn502 { get; set; } // FN50_2
        System.Data.Entity.DbSet<Fn503> Fn503 { get; set; } // FN50_3
        System.Data.Entity.DbSet<GroupOtdel> GroupOtdels { get; set; } // GroupOtdel
        System.Data.Entity.DbSet<HandlerChain> HandlerChains { get; set; } // HANDLER_CHAIN
        System.Data.Entity.DbSet<Header> Headers { get; set; } // Headers
        System.Data.Entity.DbSet<HName> HNames { get; set; } // H_NAMES
        System.Data.Entity.DbSet<House> Houses { get; set; } // HOUSE
        System.Data.Entity.DbSet<Hststat> Hststats { get; set; } // HSTSTAT
        System.Data.Entity.DbSet<Incass> Incasses { get; set; } // Incass
        System.Data.Entity.DbSet<IteratorRe> IteratorRes { get; set; } // ITERATOR_RES
        System.Data.Entity.DbSet<JobDataDt> JobDataDts { get; set; } // JOB_DATA_DT
        System.Data.Entity.DbSet<JobDataInt> JobDataInts { get; set; } // JOB_DATA_INT
        System.Data.Entity.DbSet<JobDataStr> JobDataStrs { get; set; } // JOB_DATA_STR
        System.Data.Entity.DbSet<JobDataXml> JobDataXmls { get; set; } // JOB_DATA_XML
        System.Data.Entity.DbSet<JobDatum> JobDatums { get; set; } // JOB_DATA
        System.Data.Entity.DbSet<KaoCerhistory> KaoCerhistories { get; set; } // KAO_CERHISTORY
        System.Data.Entity.DbSet<KaoRanhistory> KaoRanhistories { get; set; } // KAO_RANHISTORY
        System.Data.Entity.DbSet<KaoRhistory> KaoRhistories { get; set; } // KAO_RHISTORY
        System.Data.Entity.DbSet<KaoRogue> KaoRogues { get; set; } // KAO_ROGUE
        System.Data.Entity.DbSet<KaoRogueAbo> KaoRogueAboes { get; set; } // KAO_ROGUE_ABO
        System.Data.Entity.DbSet<KaoRogueCert> KaoRogueCerts { get; set; } // KAO_ROGUE_CERT
        System.Data.Entity.DbSet<KbkAnaliz> KbkAnalizs { get; set; } // KbkAnaliz
        System.Data.Entity.DbSet<LdCourt> LdCourts { get; set; } // LD_COURT
        System.Data.Entity.DbSet<LockNg> LockNgs { get; set; } // LOCK_NG
        System.Data.Entity.DbSet<LotusDoc> LotusDocs { get; set; } // LOTUS_DOCS
        System.Data.Entity.DbSet<LotusFile> LotusFiles { get; set; } // LOTUS_FILE
        System.Data.Entity.DbSet<LotusMovement> LotusMovements { get; set; } // LOTUS_MOVEMENT
        System.Data.Entity.DbSet<LotusMovementHistory> LotusMovementHistories { get; set; } // LOTUS_MOVEMENT_HISTORY
        System.Data.Entity.DbSet<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE
        System.Data.Entity.DbSet<MessageDate> MessageDates { get; set; } // MessageDate
        System.Data.Entity.DbSet<MessageStatusUh> MessageStatusUhs { get; set; } // MessageStatusUh
        System.Data.Entity.DbSet<MessageStrahovieAndOtkaz> MessageStrahovieAndOtkazs { get; set; } // MessageStrahovieAndOtkaz
        System.Data.Entity.DbSet<MessageVivod> MessageVivods { get; set; } // MessageVivod
        System.Data.Entity.DbSet<NameDocument> NameDocuments { get; set; } // NameDocument
        System.Data.Entity.DbSet<NdflInv> NdflInvs { get; set; } // NDFL_INV
        System.Data.Entity.DbSet<Ndoctype> Ndoctypes { get; set; } // NDOCTYPE
        System.Data.Entity.DbSet<Normdoc> Normdocs { get; set; } // NORMDOC
        System.Data.Entity.DbSet<Operstat> Operstats { get; set; } // OPERSTAT
        System.Data.Entity.DbSet<PostalDoc2Roll> PostalDoc2Roll { get; set; } // POSTAL_DOC2ROLL
        System.Data.Entity.DbSet<PostalDoctype> PostalDoctypes { get; set; } // POSTAL_DOCTYPE
        System.Data.Entity.DbSet<PostalDocument> PostalDocuments { get; set; } // POSTAL_DOCUMENT
        System.Data.Entity.DbSet<PostalDocumentField> PostalDocumentFields { get; set; } // POSTAL_DOCUMENT_FIELD
        System.Data.Entity.DbSet<PostalField> PostalFields { get; set; } // POSTAL_FIELD
        System.Data.Entity.DbSet<PostalRoll> PostalRolls { get; set; } // POSTAL_ROLL
        System.Data.Entity.DbSet<PostalRollType> PostalRollTypes { get; set; } // POSTAL_ROLL_TYPE
        System.Data.Entity.DbSet<RbCourt> RbCourts { get; set; } // RB_COURT
        System.Data.Entity.DbSet<RbCourtException> RbCourtExceptions { get; set; } // RB_COURT_EXCEPTIONS
        System.Data.Entity.DbSet<RbCourtType> RbCourtTypes { get; set; } // RB_COURT_TYPE
        System.Data.Entity.DbSet<RbDeclCode> RbDeclCodes { get; set; } // RB_DECL_CODES
        System.Data.Entity.DbSet<RbHoliday> RbHolidays { get; set; } // RB_HOLIDAYS
        System.Data.Entity.DbSet<RbReport> RbReports { get; set; } // RB_REPORT
        System.Data.Entity.DbSet<RbZgClass> RbZgClasses { get; set; } // RB_ZG_CLASSES
        System.Data.Entity.DbSet<RcRecord> RcRecords { get; set; } // RC_RECORDS
        System.Data.Entity.DbSet<RecReason> RecReasons { get; set; } // REC_REASON
        System.Data.Entity.DbSet<ReportFilter> ReportFilters { get; set; } // REPORT_FILTER
        System.Data.Entity.DbSet<ReqType> ReqTypes { get; set; } // REQ_TYPE
        System.Data.Entity.DbSet<Reshenie> Reshenies { get; set; } // Reshenie
        System.Data.Entity.DbSet<RfBigDatum> RfBigDatums { get; set; } // RF_BIG_DATA
        System.Data.Entity.DbSet<RiskChecker> RiskCheckers { get; set; } // RISK_CHECKER
        System.Data.Entity.DbSet<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY
        System.Data.Entity.DbSet<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212
        System.Data.Entity.DbSet<RiskCycle> RiskCycles { get; set; } // RISK_CYCLE
        System.Data.Entity.DbSet<RiskDossier> RiskDossiers { get; set; } // RISK_DOSSIER
        System.Data.Entity.DbSet<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE
        System.Data.Entity.DbSet<RiskFailureHistory> RiskFailureHistories { get; set; } // RISK_FAILURE_HISTORY
        System.Data.Entity.DbSet<RiskField> RiskFields { get; set; } // RISK_FIELDS
        System.Data.Entity.DbSet<RiskFn1048> RiskFn1048 { get; set; } // RISK_FN1048
        System.Data.Entity.DbSet<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836
        System.Data.Entity.DbSet<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844
        System.Data.Entity.DbSet<RiskFn1903> RiskFn1903 { get; set; } // RISK_FN1903
        System.Data.Entity.DbSet<RiskFn205> RiskFn205 { get; set; } // RISK_FN205
        System.Data.Entity.DbSet<RiskFn206> RiskFn206 { get; set; } // RISK_FN206
        System.Data.Entity.DbSet<RiskFn210> RiskFn210 { get; set; } // RISK_FN210
        System.Data.Entity.DbSet<RiskFn211> RiskFn211 { get; set; } // RISK_FN211
        System.Data.Entity.DbSet<RiskFn212> RiskFn212 { get; set; } // RISK_FN212
        System.Data.Entity.DbSet<RiskFn236> RiskFn236 { get; set; } // RISK_FN236
        System.Data.Entity.DbSet<RiskFn245> RiskFn245 { get; set; } // RISK_FN245
        System.Data.Entity.DbSet<RiskFn71> RiskFn71 { get; set; } // RISK_FN71
        System.Data.Entity.DbSet<RiskFn72> RiskFn72 { get; set; } // RISK_FN72
        System.Data.Entity.DbSet<RiskFn74> RiskFn74 { get; set; } // RISK_FN74
        System.Data.Entity.DbSet<RiskIncomeTaxation> RiskIncomeTaxations { get; set; } // RISK_INCOME_TAXATION
        System.Data.Entity.DbSet<RiskLock> RiskLocks { get; set; } // RISK_LOCK
        System.Data.Entity.DbSet<RiskMime> RiskMimes { get; set; } // RISK_MIME
        System.Data.Entity.DbSet<RiskNdfl> RiskNdfls { get; set; } // RISK_NDFL
        System.Data.Entity.DbSet<RiskNdfl2> RiskNdfl2 { get; set; } // RISK_NDFL2
        System.Data.Entity.DbSet<RiskProxy> RiskProxies { get; set; } // RISK_PROXY
        System.Data.Entity.DbSet<RiskVersion> RiskVersions { get; set; } // RISK_VERSION
        System.Data.Entity.DbSet<RiskWeb> RiskWebs { get; set; } // RISK_WEB
        System.Data.Entity.DbSet<RiskYear> RiskYears { get; set; } // RISK_YEAR
        System.Data.Entity.DbSet<Room> Rooms { get; set; } // ROOM
        System.Data.Entity.DbSet<Roomtype> Roomtypes { get; set; } // ROOMTYPE
        System.Data.Entity.DbSet<ServerIfn> ServerIfns { get; set; } // ServerIfns
        System.Data.Entity.DbSet<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand
        System.Data.Entity.DbSet<ShedJob> ShedJobs { get; set; } // SHED_JOB
        System.Data.Entity.DbSet<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA
        System.Data.Entity.DbSet<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG
        System.Data.Entity.DbSet<ShedReport> ShedReports { get; set; } // SHED_REPORT
        System.Data.Entity.DbSet<Signature> Signatures { get; set; } // SIGNATURE
        System.Data.Entity.DbSet<Signer> Signers { get; set; } // SIGNER
        System.Data.Entity.DbSet<SmevCar> SmevCars { get; set; } // SMEV_CAR
        System.Data.Entity.DbSet<SmevCred> SmevCreds { get; set; } // SMEV_CRED
        System.Data.Entity.DbSet<SmevParam> SmevParams { get; set; } // SMEV_PARAM
        System.Data.Entity.DbSet<SmevReq> SmevReqs { get; set; } // SMEV_REQ
        System.Data.Entity.DbSet<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE
        System.Data.Entity.DbSet<SobytieOtdel> SobytieOtdels { get; set; } // SobytieOtdel
        System.Data.Entity.DbSet<Socrbase> Socrbases { get; set; } // SOCRBASE
        System.Data.Entity.DbSet<StatusAnaliz> StatusAnalizs { get; set; } // StatusAnaliz
        System.Data.Entity.DbSet<StatusPriem> StatusPriems { get; set; } // StatusPriem
        System.Data.Entity.DbSet<StatusTrebOnIcass> StatusTrebOnIcasses { get; set; } // StatusTrebOnIcass
        System.Data.Entity.DbSet<Stead> Steads { get; set; } // STEAD
        System.Data.Entity.DbSet<Stone> Stones { get; set; } // Stone
        System.Data.Entity.DbSet<Strstat> Strstats { get; set; } // STRSTAT
        System.Data.Entity.DbSet<TableSysNumReshen> TableSysNumReshens { get; set; } // TableSysNumReshen
        System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        System.Data.Entity.DbSet<UseTableTemplateBdk> UseTableTemplateBdks { get; set; } // UseTableTemplateBdk
        System.Data.Entity.DbSet<VidDelaException> VidDelaExceptions { get; set; } // VidDelaException
        System.Data.Entity.DbSet<WhdDecl> WhdDecls { get; set; } // WHD_DECL
        System.Data.Entity.DbSet<WhdFn212> WhdFn212 { get; set; } // WHD_FN212
        System.Data.Entity.DbSet<WhdGauge> WhdGauges { get; set; } // WHD_GAUGE
        System.Data.Entity.DbSet<WhdVnp> WhdVnps { get; set; } // WHD_VNP
        System.Data.Entity.DbSet<WhfAccreq> WhfAccreqs { get; set; } // WHF_ACCREQ
        System.Data.Entity.DbSet<WhfGap> WhfGaps { get; set; } // WHF_GAPS
        System.Data.Entity.DbSet<WhfVat> WhfVats { get; set; } // WHF_VAT
        System.Data.Entity.DbSet<WhtOperation> WhtOperations { get; set; } // WHT_OPERATIONS
        System.Data.Entity.DbSet<WhtThreshold> WhtThresholds { get; set; } // WHT_THRESHOLDS
        System.Data.Entity.DbSet<WordDocument> WordDocuments { get; set; } // WordDocument
        System.Data.Entity.DbSet<Xlcolor> Xlcolors { get; set; } // XLCOLOR
        System.Data.Entity.DbSet<XlReport> XlReports { get; set; } // XL_REPORT
        System.Data.Entity.DbSet<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL
        System.Data.Entity.DbSet<XmlParam> XmlParams { get; set; } // XML_PARAMS

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RisksContext : System.Data.Entity.DbContext, IRisksContext
    {
        public System.Data.Entity.DbSet<Actstat> Actstats { get; set; } // ACTSTAT
        public System.Data.Entity.DbSet<Addrobj> Addrobjs { get; set; } // ADDROBJ
        public System.Data.Entity.DbSet<AhalisBdk> AhalisBdks { get; set; } // AhalisBdk
        public System.Data.Entity.DbSet<AisHd> AisHds { get; set; } // AIS_HD
        public System.Data.Entity.DbSet<AisProcess> AisProcesses { get; set; } // AIS_PROCESS
        public System.Data.Entity.DbSet<AisProcessLog> AisProcessLogs { get; set; } // AIS_PROCESS_LOG
        public System.Data.Entity.DbSet<AisRequest> AisRequests { get; set; } // AIS_REQUEST
        public System.Data.Entity.DbSet<AisRule> AisRules { get; set; } // AIS_RULES
        public System.Data.Entity.DbSet<AnalizNo> AnalizNoes { get; set; } // AnalizNO
        public System.Data.Entity.DbSet<AsActstat> AsActstats { get; set; } // AS_ACTSTAT
        public System.Data.Entity.DbSet<AsAddrobj> AsAddrobjs { get; set; } // AS_ADDROBJ
        public System.Data.Entity.DbSet<AsCenterst> AsCentersts { get; set; } // AS_CENTERST
        public System.Data.Entity.DbSet<AsCurentst> AsCurentsts { get; set; } // AS_CURENTST
        public System.Data.Entity.DbSet<AsDelAddrobj> AsDelAddrobjs { get; set; } // AS_DEL_ADDROBJ
        public System.Data.Entity.DbSet<AsDelHouse> AsDelHouses { get; set; } // AS_DEL_HOUSE
        public System.Data.Entity.DbSet<AsDelHouseint> AsDelHouseints { get; set; } // AS_DEL_HOUSEINT
        public System.Data.Entity.DbSet<AsDelLandmark> AsDelLandmarks { get; set; } // AS_DEL_LANDMARK
        public System.Data.Entity.DbSet<AsDelNormdoc> AsDelNormdocs { get; set; } // AS_DEL_NORMDOC
        public System.Data.Entity.DbSet<AsEststat> AsEststats { get; set; } // AS_ESTSTAT
        public System.Data.Entity.DbSet<AsFlattype> AsFlattypes { get; set; } // AS_FLATTYPE
        public System.Data.Entity.DbSet<AsHouse> AsHouses { get; set; } // AS_HOUSE
        public System.Data.Entity.DbSet<AsHststat> AsHststats { get; set; } // AS_HSTSTAT
        public System.Data.Entity.DbSet<AsNdoctype> AsNdoctypes { get; set; } // AS_NDOCTYPE
        public System.Data.Entity.DbSet<AsNormdoc> AsNormdocs { get; set; } // AS_NORMDOC
        public System.Data.Entity.DbSet<AsOperstat> AsOperstats { get; set; } // AS_OPERSTAT
        public System.Data.Entity.DbSet<AsRoom> AsRooms { get; set; } // AS_ROOM
        public System.Data.Entity.DbSet<AsRoomtype> AsRoomtypes { get; set; } // AS_ROOMTYPE
        public System.Data.Entity.DbSet<AsSocrbase> AsSocrbases { get; set; } // AS_SOCRBASE
        public System.Data.Entity.DbSet<AsStead> AsSteads { get; set; } // AS_STEAD
        public System.Data.Entity.DbSet<AsStrstat> AsStrstats { get; set; } // AS_STRSTAT
        public System.Data.Entity.DbSet<AsVersion> AsVersions { get; set; } // AS_VERSION
        public System.Data.Entity.DbSet<BankAccExclusion> BankAccExclusions { get; set; } // BANK_ACC_EXCLUSION
        public System.Data.Entity.DbSet<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN
        public System.Data.Entity.DbSet<BankDocument> BankDocuments { get; set; } // BANK_DOCUMENT
        public System.Data.Entity.DbSet<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS
        public System.Data.Entity.DbSet<Bnkseek> Bnkseeks { get; set; } // BNKSEEK
        public System.Data.Entity.DbSet<Body> Bodies { get; set; } // Body
        public System.Data.Entity.DbSet<CbrBank> CbrBanks { get; set; } // CBR_BANKS
        public System.Data.Entity.DbSet<CbrBankRelevance> CbrBankRelevances { get; set; } // CBR_BANK_RELEVANCE
        public System.Data.Entity.DbSet<Centerst> Centersts { get; set; } // CENTERST
        public System.Data.Entity.DbSet<ChainRequest> ChainRequests { get; set; } // CHAIN_REQUEST
        public System.Data.Entity.DbSet<ChainRequestHistory> ChainRequestHistories { get; set; } // CHAIN_REQUEST_HISTORY
        public System.Data.Entity.DbSet<ChainToHandler> ChainToHandlers { get; set; } // CHAIN_TO_HANDLER
        public System.Data.Entity.DbSet<ClassOtdel> ClassOtdels { get; set; } // ClassOtdel
        public System.Data.Entity.DbSet<ConfigCode> ConfigCodes { get; set; } // CONFIG_CODE
        public System.Data.Entity.DbSet<Curentst> Curentsts { get; set; } // CURENTST
        public System.Data.Entity.DbSet<DbConfig> DbConfigs { get; set; } // DB_CONFIG
        public System.Data.Entity.DbSet<DeclDatum> DeclDatums { get; set; } // DECL_DATA
        public System.Data.Entity.DbSet<DeclKndCode> DeclKndCodes { get; set; } // DECL_KND_CODE
        public System.Data.Entity.DbSet<DeclRow> DeclRows { get; set; } // DECL_ROW
        public System.Data.Entity.DbSet<DelaPriemObu> DelaPriemObus { get; set; } // DelaPriemObu
        public System.Data.Entity.DbSet<Delo> Deloes { get; set; } // Delo
        public System.Data.Entity.DbSet<DocTemplate> DocTemplates { get; set; } // DocTemplate
        public System.Data.Entity.DbSet<DocumentDetalization> DocumentDetalizations { get; set; } // DocumentDetalization
        public System.Data.Entity.DbSet<DocumentReglament> DocumentReglaments { get; set; } // DocumentReglament
        public System.Data.Entity.DbSet<DplFile> DplFiles { get; set; } // DPL_FILES
        public System.Data.Entity.DbSet<DplServer> DplServers { get; set; } // DPL_SERVERS
        public System.Data.Entity.DbSet<Eststat> Eststats { get; set; } // ESTSTAT
        public System.Data.Entity.DbSet<Face> Faces { get; set; } // Face
        public System.Data.Entity.DbSet<FiasLoad> FiasLoads { get; set; } // FIAS_LOAD
        public System.Data.Entity.DbSet<FiasLoadProgress> FiasLoadProgresses { get; set; } // FIAS_LOAD_PROGRESS
        public System.Data.Entity.DbSet<FiasVersion> FiasVersions { get; set; } // FIAS_VERSION
        public System.Data.Entity.DbSet<FileIcon> FileIcons { get; set; } // FILE_ICON
        public System.Data.Entity.DbSet<Flattype> Flattypes { get; set; } // FLATTYPE
        public System.Data.Entity.DbSet<Fn1341> Fn1341 { get; set; } // fn1341
        public System.Data.Entity.DbSet<Fn1341Trust> Fn1341Trust { get; set; } // FN1341_TRUST
        public System.Data.Entity.DbSet<Fn18441> Fn18441 { get; set; } // FN18441
        public System.Data.Entity.DbSet<Fn1903> Fn1903 { get; set; } // FN1903
        public System.Data.Entity.DbSet<Fn3042> Fn3042 { get; set; } // FN3042
        public System.Data.Entity.DbSet<Fn502> Fn502 { get; set; } // FN50_2
        public System.Data.Entity.DbSet<Fn503> Fn503 { get; set; } // FN50_3
        public System.Data.Entity.DbSet<GroupOtdel> GroupOtdels { get; set; } // GroupOtdel
        public System.Data.Entity.DbSet<HandlerChain> HandlerChains { get; set; } // HANDLER_CHAIN
        public System.Data.Entity.DbSet<Header> Headers { get; set; } // Headers
        public System.Data.Entity.DbSet<HName> HNames { get; set; } // H_NAMES
        public System.Data.Entity.DbSet<House> Houses { get; set; } // HOUSE
        public System.Data.Entity.DbSet<Hststat> Hststats { get; set; } // HSTSTAT
        public System.Data.Entity.DbSet<Incass> Incasses { get; set; } // Incass
        public System.Data.Entity.DbSet<IteratorRe> IteratorRes { get; set; } // ITERATOR_RES
        public System.Data.Entity.DbSet<JobDataDt> JobDataDts { get; set; } // JOB_DATA_DT
        public System.Data.Entity.DbSet<JobDataInt> JobDataInts { get; set; } // JOB_DATA_INT
        public System.Data.Entity.DbSet<JobDataStr> JobDataStrs { get; set; } // JOB_DATA_STR
        public System.Data.Entity.DbSet<JobDataXml> JobDataXmls { get; set; } // JOB_DATA_XML
        public System.Data.Entity.DbSet<JobDatum> JobDatums { get; set; } // JOB_DATA
        public System.Data.Entity.DbSet<KaoCerhistory> KaoCerhistories { get; set; } // KAO_CERHISTORY
        public System.Data.Entity.DbSet<KaoRanhistory> KaoRanhistories { get; set; } // KAO_RANHISTORY
        public System.Data.Entity.DbSet<KaoRhistory> KaoRhistories { get; set; } // KAO_RHISTORY
        public System.Data.Entity.DbSet<KaoRogue> KaoRogues { get; set; } // KAO_ROGUE
        public System.Data.Entity.DbSet<KaoRogueAbo> KaoRogueAboes { get; set; } // KAO_ROGUE_ABO
        public System.Data.Entity.DbSet<KaoRogueCert> KaoRogueCerts { get; set; } // KAO_ROGUE_CERT
        public System.Data.Entity.DbSet<KbkAnaliz> KbkAnalizs { get; set; } // KbkAnaliz
        public System.Data.Entity.DbSet<LdCourt> LdCourts { get; set; } // LD_COURT
        public System.Data.Entity.DbSet<LockNg> LockNgs { get; set; } // LOCK_NG
        public System.Data.Entity.DbSet<LotusDoc> LotusDocs { get; set; } // LOTUS_DOCS
        public System.Data.Entity.DbSet<LotusFile> LotusFiles { get; set; } // LOTUS_FILE
        public System.Data.Entity.DbSet<LotusMovement> LotusMovements { get; set; } // LOTUS_MOVEMENT
        public System.Data.Entity.DbSet<LotusMovementHistory> LotusMovementHistories { get; set; } // LOTUS_MOVEMENT_HISTORY
        public System.Data.Entity.DbSet<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE
        public System.Data.Entity.DbSet<MessageDate> MessageDates { get; set; } // MessageDate
        public System.Data.Entity.DbSet<MessageStatusUh> MessageStatusUhs { get; set; } // MessageStatusUh
        public System.Data.Entity.DbSet<MessageStrahovieAndOtkaz> MessageStrahovieAndOtkazs { get; set; } // MessageStrahovieAndOtkaz
        public System.Data.Entity.DbSet<MessageVivod> MessageVivods { get; set; } // MessageVivod
        public System.Data.Entity.DbSet<NameDocument> NameDocuments { get; set; } // NameDocument
        public System.Data.Entity.DbSet<NdflInv> NdflInvs { get; set; } // NDFL_INV
        public System.Data.Entity.DbSet<Ndoctype> Ndoctypes { get; set; } // NDOCTYPE
        public System.Data.Entity.DbSet<Normdoc> Normdocs { get; set; } // NORMDOC
        public System.Data.Entity.DbSet<Operstat> Operstats { get; set; } // OPERSTAT
        public System.Data.Entity.DbSet<PostalDoc2Roll> PostalDoc2Roll { get; set; } // POSTAL_DOC2ROLL
        public System.Data.Entity.DbSet<PostalDoctype> PostalDoctypes { get; set; } // POSTAL_DOCTYPE
        public System.Data.Entity.DbSet<PostalDocument> PostalDocuments { get; set; } // POSTAL_DOCUMENT
        public System.Data.Entity.DbSet<PostalDocumentField> PostalDocumentFields { get; set; } // POSTAL_DOCUMENT_FIELD
        public System.Data.Entity.DbSet<PostalField> PostalFields { get; set; } // POSTAL_FIELD
        public System.Data.Entity.DbSet<PostalRoll> PostalRolls { get; set; } // POSTAL_ROLL
        public System.Data.Entity.DbSet<PostalRollType> PostalRollTypes { get; set; } // POSTAL_ROLL_TYPE
        public System.Data.Entity.DbSet<RbCourt> RbCourts { get; set; } // RB_COURT
        public System.Data.Entity.DbSet<RbCourtException> RbCourtExceptions { get; set; } // RB_COURT_EXCEPTIONS
        public System.Data.Entity.DbSet<RbCourtType> RbCourtTypes { get; set; } // RB_COURT_TYPE
        public System.Data.Entity.DbSet<RbDeclCode> RbDeclCodes { get; set; } // RB_DECL_CODES
        public System.Data.Entity.DbSet<RbHoliday> RbHolidays { get; set; } // RB_HOLIDAYS
        public System.Data.Entity.DbSet<RbReport> RbReports { get; set; } // RB_REPORT
        public System.Data.Entity.DbSet<RbZgClass> RbZgClasses { get; set; } // RB_ZG_CLASSES
        public System.Data.Entity.DbSet<RcRecord> RcRecords { get; set; } // RC_RECORDS
        public System.Data.Entity.DbSet<RecReason> RecReasons { get; set; } // REC_REASON
        public System.Data.Entity.DbSet<ReportFilter> ReportFilters { get; set; } // REPORT_FILTER
        public System.Data.Entity.DbSet<ReqType> ReqTypes { get; set; } // REQ_TYPE
        public System.Data.Entity.DbSet<Reshenie> Reshenies { get; set; } // Reshenie
        public System.Data.Entity.DbSet<RfBigDatum> RfBigDatums { get; set; } // RF_BIG_DATA
        public System.Data.Entity.DbSet<RiskChecker> RiskCheckers { get; set; } // RISK_CHECKER
        public System.Data.Entity.DbSet<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY
        public System.Data.Entity.DbSet<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212
        public System.Data.Entity.DbSet<RiskCycle> RiskCycles { get; set; } // RISK_CYCLE
        public System.Data.Entity.DbSet<RiskDossier> RiskDossiers { get; set; } // RISK_DOSSIER
        public System.Data.Entity.DbSet<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE
        public System.Data.Entity.DbSet<RiskFailureHistory> RiskFailureHistories { get; set; } // RISK_FAILURE_HISTORY
        public System.Data.Entity.DbSet<RiskField> RiskFields { get; set; } // RISK_FIELDS
        public System.Data.Entity.DbSet<RiskFn1048> RiskFn1048 { get; set; } // RISK_FN1048
        public System.Data.Entity.DbSet<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836
        public System.Data.Entity.DbSet<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844
        public System.Data.Entity.DbSet<RiskFn1903> RiskFn1903 { get; set; } // RISK_FN1903
        public System.Data.Entity.DbSet<RiskFn205> RiskFn205 { get; set; } // RISK_FN205
        public System.Data.Entity.DbSet<RiskFn206> RiskFn206 { get; set; } // RISK_FN206
        public System.Data.Entity.DbSet<RiskFn210> RiskFn210 { get; set; } // RISK_FN210
        public System.Data.Entity.DbSet<RiskFn211> RiskFn211 { get; set; } // RISK_FN211
        public System.Data.Entity.DbSet<RiskFn212> RiskFn212 { get; set; } // RISK_FN212
        public System.Data.Entity.DbSet<RiskFn236> RiskFn236 { get; set; } // RISK_FN236
        public System.Data.Entity.DbSet<RiskFn245> RiskFn245 { get; set; } // RISK_FN245
        public System.Data.Entity.DbSet<RiskFn71> RiskFn71 { get; set; } // RISK_FN71
        public System.Data.Entity.DbSet<RiskFn72> RiskFn72 { get; set; } // RISK_FN72
        public System.Data.Entity.DbSet<RiskFn74> RiskFn74 { get; set; } // RISK_FN74
        public System.Data.Entity.DbSet<RiskIncomeTaxation> RiskIncomeTaxations { get; set; } // RISK_INCOME_TAXATION
        public System.Data.Entity.DbSet<RiskLock> RiskLocks { get; set; } // RISK_LOCK
        public System.Data.Entity.DbSet<RiskMime> RiskMimes { get; set; } // RISK_MIME
        public System.Data.Entity.DbSet<RiskNdfl> RiskNdfls { get; set; } // RISK_NDFL
        public System.Data.Entity.DbSet<RiskNdfl2> RiskNdfl2 { get; set; } // RISK_NDFL2
        public System.Data.Entity.DbSet<RiskProxy> RiskProxies { get; set; } // RISK_PROXY
        public System.Data.Entity.DbSet<RiskVersion> RiskVersions { get; set; } // RISK_VERSION
        public System.Data.Entity.DbSet<RiskWeb> RiskWebs { get; set; } // RISK_WEB
        public System.Data.Entity.DbSet<RiskYear> RiskYears { get; set; } // RISK_YEAR
        public System.Data.Entity.DbSet<Room> Rooms { get; set; } // ROOM
        public System.Data.Entity.DbSet<Roomtype> Roomtypes { get; set; } // ROOMTYPE
        public System.Data.Entity.DbSet<ServerIfn> ServerIfns { get; set; } // ServerIfns
        public System.Data.Entity.DbSet<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand
        public System.Data.Entity.DbSet<ShedJob> ShedJobs { get; set; } // SHED_JOB
        public System.Data.Entity.DbSet<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA
        public System.Data.Entity.DbSet<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG
        public System.Data.Entity.DbSet<ShedReport> ShedReports { get; set; } // SHED_REPORT
        public System.Data.Entity.DbSet<Signature> Signatures { get; set; } // SIGNATURE
        public System.Data.Entity.DbSet<Signer> Signers { get; set; } // SIGNER
        public System.Data.Entity.DbSet<SmevCar> SmevCars { get; set; } // SMEV_CAR
        public System.Data.Entity.DbSet<SmevCred> SmevCreds { get; set; } // SMEV_CRED
        public System.Data.Entity.DbSet<SmevParam> SmevParams { get; set; } // SMEV_PARAM
        public System.Data.Entity.DbSet<SmevReq> SmevReqs { get; set; } // SMEV_REQ
        public System.Data.Entity.DbSet<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE
        public System.Data.Entity.DbSet<SobytieOtdel> SobytieOtdels { get; set; } // SobytieOtdel
        public System.Data.Entity.DbSet<Socrbase> Socrbases { get; set; } // SOCRBASE
        public System.Data.Entity.DbSet<StatusAnaliz> StatusAnalizs { get; set; } // StatusAnaliz
        public System.Data.Entity.DbSet<StatusPriem> StatusPriems { get; set; } // StatusPriem
        public System.Data.Entity.DbSet<StatusTrebOnIcass> StatusTrebOnIcasses { get; set; } // StatusTrebOnIcass
        public System.Data.Entity.DbSet<Stead> Steads { get; set; } // STEAD
        public System.Data.Entity.DbSet<Stone> Stones { get; set; } // Stone
        public System.Data.Entity.DbSet<Strstat> Strstats { get; set; } // STRSTAT
        public System.Data.Entity.DbSet<TableSysNumReshen> TableSysNumReshens { get; set; } // TableSysNumReshen
        public System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        public System.Data.Entity.DbSet<UseTableTemplateBdk> UseTableTemplateBdks { get; set; } // UseTableTemplateBdk
        public System.Data.Entity.DbSet<VidDelaException> VidDelaExceptions { get; set; } // VidDelaException
        public System.Data.Entity.DbSet<WhdDecl> WhdDecls { get; set; } // WHD_DECL
        public System.Data.Entity.DbSet<WhdFn212> WhdFn212 { get; set; } // WHD_FN212
        public System.Data.Entity.DbSet<WhdGauge> WhdGauges { get; set; } // WHD_GAUGE
        public System.Data.Entity.DbSet<WhdVnp> WhdVnps { get; set; } // WHD_VNP
        public System.Data.Entity.DbSet<WhfAccreq> WhfAccreqs { get; set; } // WHF_ACCREQ
        public System.Data.Entity.DbSet<WhfGap> WhfGaps { get; set; } // WHF_GAPS
        public System.Data.Entity.DbSet<WhfVat> WhfVats { get; set; } // WHF_VAT
        public System.Data.Entity.DbSet<WhtOperation> WhtOperations { get; set; } // WHT_OPERATIONS
        public System.Data.Entity.DbSet<WhtThreshold> WhtThresholds { get; set; } // WHT_THRESHOLDS
        public System.Data.Entity.DbSet<WordDocument> WordDocuments { get; set; } // WordDocument
        public System.Data.Entity.DbSet<Xlcolor> Xlcolors { get; set; } // XLCOLOR
        public System.Data.Entity.DbSet<XlReport> XlReports { get; set; } // XL_REPORT
        public System.Data.Entity.DbSet<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL
        public System.Data.Entity.DbSet<XmlParam> XmlParams { get; set; } // XML_PARAMS

        static RisksContext()
        {
            System.Data.Entity.Database.SetInitializer<RisksContext>(null);
        }

        public RisksContext()
            : base("Name=RiskSyte")
        {
        }

        public RisksContext(string connectionString)
            : base(connectionString)
        {
        }

        public RisksContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public RisksContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public RisksContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActstatConfiguration());
            modelBuilder.Configurations.Add(new AddrobjConfiguration());
            modelBuilder.Configurations.Add(new AhalisBdkConfiguration());
            modelBuilder.Configurations.Add(new AisHdConfiguration());
            modelBuilder.Configurations.Add(new AisProcessConfiguration());
            modelBuilder.Configurations.Add(new AisProcessLogConfiguration());
            modelBuilder.Configurations.Add(new AisRequestConfiguration());
            modelBuilder.Configurations.Add(new AisRuleConfiguration());
            modelBuilder.Configurations.Add(new AnalizNoConfiguration());
            modelBuilder.Configurations.Add(new AsActstatConfiguration());
            modelBuilder.Configurations.Add(new AsAddrobjConfiguration());
            modelBuilder.Configurations.Add(new AsCenterstConfiguration());
            modelBuilder.Configurations.Add(new AsCurentstConfiguration());
            modelBuilder.Configurations.Add(new AsDelAddrobjConfiguration());
            modelBuilder.Configurations.Add(new AsDelHouseConfiguration());
            modelBuilder.Configurations.Add(new AsDelHouseintConfiguration());
            modelBuilder.Configurations.Add(new AsDelLandmarkConfiguration());
            modelBuilder.Configurations.Add(new AsDelNormdocConfiguration());
            modelBuilder.Configurations.Add(new AsEststatConfiguration());
            modelBuilder.Configurations.Add(new AsFlattypeConfiguration());
            modelBuilder.Configurations.Add(new AsHouseConfiguration());
            modelBuilder.Configurations.Add(new AsHststatConfiguration());
            modelBuilder.Configurations.Add(new AsNdoctypeConfiguration());
            modelBuilder.Configurations.Add(new AsNormdocConfiguration());
            modelBuilder.Configurations.Add(new AsOperstatConfiguration());
            modelBuilder.Configurations.Add(new AsRoomConfiguration());
            modelBuilder.Configurations.Add(new AsRoomtypeConfiguration());
            modelBuilder.Configurations.Add(new AsSocrbaseConfiguration());
            modelBuilder.Configurations.Add(new AsSteadConfiguration());
            modelBuilder.Configurations.Add(new AsStrstatConfiguration());
            modelBuilder.Configurations.Add(new AsVersionConfiguration());
            modelBuilder.Configurations.Add(new BankAccExclusionConfiguration());
            modelBuilder.Configurations.Add(new BankAccPlanConfiguration());
            modelBuilder.Configurations.Add(new BankDocumentConfiguration());
            modelBuilder.Configurations.Add(new BankOperationConfiguration());
            modelBuilder.Configurations.Add(new BnkseekConfiguration());
            modelBuilder.Configurations.Add(new BodyConfiguration());
            modelBuilder.Configurations.Add(new CbrBankConfiguration());
            modelBuilder.Configurations.Add(new CbrBankRelevanceConfiguration());
            modelBuilder.Configurations.Add(new CenterstConfiguration());
            modelBuilder.Configurations.Add(new ChainRequestConfiguration());
            modelBuilder.Configurations.Add(new ChainRequestHistoryConfiguration());
            modelBuilder.Configurations.Add(new ChainToHandlerConfiguration());
            modelBuilder.Configurations.Add(new ClassOtdelConfiguration());
            modelBuilder.Configurations.Add(new ConfigCodeConfiguration());
            modelBuilder.Configurations.Add(new CurentstConfiguration());
            modelBuilder.Configurations.Add(new DbConfigConfiguration());
            modelBuilder.Configurations.Add(new DeclDatumConfiguration());
            modelBuilder.Configurations.Add(new DeclKndCodeConfiguration());
            modelBuilder.Configurations.Add(new DeclRowConfiguration());
            modelBuilder.Configurations.Add(new DelaPriemObuConfiguration());
            modelBuilder.Configurations.Add(new DeloConfiguration());
            modelBuilder.Configurations.Add(new DocTemplateConfiguration());
            modelBuilder.Configurations.Add(new DocumentDetalizationConfiguration());
            modelBuilder.Configurations.Add(new DocumentReglamentConfiguration());
            modelBuilder.Configurations.Add(new DplFileConfiguration());
            modelBuilder.Configurations.Add(new DplServerConfiguration());
            modelBuilder.Configurations.Add(new EststatConfiguration());
            modelBuilder.Configurations.Add(new FaceConfiguration());
            modelBuilder.Configurations.Add(new FiasLoadConfiguration());
            modelBuilder.Configurations.Add(new FiasLoadProgressConfiguration());
            modelBuilder.Configurations.Add(new FiasVersionConfiguration());
            modelBuilder.Configurations.Add(new FileIconConfiguration());
            modelBuilder.Configurations.Add(new FlattypeConfiguration());
            modelBuilder.Configurations.Add(new Fn1341Configuration());
            modelBuilder.Configurations.Add(new Fn1341TrustConfiguration());
            modelBuilder.Configurations.Add(new Fn18441Configuration());
            modelBuilder.Configurations.Add(new Fn1903Configuration());
            modelBuilder.Configurations.Add(new Fn3042Configuration());
            modelBuilder.Configurations.Add(new Fn502Configuration());
            modelBuilder.Configurations.Add(new Fn503Configuration());
            modelBuilder.Configurations.Add(new GroupOtdelConfiguration());
            modelBuilder.Configurations.Add(new HandlerChainConfiguration());
            modelBuilder.Configurations.Add(new HeaderConfiguration());
            modelBuilder.Configurations.Add(new HNameConfiguration());
            modelBuilder.Configurations.Add(new HouseConfiguration());
            modelBuilder.Configurations.Add(new HststatConfiguration());
            modelBuilder.Configurations.Add(new IncassConfiguration());
            modelBuilder.Configurations.Add(new IteratorReConfiguration());
            modelBuilder.Configurations.Add(new JobDataDtConfiguration());
            modelBuilder.Configurations.Add(new JobDataIntConfiguration());
            modelBuilder.Configurations.Add(new JobDataStrConfiguration());
            modelBuilder.Configurations.Add(new JobDataXmlConfiguration());
            modelBuilder.Configurations.Add(new JobDatumConfiguration());
            modelBuilder.Configurations.Add(new KaoCerhistoryConfiguration());
            modelBuilder.Configurations.Add(new KaoRanhistoryConfiguration());
            modelBuilder.Configurations.Add(new KaoRhistoryConfiguration());
            modelBuilder.Configurations.Add(new KaoRogueConfiguration());
            modelBuilder.Configurations.Add(new KaoRogueAboConfiguration());
            modelBuilder.Configurations.Add(new KaoRogueCertConfiguration());
            modelBuilder.Configurations.Add(new KbkAnalizConfiguration());
            modelBuilder.Configurations.Add(new LdCourtConfiguration());
            modelBuilder.Configurations.Add(new LockNgConfiguration());
            modelBuilder.Configurations.Add(new LotusDocConfiguration());
            modelBuilder.Configurations.Add(new LotusFileConfiguration());
            modelBuilder.Configurations.Add(new LotusMovementConfiguration());
            modelBuilder.Configurations.Add(new LotusMovementHistoryConfiguration());
            modelBuilder.Configurations.Add(new LotusSequenceConfiguration());
            modelBuilder.Configurations.Add(new MessageDateConfiguration());
            modelBuilder.Configurations.Add(new MessageStatusUhConfiguration());
            modelBuilder.Configurations.Add(new MessageStrahovieAndOtkazConfiguration());
            modelBuilder.Configurations.Add(new MessageVivodConfiguration());
            modelBuilder.Configurations.Add(new NameDocumentConfiguration());
            modelBuilder.Configurations.Add(new NdflInvConfiguration());
            modelBuilder.Configurations.Add(new NdoctypeConfiguration());
            modelBuilder.Configurations.Add(new NormdocConfiguration());
            modelBuilder.Configurations.Add(new OperstatConfiguration());
            modelBuilder.Configurations.Add(new PostalDoc2RollConfiguration());
            modelBuilder.Configurations.Add(new PostalDoctypeConfiguration());
            modelBuilder.Configurations.Add(new PostalDocumentConfiguration());
            modelBuilder.Configurations.Add(new PostalDocumentFieldConfiguration());
            modelBuilder.Configurations.Add(new PostalFieldConfiguration());
            modelBuilder.Configurations.Add(new PostalRollConfiguration());
            modelBuilder.Configurations.Add(new PostalRollTypeConfiguration());
            modelBuilder.Configurations.Add(new RbCourtConfiguration());
            modelBuilder.Configurations.Add(new RbCourtExceptionConfiguration());
            modelBuilder.Configurations.Add(new RbCourtTypeConfiguration());
            modelBuilder.Configurations.Add(new RbDeclCodeConfiguration());
            modelBuilder.Configurations.Add(new RbHolidayConfiguration());
            modelBuilder.Configurations.Add(new RbReportConfiguration());
            modelBuilder.Configurations.Add(new RbZgClassConfiguration());
            modelBuilder.Configurations.Add(new RcRecordConfiguration());
            modelBuilder.Configurations.Add(new RecReasonConfiguration());
            modelBuilder.Configurations.Add(new ReportFilterConfiguration());
            modelBuilder.Configurations.Add(new ReqTypeConfiguration());
            modelBuilder.Configurations.Add(new ReshenieConfiguration());
            modelBuilder.Configurations.Add(new RfBigDatumConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerHistoryConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerTo212Configuration());
            modelBuilder.Configurations.Add(new RiskCycleConfiguration());
            modelBuilder.Configurations.Add(new RiskDossierConfiguration());
            modelBuilder.Configurations.Add(new RiskFailureConfiguration());
            modelBuilder.Configurations.Add(new RiskFailureHistoryConfiguration());
            modelBuilder.Configurations.Add(new RiskFieldConfiguration());
            modelBuilder.Configurations.Add(new RiskFn1048Configuration());
            modelBuilder.Configurations.Add(new RiskFn1836Configuration());
            modelBuilder.Configurations.Add(new RiskFn1844Configuration());
            modelBuilder.Configurations.Add(new RiskFn1903Configuration());
            modelBuilder.Configurations.Add(new RiskFn205Configuration());
            modelBuilder.Configurations.Add(new RiskFn206Configuration());
            modelBuilder.Configurations.Add(new RiskFn210Configuration());
            modelBuilder.Configurations.Add(new RiskFn211Configuration());
            modelBuilder.Configurations.Add(new RiskFn212Configuration());
            modelBuilder.Configurations.Add(new RiskFn236Configuration());
            modelBuilder.Configurations.Add(new RiskFn245Configuration());
            modelBuilder.Configurations.Add(new RiskFn71Configuration());
            modelBuilder.Configurations.Add(new RiskFn72Configuration());
            modelBuilder.Configurations.Add(new RiskFn74Configuration());
            modelBuilder.Configurations.Add(new RiskIncomeTaxationConfiguration());
            modelBuilder.Configurations.Add(new RiskLockConfiguration());
            modelBuilder.Configurations.Add(new RiskMimeConfiguration());
            modelBuilder.Configurations.Add(new RiskNdflConfiguration());
            modelBuilder.Configurations.Add(new RiskNdfl2Configuration());
            modelBuilder.Configurations.Add(new RiskProxyConfiguration());
            modelBuilder.Configurations.Add(new RiskVersionConfiguration());
            modelBuilder.Configurations.Add(new RiskWebConfiguration());
            modelBuilder.Configurations.Add(new RiskYearConfiguration());
            modelBuilder.Configurations.Add(new RoomConfiguration());
            modelBuilder.Configurations.Add(new RoomtypeConfiguration());
            modelBuilder.Configurations.Add(new ServerIfnConfiguration());
            modelBuilder.Configurations.Add(new ServiceWcfCommandConfiguration());
            modelBuilder.Configurations.Add(new ShedJobConfiguration());
            modelBuilder.Configurations.Add(new ShedJobDatumConfiguration());
            modelBuilder.Configurations.Add(new ShedJobLogConfiguration());
            modelBuilder.Configurations.Add(new ShedReportConfiguration());
            modelBuilder.Configurations.Add(new SignatureConfiguration());
            modelBuilder.Configurations.Add(new SignerConfiguration());
            modelBuilder.Configurations.Add(new SmevCarConfiguration());
            modelBuilder.Configurations.Add(new SmevCredConfiguration());
            modelBuilder.Configurations.Add(new SmevParamConfiguration());
            modelBuilder.Configurations.Add(new SmevReqConfiguration());
            modelBuilder.Configurations.Add(new SmevResponseConfiguration());
            modelBuilder.Configurations.Add(new SobytieOtdelConfiguration());
            modelBuilder.Configurations.Add(new SocrbaseConfiguration());
            modelBuilder.Configurations.Add(new StatusAnalizConfiguration());
            modelBuilder.Configurations.Add(new StatusPriemConfiguration());
            modelBuilder.Configurations.Add(new StatusTrebOnIcassConfiguration());
            modelBuilder.Configurations.Add(new SteadConfiguration());
            modelBuilder.Configurations.Add(new StoneConfiguration());
            modelBuilder.Configurations.Add(new StrstatConfiguration());
            modelBuilder.Configurations.Add(new TableSysNumReshenConfiguration());
            modelBuilder.Configurations.Add(new TemplateConfiguration());
            modelBuilder.Configurations.Add(new UseTableTemplateBdkConfiguration());
            modelBuilder.Configurations.Add(new VidDelaExceptionConfiguration());
            modelBuilder.Configurations.Add(new WhdDeclConfiguration());
            modelBuilder.Configurations.Add(new WhdFn212Configuration());
            modelBuilder.Configurations.Add(new WhdGaugeConfiguration());
            modelBuilder.Configurations.Add(new WhdVnpConfiguration());
            modelBuilder.Configurations.Add(new WhfAccreqConfiguration());
            modelBuilder.Configurations.Add(new WhfGapConfiguration());
            modelBuilder.Configurations.Add(new WhfVatConfiguration());
            modelBuilder.Configurations.Add(new WhtOperationConfiguration());
            modelBuilder.Configurations.Add(new WhtThresholdConfiguration());
            modelBuilder.Configurations.Add(new WordDocumentConfiguration());
            modelBuilder.Configurations.Add(new XlcolorConfiguration());
            modelBuilder.Configurations.Add(new XlReportConfiguration());
            modelBuilder.Configurations.Add(new XlReportAclConfiguration());
            modelBuilder.Configurations.Add(new XmlParamConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActstatConfiguration(schema));
            modelBuilder.Configurations.Add(new AddrobjConfiguration(schema));
            modelBuilder.Configurations.Add(new AhalisBdkConfiguration(schema));
            modelBuilder.Configurations.Add(new AisHdConfiguration(schema));
            modelBuilder.Configurations.Add(new AisProcessConfiguration(schema));
            modelBuilder.Configurations.Add(new AisProcessLogConfiguration(schema));
            modelBuilder.Configurations.Add(new AisRequestConfiguration(schema));
            modelBuilder.Configurations.Add(new AisRuleConfiguration(schema));
            modelBuilder.Configurations.Add(new AnalizNoConfiguration(schema));
            modelBuilder.Configurations.Add(new AsActstatConfiguration(schema));
            modelBuilder.Configurations.Add(new AsAddrobjConfiguration(schema));
            modelBuilder.Configurations.Add(new AsCenterstConfiguration(schema));
            modelBuilder.Configurations.Add(new AsCurentstConfiguration(schema));
            modelBuilder.Configurations.Add(new AsDelAddrobjConfiguration(schema));
            modelBuilder.Configurations.Add(new AsDelHouseConfiguration(schema));
            modelBuilder.Configurations.Add(new AsDelHouseintConfiguration(schema));
            modelBuilder.Configurations.Add(new AsDelLandmarkConfiguration(schema));
            modelBuilder.Configurations.Add(new AsDelNormdocConfiguration(schema));
            modelBuilder.Configurations.Add(new AsEststatConfiguration(schema));
            modelBuilder.Configurations.Add(new AsFlattypeConfiguration(schema));
            modelBuilder.Configurations.Add(new AsHouseConfiguration(schema));
            modelBuilder.Configurations.Add(new AsHststatConfiguration(schema));
            modelBuilder.Configurations.Add(new AsNdoctypeConfiguration(schema));
            modelBuilder.Configurations.Add(new AsNormdocConfiguration(schema));
            modelBuilder.Configurations.Add(new AsOperstatConfiguration(schema));
            modelBuilder.Configurations.Add(new AsRoomConfiguration(schema));
            modelBuilder.Configurations.Add(new AsRoomtypeConfiguration(schema));
            modelBuilder.Configurations.Add(new AsSocrbaseConfiguration(schema));
            modelBuilder.Configurations.Add(new AsSteadConfiguration(schema));
            modelBuilder.Configurations.Add(new AsStrstatConfiguration(schema));
            modelBuilder.Configurations.Add(new AsVersionConfiguration(schema));
            modelBuilder.Configurations.Add(new BankAccExclusionConfiguration(schema));
            modelBuilder.Configurations.Add(new BankAccPlanConfiguration(schema));
            modelBuilder.Configurations.Add(new BankDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new BankOperationConfiguration(schema));
            modelBuilder.Configurations.Add(new BnkseekConfiguration(schema));
            modelBuilder.Configurations.Add(new BodyConfiguration(schema));
            modelBuilder.Configurations.Add(new CbrBankConfiguration(schema));
            modelBuilder.Configurations.Add(new CbrBankRelevanceConfiguration(schema));
            modelBuilder.Configurations.Add(new CenterstConfiguration(schema));
            modelBuilder.Configurations.Add(new ChainRequestConfiguration(schema));
            modelBuilder.Configurations.Add(new ChainRequestHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new ChainToHandlerConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new ConfigCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new CurentstConfiguration(schema));
            modelBuilder.Configurations.Add(new DbConfigConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclKndCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new DeclRowConfiguration(schema));
            modelBuilder.Configurations.Add(new DelaPriemObuConfiguration(schema));
            modelBuilder.Configurations.Add(new DeloConfiguration(schema));
            modelBuilder.Configurations.Add(new DocTemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentDetalizationConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentReglamentConfiguration(schema));
            modelBuilder.Configurations.Add(new DplFileConfiguration(schema));
            modelBuilder.Configurations.Add(new DplServerConfiguration(schema));
            modelBuilder.Configurations.Add(new EststatConfiguration(schema));
            modelBuilder.Configurations.Add(new FaceConfiguration(schema));
            modelBuilder.Configurations.Add(new FiasLoadConfiguration(schema));
            modelBuilder.Configurations.Add(new FiasLoadProgressConfiguration(schema));
            modelBuilder.Configurations.Add(new FiasVersionConfiguration(schema));
            modelBuilder.Configurations.Add(new FileIconConfiguration(schema));
            modelBuilder.Configurations.Add(new FlattypeConfiguration(schema));
            modelBuilder.Configurations.Add(new Fn1341Configuration(schema));
            modelBuilder.Configurations.Add(new Fn1341TrustConfiguration(schema));
            modelBuilder.Configurations.Add(new Fn18441Configuration(schema));
            modelBuilder.Configurations.Add(new Fn1903Configuration(schema));
            modelBuilder.Configurations.Add(new Fn3042Configuration(schema));
            modelBuilder.Configurations.Add(new Fn502Configuration(schema));
            modelBuilder.Configurations.Add(new Fn503Configuration(schema));
            modelBuilder.Configurations.Add(new GroupOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new HandlerChainConfiguration(schema));
            modelBuilder.Configurations.Add(new HeaderConfiguration(schema));
            modelBuilder.Configurations.Add(new HNameConfiguration(schema));
            modelBuilder.Configurations.Add(new HouseConfiguration(schema));
            modelBuilder.Configurations.Add(new HststatConfiguration(schema));
            modelBuilder.Configurations.Add(new IncassConfiguration(schema));
            modelBuilder.Configurations.Add(new IteratorReConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataDtConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataIntConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataStrConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataXmlConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoCerhistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoRanhistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoRhistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoRogueConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoRogueAboConfiguration(schema));
            modelBuilder.Configurations.Add(new KaoRogueCertConfiguration(schema));
            modelBuilder.Configurations.Add(new KbkAnalizConfiguration(schema));
            modelBuilder.Configurations.Add(new LdCourtConfiguration(schema));
            modelBuilder.Configurations.Add(new LockNgConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusDocConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusFileConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusMovementConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusMovementHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusSequenceConfiguration(schema));
            modelBuilder.Configurations.Add(new MessageDateConfiguration(schema));
            modelBuilder.Configurations.Add(new MessageStatusUhConfiguration(schema));
            modelBuilder.Configurations.Add(new MessageStrahovieAndOtkazConfiguration(schema));
            modelBuilder.Configurations.Add(new MessageVivodConfiguration(schema));
            modelBuilder.Configurations.Add(new NameDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new NdflInvConfiguration(schema));
            modelBuilder.Configurations.Add(new NdoctypeConfiguration(schema));
            modelBuilder.Configurations.Add(new NormdocConfiguration(schema));
            modelBuilder.Configurations.Add(new OperstatConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalDoc2RollConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalDoctypeConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalDocumentFieldConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalFieldConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalRollConfiguration(schema));
            modelBuilder.Configurations.Add(new PostalRollTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new RbCourtConfiguration(schema));
            modelBuilder.Configurations.Add(new RbCourtExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new RbCourtTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new RbDeclCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new RbHolidayConfiguration(schema));
            modelBuilder.Configurations.Add(new RbReportConfiguration(schema));
            modelBuilder.Configurations.Add(new RbZgClassConfiguration(schema));
            modelBuilder.Configurations.Add(new RcRecordConfiguration(schema));
            modelBuilder.Configurations.Add(new RecReasonConfiguration(schema));
            modelBuilder.Configurations.Add(new ReportFilterConfiguration(schema));
            modelBuilder.Configurations.Add(new ReqTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReshenieConfiguration(schema));
            modelBuilder.Configurations.Add(new RfBigDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerTo212Configuration(schema));
            modelBuilder.Configurations.Add(new RiskCycleConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskDossierConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFailureConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFailureHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFieldConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFn1048Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn1836Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn1844Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn1903Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn205Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn206Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn210Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn211Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn212Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn236Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn245Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn71Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn72Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn74Configuration(schema));
            modelBuilder.Configurations.Add(new RiskIncomeTaxationConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskLockConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskMimeConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskNdflConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskNdfl2Configuration(schema));
            modelBuilder.Configurations.Add(new RiskProxyConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskVersionConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskWebConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskYearConfiguration(schema));
            modelBuilder.Configurations.Add(new RoomConfiguration(schema));
            modelBuilder.Configurations.Add(new RoomtypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ServerIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiceWcfCommandConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobLogConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedReportConfiguration(schema));
            modelBuilder.Configurations.Add(new SignatureConfiguration(schema));
            modelBuilder.Configurations.Add(new SignerConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevCarConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevCredConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevParamConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevReqConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new SobytieOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new SocrbaseConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusAnalizConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusPriemConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusTrebOnIcassConfiguration(schema));
            modelBuilder.Configurations.Add(new SteadConfiguration(schema));
            modelBuilder.Configurations.Add(new StoneConfiguration(schema));
            modelBuilder.Configurations.Add(new StrstatConfiguration(schema));
            modelBuilder.Configurations.Add(new TableSysNumReshenConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new UseTableTemplateBdkConfiguration(schema));
            modelBuilder.Configurations.Add(new VidDelaExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new WhdDeclConfiguration(schema));
            modelBuilder.Configurations.Add(new WhdFn212Configuration(schema));
            modelBuilder.Configurations.Add(new WhdGaugeConfiguration(schema));
            modelBuilder.Configurations.Add(new WhdVnpConfiguration(schema));
            modelBuilder.Configurations.Add(new WhfAccreqConfiguration(schema));
            modelBuilder.Configurations.Add(new WhfGapConfiguration(schema));
            modelBuilder.Configurations.Add(new WhfVatConfiguration(schema));
            modelBuilder.Configurations.Add(new WhtOperationConfiguration(schema));
            modelBuilder.Configurations.Add(new WhtThresholdConfiguration(schema));
            modelBuilder.Configurations.Add(new WordDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new XlcolorConfiguration(schema));
            modelBuilder.Configurations.Add(new XlReportConfiguration(schema));
            modelBuilder.Configurations.Add(new XlReportAclConfiguration(schema));
            modelBuilder.Configurations.Add(new XmlParamConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class RisksContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<RisksContext>
    {
        public RisksContext Create()
        {
            return new RisksContext();
        }
    }

    #endregion

    #region POCO classes

    // ACTSTAT
    ///<summary>
    /// ACTSTAT (ActualStatus) – содержит перечень статусов
    /// актуальности записи адресного элемента по ФИАС
    /// Внутренняя таблица для загрузки, после переносится в таблицу ACTSTAT
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Actstat
    {

        ///<summary>
        /// Идентификатор статуса
        /// (ключ)
        ///</summary>
        public int Actstatid { get; set; } // ACTSTATID (Primary key)

        ///<summary>
        /// Наименование
        /// 0 – Не актуальный
        /// 1 – Актуальный (последняя
        /// запись по адресному
        /// объекту)
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child Addrobjs where [ADDROBJ].[ACTSTATID] point to this entity (FK_ADDROBJ_ACTSTAT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Addrobj> Addrobjs { get; set; } // ADDROBJ.FK_ADDROBJ_ACTSTAT

        public Actstat()
        {
            Addrobjs = new System.Collections.Generic.List<Addrobj>();
        }
    }

    // ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Addrobj
    {

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Aoid { get; set; } // AOID (Primary key)

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта
        ///</summary>
        public System.Guid Aoguid { get; set; } // AOGUID

        ///<summary>
        /// Формализованное наименование
        ///</summary>
        public string Formalname { get; set; } // FORMALNAME (length: 120)

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Код автономии
        ///</summary>
        public string Autocode { get; set; } // AUTOCODE (length: 1)

        ///<summary>
        /// Код района
        ///</summary>
        public string Areacode { get; set; } // AREACODE (length: 3)

        ///<summary>
        /// Код города
        ///</summary>
        public string Citycode { get; set; } // CITYCODE (length: 3)

        ///<summary>
        /// Код внутригородского района
        ///</summary>
        public string Ctarcode { get; set; } // CTARCODE (length: 3)

        ///<summary>
        /// Код населенного пункта
        ///</summary>
        public string Placecode { get; set; } // PLACECODE (length: 3)

        ///<summary>
        /// Код улицы
        ///</summary>
        public string Streetcode { get; set; } // STREETCODE (length: 4)

        ///<summary>
        /// Код дополнительного адресообразующего элемента
        ///</summary>
        public string Extrcode { get; set; } // EXTRCODE (length: 4)

        ///<summary>
        /// Код подчиненного дополнительного адресообразующего элемента
        ///</summary>
        public string Sextcode { get; set; } // SEXTCODE (length: 3)

        ///<summary>
        /// Официальное наименование
        ///</summary>
        public string Offname { get; set; } // OFFNAME (length: 120)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Краткое наименование типа объекта
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 10)

        ///<summary>
        /// Уровень адресного объекта
        ///</summary>
        public int Aolevel { get; set; } // AOLEVEL

        ///<summary>
        /// Идентификатор объекта родительского объекта
        ///</summary>
        public System.Guid? Parentguid { get; set; } // PARENTGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Код адресного объекта одной строкой с признаком актуальности из КЛАДР 4.0.
        ///</summary>
        public string Code { get; set; } // CODE (length: 17)

        ///<summary>
        /// Код адресного объекта из КЛАДР 4.0 одной строкой без признака актуальности (последних двух цифр)
        ///</summary>
        public string Plaincode { get; set; } // PLAINCODE (length: 15)

        ///<summary>
        /// Статус актуальности адресного объекта ФИАС. Актуальный адрес на текущую дату.
        ///</summary>
        public int Actstatid { get; set; } // ACTSTATID

        ///<summary>
        /// Статус центра
        ///</summary>
        public int Centerstid { get; set; } // CENTERSTID

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus)
        ///</summary>
        public int Operstatid { get; set; } // OPERSTATID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdocid { get; set; } // NORMDOCID

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public bool Livestatus { get; set; } // LIVESTATUS
        public string Plancode { get; set; } // PLANCODE (length: 4)
        public string Cadnum { get; set; } // CADNUM (length: 100)
        public int? Divtype { get; set; } // DIVTYPE

        // Foreign keys

        /// <summary>
        /// Parent Actstat pointed by [ADDROBJ].([Actstatid]) (FK_ADDROBJ_ACTSTAT)
        /// </summary>
        public virtual Actstat Actstat { get; set; } // FK_ADDROBJ_ACTSTAT

        /// <summary>
        /// Parent Centerst pointed by [ADDROBJ].([Centerstid]) (FK_ADDROBJ_centerst)
        /// </summary>
        public virtual Centerst Centerst { get; set; } // FK_ADDROBJ_centerst
    }

    // AhalisBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AhalisBdk
    {
        public int Idtable { get; set; } // Idtable (Primary key)
        public string DbName1 { get; set; } // DbName_1 (length: 128)
        public string VerConteiner1 { get; set; } // VerConteiner_1 (length: 11)
        public string Rus1 { get; set; } // RUS_1 (length: 128)
        public string N2791 { get; set; } // N279_1 (length: 4)
        public string D27021 { get; set; } // D2702_1 (length: 1024)
        public int? Viddela1 { get; set; } // Viddela_1
        public int? D3970 { get; set; } // D3970
        public byte? D09 { get; set; } // D09
        public System.DateTime? D41 { get; set; } // D41
        public string N2792 { get; set; } // N279_2 (length: 4)
        public int? N1 { get; set; } // N1
        public string N134 { get; set; } // N134 (length: 12)
        public string D3 { get; set; } // D3 (length: 9)
        public string N1002 { get; set; } // N1002 (length: 15)
        public string N18 { get; set; } // N18 (length: 128)
        public int? Idanalis { get; set; } // idanalis
        public string MessageError { get; set; } // MessageError
        public System.DateTime? DataError { get; set; } // DataError
        public int? Idok { get; set; } // idok
        public string MessageOk { get; set; } // MessageOk
        public System.DateTime? DataOk { get; set; } // DataOk
        public int? NumDelo { get; set; } // NumDelo

        // Foreign keys

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [AhalisBdk].([Idanalis]) (FK_AhalisBdk_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Idanalis { get; set; } // FK_AhalisBdk_StatusTrebOnIcass

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [AhalisBdk].([Idok]) (FK_AhalisBdk1_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Idok { get; set; } // FK_AhalisBdk1_StatusTrebOnIcass
    }

    // AIS_HD
    ///<summary>
    /// Результат обработки строки пользовательского задания
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisHd
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН процесса
        ///</summary>
        public int ProcessId { get; set; } // PROCESS_ID

        ///<summary>
        /// Ключевое значение для поиска записи
        ///</summary>
        public string Kv { get; set; } // KV (length: 50)

        ///<summary>
        /// Результат обработки
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Расширенные данные
        ///</summary>
        public string Data { get; set; } // DATA
        public int? ReqTypeId { get; set; } // REQ_TYPE_ID

        // Reverse navigation

        /// <summary>
        /// Child DeclDatums where [DECL_DATA].[AIS_HDID] point to this entity (FK_DECL_DATA_AIS_HD)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DeclDatum> DeclDatums { get; set; } // DECL_DATA.FK_DECL_DATA_AIS_HD

        // Foreign keys

        /// <summary>
        /// Parent AisProcess pointed by [AIS_HD].([ProcessId]) (FK_AIS_HD_AIS_PROCESS_LOG)
        /// </summary>
        public virtual AisProcess AisProcess { get; set; } // FK_AIS_HD_AIS_PROCESS_LOG

        /// <summary>
        /// Parent ReqType pointed by [AIS_HD].([ReqTypeId]) (FK_AIS_HD_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_AIS_HD_REQ_TYPE

        public AisHd()
        {
            DeclDatums = new System.Collections.Generic.List<DeclDatum>();
        }
    }

    // AIS_PROCESS
    ///<summary>
    /// Процессы АИС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisProcess
    {

        ///<summary>
        /// УН процесса
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// GUID процесса из АИС
        ///</summary>
        public string Process { get; set; } // PROCESS (length: 64)

        // Reverse navigation

        /// <summary>
        /// Child AisHds where [AIS_HD].[PROCESS_ID] point to this entity (FK_AIS_HD_AIS_PROCESS_LOG)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AisHd> AisHds { get; set; } // AIS_HD.FK_AIS_HD_AIS_PROCESS_LOG
        /// <summary>
        /// Child AisProcessLogs where [AIS_PROCESS_LOG].[PROCESS_ID] point to this entity (FK_AIS_PROCESS_LOG_AIS_PROCESS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AisProcessLog> AisProcessLogs { get; set; } // AIS_PROCESS_LOG.FK_AIS_PROCESS_LOG_AIS_PROCESS

        public AisProcess()
        {
            AisHds = new System.Collections.Generic.List<AisHd>();
            AisProcessLogs = new System.Collections.Generic.List<AisProcessLog>();
        }
    }

    // AIS_PROCESS_LOG
    ///<summary>
    /// Журнал обработки пользовательских процессов АИС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisProcessLog
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН процесса АИС
        ///</summary>
        public int ProcessId { get; set; } // PROCESS_ID

        ///<summary>
        /// УН обработчика
        ///</summary>
        public int HandlerId { get; set; } // HANDLER_ID

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат обработки
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Errmsg { get; set; } // ERRMSG (length: 1024)
        public System.DateTime? D86 { get; set; } // D86

        // Foreign keys

        /// <summary>
        /// Parent AisProcess pointed by [AIS_PROCESS_LOG].([ProcessId]) (FK_AIS_PROCESS_LOG_AIS_PROCESS)
        /// </summary>
        public virtual AisProcess AisProcess { get; set; } // FK_AIS_PROCESS_LOG_AIS_PROCESS

        /// <summary>
        /// Parent ReqType pointed by [AIS_PROCESS_LOG].([HandlerId]) (FK_AIS_PROCESS_LOG_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_AIS_PROCESS_LOG_REQ_TYPE

        public AisProcessLog()
        {
            D85 = System.DateTime.Now;
        }
    }

    // AIS_REQUEST
    ///<summary>
    /// Данные для парсинга из АИС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisRequest
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название ветки, из которой составляем запрос
        ///</summary>
        public string Title { get; set; } // TITLE (length: 900)
    }

    // AIS_RULES
    ///<summary>
    /// Правила разбора данных АИС-3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisRule
    {

        ///<summary>
        /// Тип запроса АИС
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID (Primary key)

        ///<summary>
        /// XML-данные запроса
        ///</summary>
        public string ReqRule { get; set; } // REQ_RULE

        ///<summary>
        /// Порядок сортировки
        ///</summary>
        public int Ord { get; set; } // ORD
        public string Branch { get; set; } // BRANCH (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [AIS_RULES].([ReqTypeId]) (FK_HND_RULES_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_HND_RULES_REQ_TYPE

        public AisRule()
        {
            Ord = 10000;
        }
    }

    // The table 'AnalizDuble' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // AnalizDuble
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AnalizDuble
    {
        public int? O1 { get; set; } // O1
        public int? O2 { get; set; } // O2
        public string N134 { get; set; } // n134 (length: 12)
        public int? D3971 { get; set; } // D3971
        public byte? D09 { get; set; } // D09
        public int? N13 { get; set; } // N1_3
        public int? N12 { get; set; } // N1_2
        public int? N11 { get; set; } // N1_1
        public System.DateTime? D40 { get; set; } // D40
        public string N279 { get; set; } // N279 (length: 4)
        public string D05 { get; set; } // D05 (length: 300)
        public short? D428 { get; set; } // D428
        public short? N269 { get; set; } // N269
        public System.DateTime? D85 { get; set; } // D85
        public string N2792 { get; set; } // N279_2 (length: 4)
        public int? D39712 { get; set; } // D3971_2
        public int? D270 { get; set; } // D270
        public string S06 { get; set; } // S06 (length: 35)
        public string D4127 { get; set; } // D4127 (length: 35)
        public int? D2702 { get; set; } // D270_2
        public int? D39711 { get; set; } // D3971_1
        public string D3 { get; set; } // D3 (length: 9)
        public int? D1810 { get; set; } // D1810
        public System.DateTime? D41 { get; set; } // D41
        public string S875 { get; set; } // S875 (length: 300)
        public int? D3970 { get; set; } // D3970
    }

    // AnalizNO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AnalizNo
    {
        public int Id { get; set; } // Id (Primary key)
        public int D3979 { get; set; } // D3979
        public int D3972 { get; set; } // D3972
        public byte Color { get; set; } // Color
        public byte? DateAnaliz { get; set; } // DateAnaliz
        public byte? StrahovieAndOtkazAnaliz { get; set; } // StrahovieAndOtkazAnaliz
        public byte? StatusUhAnaliz { get; set; } // StatusUhAnaliz
        public byte? Vivod { get; set; } // Vivod
        public int? D6 { get; set; } // D6
        public int D15602 { get; set; } // D1560_2
        public int? D15601 { get; set; } // D1560_1
        public System.DateTime DatePeredachi { get; set; } // DatePeredachi
        public System.DateTime DateZakritia { get; set; } // DateZakritia
        public string N134 { get; set; } // N134 (length: 12)
        public string D3 { get; set; } // D3 (length: 9)
        public string Kbk { get; set; } // Kbk (length: 20)
        public string OktmoOld { get; set; } // OKTMO_old (length: 8)
        public string D093 { get; set; } // D09_3 (length: 10)
        public int? N11 { get; set; } // N1_1
        public string N279 { get; set; } // N279 (length: 4)
        public string OktmoNew { get; set; } // OKTMO_new (length: 8)
        public System.DateTime? DateCreate { get; set; } // DateCreate
        public string Error { get; set; } // Error (length: 1024)
        public System.DateTime? DateError { get; set; } // DateError

        // Foreign keys

        /// <summary>
        /// Parent Delo pointed by [AnalizNO].([D3979]) (FK_AnalizNO_Delo)
        /// </summary>
        public virtual Delo Delo { get; set; } // FK_AnalizNO_Delo

        /// <summary>
        /// Parent MessageDate pointed by [AnalizNO].([DateAnaliz]) (FK_AnalizNO_MessageDate)
        /// </summary>
        public virtual MessageDate MessageDate { get; set; } // FK_AnalizNO_MessageDate

        /// <summary>
        /// Parent MessageStatusUh pointed by [AnalizNO].([StatusUhAnaliz]) (FK_AnalizNO_MessageStatusUh)
        /// </summary>
        public virtual MessageStatusUh MessageStatusUh { get; set; } // FK_AnalizNO_MessageStatusUh

        /// <summary>
        /// Parent MessageStrahovieAndOtkaz pointed by [AnalizNO].([StrahovieAndOtkazAnaliz]) (FK_AnalizNO_MessageStrahovieAndOtkaz)
        /// </summary>
        public virtual MessageStrahovieAndOtkaz MessageStrahovieAndOtkaz { get; set; } // FK_AnalizNO_MessageStrahovieAndOtkaz

        /// <summary>
        /// Parent MessageVivod pointed by [AnalizNO].([Vivod]) (FK_AnalizNO_MessageVivod)
        /// </summary>
        public virtual MessageVivod MessageVivod { get; set; } // FK_AnalizNO_MessageVivod

        public AnalizNo()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // AS_ACTSTAT
    ///<summary>
    /// ACTSTAT (ActualStatus) – содержит перечень статусов
    /// актуальности записи адресного элемента по ФИАС
    /// Внутренняя таблица для загрузки, после переносится в таблицу ACTSTAT
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsActstat
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор статуса
        /// (ключ)
        ///</summary>
        public int Actstatid { get; set; } // ACTSTATID

        ///<summary>
        /// Наименование
        /// 0 – Не актуальный
        /// 1 – Актуальный (последняя
        /// запись по адресному
        /// объекту)
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // AS_ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsAddrobj
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Aoid { get; set; } // AOID

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта
        ///</summary>
        public System.Guid Aoguid { get; set; } // AOGUID

        ///<summary>
        /// Формализованное наименование
        ///</summary>
        public string Formalname { get; set; } // FORMALNAME (length: 120)

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Код автономии
        ///</summary>
        public string Autocode { get; set; } // AUTOCODE (length: 1)

        ///<summary>
        /// Код района
        ///</summary>
        public string Areacode { get; set; } // AREACODE (length: 3)

        ///<summary>
        /// Код города
        ///</summary>
        public string Citycode { get; set; } // CITYCODE (length: 3)

        ///<summary>
        /// Код внутригородского района
        ///</summary>
        public string Ctarcode { get; set; } // CTARCODE (length: 3)

        ///<summary>
        /// Код населенного пункта
        ///</summary>
        public string Placecode { get; set; } // PLACECODE (length: 3)

        ///<summary>
        /// Код улицы
        ///</summary>
        public string Streetcode { get; set; } // STREETCODE (length: 4)

        ///<summary>
        /// Код дополнительного адресообразующего элемента
        ///</summary>
        public string Extrcode { get; set; } // EXTRCODE (length: 4)

        ///<summary>
        /// Код подчиненного дополнительного адресообразующего элемента
        ///</summary>
        public string Sextcode { get; set; } // SEXTCODE (length: 3)

        ///<summary>
        /// Официальное наименование
        ///</summary>
        public string Offname { get; set; } // OFFNAME (length: 120)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Краткое наименование типа объекта
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 10)

        ///<summary>
        /// Уровень адресного объекта
        ///</summary>
        public int Aolevel { get; set; } // AOLEVEL

        ///<summary>
        /// Идентификатор объекта родительского объекта
        ///</summary>
        public System.Guid? Parentguid { get; set; } // PARENTGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Код адресного объекта одной строкой с признаком актуальности из КЛАДР 4.0.
        ///</summary>
        public string Code { get; set; } // CODE (length: 17)

        ///<summary>
        /// Код адресного объекта из КЛАДР 4.0 одной строкой без признака актуальности (последних двух цифр)
        ///</summary>
        public string Plaincode { get; set; } // PLAINCODE (length: 15)

        ///<summary>
        /// Статус актуальности адресного объекта ФИАС. Актуальный адрес на текущую дату.
        ///</summary>
        public int Actstatid { get; set; } // ACTSTATID

        ///<summary>
        /// Статус центра
        ///</summary>
        public int Centerstid { get; set; } // CENTERSTID

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus)
        ///</summary>
        public int Operstatid { get; set; } // OPERSTATID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdocid { get; set; } // NORMDOCID

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public bool Livestatus { get; set; } // LIVESTATUS
        public string Plancode { get; set; } // PLANCODE (length: 4)
        public string Cadnum { get; set; } // CADNUM (length: 100)
        public int? Divtype { get; set; } // DIVTYPE
    }

    // AS_CENTERST
    ///<summary>
    /// Для загрузки переченя возможных
    /// статусов (центров) адресных объектов административных единиц.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsCenterst
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор статуса
        ///</summary>
        public int Centerstid { get; set; } // CENTERSTID

        ///<summary>
        /// Наименование статуса
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // AS_CURENTST
    ///<summary>
    /// Таблица AS_CURENTST (CurrentStatus) – содержит перечень статусов
    /// актуальности записи адресного элемента по классификатору КЛАДР4.0.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsCurentst
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор статуса
        /// (ключ)
        ///</summary>
        public int Curentstid { get; set; } // CURENTSTID

        ///<summary>
        /// Наименование (0 -
        /// актуальный, 1-50, 2-98 –
        /// исторический (кроме 51),
        /// 51 - переподчиненный, 99 -
        /// несуществующий)
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // AS_DEL_ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelAddrobj
    {
        public System.Guid Aoid { get; set; } // AOID (Primary key)
    }

    // AS_DEL_HOUSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelHouse
    {
        public System.Guid Houseid { get; set; } // HOUSEID (Primary key)
    }

    // AS_DEL_HOUSEINT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelHouseint
    {
        public System.Guid Houseintid { get; set; } // HOUSEINTID (Primary key)
    }

    // AS_DEL_LANDMARK
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelLandmark
    {
        public System.Guid Landid { get; set; } // LANDID (Primary key)
    }

    // AS_DEL_NORMDOC
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelNormdoc
    {
        public System.Guid Normdocid { get; set; } // NORMDOCID (Primary key)
    }

    // AS_ESTSTAT
    ///<summary>
    /// Таблица AS_ESTSTAT (EstateStatus) – содержит перечень возможных
    /// видов владений.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsEststat
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Признак владения
        ///</summary>
        public int Eststatid { get; set; } // ESTSTATID

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // AS_FLATTYPE
    ///<summary>
    /// Типы помещений в БД ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsFlattype
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН типа помещения
        ///</summary>
        public int Fltypeid { get; set; } // FLTYPEID

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // AS_HOUSE
    ///<summary>
    /// Сведения по номерам домов улиц городов и населенных пунктов, номера земельных участков и т.п
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsHouse
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Уникальный идентификатор записи дома
        ///</summary>
        public System.Guid Houseid { get; set; } // HOUSEID

        ///<summary>
        /// Глобальный уникальный идентификатор дома
        ///</summary>
        public System.Guid Houseguid { get; set; } // HOUSEGUID

        ///<summary>
        /// Guid записи родительского объекта (улицы, города, населенного пункта и т.п.
        ///</summary>
        public System.Guid Aoguid { get; set; } // AOGUID

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата время внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Номер дома
        ///</summary>
        public string Housenum { get; set; } // HOUSENUM (length: 20)

        ///<summary>
        /// Признак владения
        ///</summary>
        public int Eststatid { get; set; } // ESTSTATID

        ///<summary>
        /// Номер корпуса
        ///</summary>
        public string Buildnum { get; set; } // BUILDNUM (length: 10)

        ///<summary>
        /// Номер строения
        ///</summary>
        public string Strucnum { get; set; } // STRUCNUM (length: 64)

        ///<summary>
        /// Признак строения
        ///</summary>
        public int? Strstatid { get; set; } // STRSTATID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Состояние дома
        ///</summary>
        public int Housestid { get; set; } // HOUSESTID

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdocid { get; set; } // NORMDOCID

        ///<summary>
        /// Счетчик записей домов для КЛАДР 4
        ///</summary>
        public int Counter { get; set; } // COUNTER

        ///<summary>
        /// Кадастровый номер
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Тип адресации:
        /// 0 - не определено
        /// 1 - муниципальный;
        /// 2 - административно-территориальный
        ///</summary>
        public int? Divtype { get; set; } // DIVTYPE

        public AsHouse()
        {
            Divtype = 0;
        }
    }

    // AS_HSTSTAT
    ///<summary>
    /// Статус состояния домов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsHststat
    {

        ///<summary>
        /// Идентификатор статуса
        ///</summary>
        public int Housestid { get; set; } // HOUSESTID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 60)
    }

    // AS_NDOCTYPE
    ///<summary>
    /// Тип нормативного документа
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsNdoctype
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор записи (ключ)
        ///</summary>
        public int Ndtypeid { get; set; } // NDTYPEID

        ///<summary>
        /// Наименование типа нормативного документа
        ///</summary>
        public string Name { get; set; } // NAME (length: 250)
    }

    // AS_NORMDOC
    ///<summary>
    /// Сведения по нормативному документу, являющемуся основанием присвоения адресному элементу наименования
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsNormdoc
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор нормативного документа
        ///</summary>
        public System.Guid Normdocid { get; set; } // NORMDOCID

        ///<summary>
        /// Наименование документа
        ///</summary>
        public string Docname { get; set; } // DOCNAME (length: 2147483647)

        ///<summary>
        /// Дата документа
        ///</summary>
        public System.DateTime? Docdate { get; set; } // DOCDATE

        ///<summary>
        /// Номер документа
        ///</summary>
        public string Docnum { get; set; } // DOCNUM (length: 256)

        ///<summary>
        /// Тип документа
        ///</summary>
        public int? Ndtypeid { get; set; } // NDTYPEID

        ///<summary>
        /// Идентификатор образа (внешний ключ)
        ///</summary>
        public System.Guid? Docimgid { get; set; } // DOCIMGID
    }

    // AS_OPERSTAT
    ///<summary>
    /// Статус действия
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsOperstat
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Идентификатор статуса (ключ)
        ///</summary>
        public int Operstatid { get; set; } // OPERSTATID

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // AS_ROOM
    ///<summary>
    /// Сведения о помещениях
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsRoom
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Roomid { get; set; } // ROOMID

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта (помещения)
        ///</summary>
        public System.Guid Roomguid { get; set; } // ROOMGUID

        ///<summary>
        /// Номер помещения или офиса
        ///</summary>
        public string Flatnumber { get; set; } // FLATNUMBER (length: 50)

        ///<summary>
        /// Тип помещения
        ///</summary>
        public int Flattype { get; set; } // FLATTYPE

        ///<summary>
        /// Номер комнаты
        ///</summary>
        public string Roomnumber { get; set; } // ROOMNUMBER (length: 50)

        ///<summary>
        /// Тип комнаты
        ///</summary>
        public int? Roomtype { get; set; } // ROOMTYPE

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Идентификатор родительского объекта (дома)
        ///</summary>
        public System.Guid Houseguid { get; set; } // HOUSEGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public int Livestatus { get; set; } // LIVESTATUS

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdoc { get; set; } // NORMDOC

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus):
        /// 01 – Инициация;
        /// 10 – Добавление;
        /// 20 – Изменение;
        /// 21 – Групповое изменение;
        /// 30 – Удаление;
        /// 31 - Удаление вследствие удаления вышестоящего объекта;
        /// 40 – Присоединение адресного объекта (слияние);
        /// 41 – Переподчинение вследствие слияния вышестоящего объекта;
        /// 42 - Прекращение существования вследствие присоединения к другому адресному объекту;
        /// 43 - Создание нового адресного объекта в результате слияния адресных объектов;
        /// 50 – Переподчинение;
        /// 51 – Переподчинение вследствие переподчинения вышестоящего объекта;
        /// 60 – Прекращение существования вследствие дробления;
        /// 61 – Создание нового адресного объекта в результате дробления
        ///</summary>
        public int Operstatus { get; set; } // OPERSTATUS

        ///<summary>
        /// Кадастровый номер помещения
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Кадастровый номер комнаты в помещении
        ///</summary>
        public string Roomcadnum { get; set; } // ROOMCADNUM (length: 100)
    }

    // AS_ROOMTYPE
    ///<summary>
    /// Информация по типам комнат в БД ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsRoomtype
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН типа комнаты
        ///</summary>
        public int Rmtypeid { get; set; } // RMTYPEID

        ///<summary>
        /// Наименование типа комнаты
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование типа комнаты
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // AS_SOCRBASE
    ///<summary>
    /// Тип адресного объекта
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsSocrbase
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Ключевое поле
        ///</summary>
        public string KodTSt { get; set; } // KOD_T_ST (length: 4)

        ///<summary>
        /// Уровень адресного объекта
        ///</summary>
        public int SocrbaseLevel { get; set; } // SOCRBASE_LEVEL

        ///<summary>
        /// Краткое наименование типа объекта
        ///</summary>
        public string Scname { get; set; } // SCNAME (length: 10)

        ///<summary>
        /// Полное наименование типа объекта
        ///</summary>
        public string Socrname { get; set; } // SOCRNAME (length: 50)
    }

    // AS_STEAD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsStead
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Steadid { get; set; } // STEADID

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта (земельного участка)
        ///</summary>
        public System.Guid Steadguid { get; set; } // STEADGUID

        ///<summary>
        /// Номер земельного участка
        ///</summary>
        public string Number { get; set; } // NUMBER (length: 1024)

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Идентификатор объекта родительского объекта
        ///</summary>
        public System.Guid? Parentguid { get; set; } // PARENTGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus):
        /// 01 – Инициация;
        /// 10 – Добавление;
        /// 20 – Изменение;
        /// 21 – Групповое изменение;
        /// 30 – Удаление;
        /// 31 - Удаление вследствие удаления вышестоящего объекта;
        /// 40 – Присоединение адресного объекта (слияние);
        /// 41 – Переподчинение вследствие слияния вышестоящего объекта;
        /// 42 - Прекращение существования вследствие присоединения к другому адресному объекту;
        /// 43 - Создание нового адресного объекта в результате слияния адресных объектов;
        /// 50 – Переподчинение;
        /// 51 – Переподчинение вследствие переподчинения вышестоящего объекта;
        /// 60 – Прекращение существования вследствие дробления;
        /// 61 – Создание нового адресного объекта в результате дробления
        ///</summary>
        public int Operstatus { get; set; } // OPERSTATUS

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdoc { get; set; } // NORMDOC

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public int Livestatus { get; set; } // LIVESTATUS

        ///<summary>
        /// Кадастровый номер
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Тип адресации:
        /// 0 - не определено
        /// 1 - муниципальный;
        /// 2 - административно-территориальный
        ///</summary>
        public int Divtype { get; set; } // DIVTYPE
    }

    // AS_STRSTAT
    ///<summary>
    /// Признак строения
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsStrstat
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Признак строения
        ///</summary>
        public int Strstatid { get; set; } // STRSTATID

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // AS_VERSION
    ///<summary>
    /// Версия справочника ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsVersion
    {
        public int AcVersionId { get; set; } // AC_VERSION_ID (Primary key)
        public System.DateTime AcDt { get; set; } // AC_DT
    }

    // BANK_ACC_EXCLUSION
    ///<summary>
    /// Причина исключения счета из ППА анализа (депозиты и т.д)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccExclusion
    {

        ///<summary>
        /// УН причины
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Описание причины исключения счета из анализа
        ///</summary>
        public string Title { get; set; } // TITLE (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child BankAccPlans where [BANK_ACC_PLAN].[BANK_ACC_EXCLUSION_ID] point to this entity (FK_BANK_ACC_PLAN_BANK_ACC_PLAN)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN.FK_BANK_ACC_PLAN_BANK_ACC_PLAN

        public BankAccExclusion()
        {
            BankAccPlans = new System.Collections.Generic.List<BankAccPlan>();
        }
    }

    // BANK_ACC_PLAN
    ///<summary>
    /// План счетов банка. С ссылками на особенности анализа счета
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccPlan
    {

        ///<summary>
        /// Номер счета
        ///</summary>
        public string N89 { get; set; } // N89 (Primary key) (length: 5)

        ///<summary>
        /// Описание
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1024)

        ///<summary>
        /// УН причины особенностей обработки
        ///</summary>
        public int? BankAccExclusionId { get; set; } // BANK_ACC_EXCLUSION_ID

        // Foreign keys

        /// <summary>
        /// Parent BankAccExclusion pointed by [BANK_ACC_PLAN].([BankAccExclusionId]) (FK_BANK_ACC_PLAN_BANK_ACC_PLAN)
        /// </summary>
        public virtual BankAccExclusion BankAccExclusion { get; set; } // FK_BANK_ACC_PLAN_BANK_ACC_PLAN
    }

    // BANK_DOCUMENT
    ///<summary>
    /// Перечень условных обозначений (шифров) документов,
    /// проводимых по счетам в кредитных организациях
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankDocument
    {

        ///<summary>
        /// Условные цифровые обозначения документов
        ///</summary>
        public string D4232 { get; set; } // D4232 (Primary key) (length: 2)

        ///<summary>
        /// Наименование документов, по которым отражены операции
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)
    }

    // BANK_OPERATIONS
    ///<summary>
    /// Суммарные обороты по банку по годам
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankOperation
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН контрагента для анализа
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Год совершения операции
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// Расход
        ///</summary>
        public decimal D832 { get; set; } // D83_2

        ///<summary>
        /// Приход
        ///</summary>
        public decimal D833 { get; set; } // D83_3

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [BANK_OPERATIONS].([RiskCheckerId]) (FK_BANK_OPERATIONS_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_BANK_OPERATIONS_RISK_CHECKER
    }

    // BNKSEEK
    ///<summary>
    /// БИК РФ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Bnkseek
    {

        ///<summary>
        /// Внутренний код
        ///</summary>
        public string Vkey { get; set; } // VKEY (Primary key) (length: 8)

        ///<summary>
        /// Код контроля
        ///</summary>
        public string Real { get; set; } // REAL (length: 4)

        ///<summary>
        /// Тип участника расчетов
        ///</summary>
        public string Pzn { get; set; } // PZN (length: 2)

        ///<summary>
        /// Участник, пользователь системы электронных расчетов
        ///</summary>
        public short? Uer { get; set; } // UER

        ///<summary>
        /// Код территории по СОАТО
        ///</summary>
        public string Rgn { get; set; } // RGN (length: 2)

        ///<summary>
        /// Индекс
        ///</summary>
        public string Ind { get; set; } // IND (length: 6)

        ///<summary>
        /// Тип населенного пункта
        ///</summary>
        public short? Tnp { get; set; } // TNP

        ///<summary>
        /// Наименование населенного пункта
        ///</summary>
        public string Nnp { get; set; } // NNP (length: 25)

        ///<summary>
        /// Адрес в населенном пункте
        ///</summary>
        public string Adr { get; set; } // ADR (length: 30)

        ///<summary>
        /// Номер РКЦ
        ///</summary>
        public string Rkc { get; set; } // RKC (length: 9)

        ///<summary>
        /// Платежное наименование участника расчетов
        ///</summary>
        public string Namep { get; set; } // NAMEP (length: 45)

        ///<summary>
        /// Краткое наименование участника расчетов
        ///</summary>
        public string Namen { get; set; } // NAMEN (length: 30)

        ///<summary>
        /// Банковский идентификационный код (БИК)
        ///</summary>
        public string Newnum { get; set; } // NEWNUM (length: 9)

        ///<summary>
        /// Корсчет в системе расчетов с использованием БИК
        ///</summary>
        public string Newks { get; set; } // NEWKS (length: 9)

        ///<summary>
        /// 6-значный номер МФО
        ///</summary>
        public int? Permfo { get; set; } // PERMFO

        ///<summary>
        /// Cрок прохождения расчетно-денежных документов
        ///</summary>
        public string Srok { get; set; } // SROK (length: 2)

        ///<summary>
        /// Абонентский телеграф 1
        ///</summary>
        public string At1 { get; set; } // AT1 (length: 7)

        ///<summary>
        /// Абонентский телеграф 2
        ///</summary>
        public string At2 { get; set; } // AT2 (length: 7)

        ///<summary>
        /// Телефон
        ///</summary>
        public string Telef { get; set; } // TELEF (length: 25)

        ///<summary>
        /// Регистрационный номер участника расчетов
        ///</summary>
        public string Regn { get; set; } // REGN (length: 9)

        ///<summary>
        /// Код ОКПО
        ///</summary>
        public string Okpo { get; set; } // OKPO (length: 10)

        ///<summary>
        /// Дата последнего изменения
        ///</summary>
        public System.DateTime? DtIzm { get; set; } // DT_IZM
        public string P { get; set; } // P (length: 1)

        ///<summary>
        /// N установки центра коммутации сообщений
        ///</summary>
        public string Cks { get; set; } // CKS (length: 6)

        ///<summary>
        /// Новый корсчет по новому плану счетов
        ///</summary>
        public string Ksnp { get; set; } // KSNP (length: 20)

        ///<summary>
        /// Внутренний код правопреемника
        ///</summary>
        public string Vkeydel { get; set; } // VKEYDEL (length: 8)
        public System.DateTime? Datedel { get; set; } // DATEDEL
        public string RClose { get; set; } // R_CLOSE (length: 2)

        ///<summary>
        /// Дата включения информации от участника расчетов в ЭБД
        ///</summary>
        public System.DateTime? DateCh { get; set; } // DATE_CH

        ///<summary>
        /// Дата нач.действ
        ///</summary>
        public System.DateTime? DtIzmr { get; set; } // DT_IZMR
    }

    // Body
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Body
    {
        public int IdBody { get; set; } // IdBody (Primary key)
        public string BodyGl1 { get; set; } // BodyGl1
        public string BodyGl2 { get; set; } // BodyGl2
        public string BodyGl3 { get; set; } // BodyGl3
        public string BodyGl4 { get; set; } // BodyGl4
        public string BodyGl5 { get; set; } // BodyGl5
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdBody] point to this entity (FK_Template_Body)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Body

        public Body()
        {
            DateCreate = System.DateTime.Now;
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // CBR_BANKS
    ///<summary>
    /// Справочник соответствия регистрационных номеров банка по КГРКО внутренним кодам кредитных организаций
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBank
    {

        ///<summary>
        /// Регистрационный номер банка по КГРКО
        ///</summary>
        public int D38076 { get; set; } // D3807_6 (Primary key)

        ///<summary>
        /// Внутренний код банка ЦБ РФ
        ///</summary>
        public decimal InternalCode { get; set; } // INTERNAL_CODE
    }

    // CBR_BANK_RELEVANCE
    ///<summary>
    /// Дата актуальности справочника ЦБ РФ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankRelevance
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Класс, запрашивающий сведения
        ///</summary>
        public string Cls { get; set; } // CLS (length: 50)

        ///<summary>
        /// Дата запроса на web-сервис ЦБ РФ
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Дата актуальности справочника по данным ЦБ РФ.
        ///</summary>
        public System.DateTime D851 { get; set; } // D85_1
    }

    // CENTERST
    ///<summary>
    /// Таблица CENTERST (CenterStatus) – содержит перечень возможных
    /// статусов (центров) адресных объектов административных единиц.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Centerst
    {

        ///<summary>
        /// Идентификатор статуса
        ///</summary>
        public int Centerstid { get; set; } // CENTERSTID (Primary key)

        ///<summary>
        /// Наименование статуса
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child Addrobjs where [ADDROBJ].[CENTERSTID] point to this entity (FK_ADDROBJ_centerst)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Addrobj> Addrobjs { get; set; } // ADDROBJ.FK_ADDROBJ_centerst

        public Centerst()
        {
            Addrobjs = new System.Collections.Generic.List<Addrobj>();
        }
    }

    // CHAIN_REQUEST
    ///<summary>
    /// Запрос на обработку организации по шаблону
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainRequest
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН шаблона обработки
        ///</summary>
        public int HandlerChainId { get; set; } // HANDLER_CHAIN_ID

        ///<summary>
        /// Дата внесения записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// 1 - находится в активной обработке, 0 - историческая запись
        ///</summary>
        public int Active { get; set; } // ACTIVE

        // Foreign keys

        /// <summary>
        /// Parent HandlerChain pointed by [CHAIN_REQUEST].([HandlerChainId]) (FK_RISK_PATH_REQUEST_RISK_PATH)
        /// </summary>
        public virtual HandlerChain HandlerChain { get; set; } // FK_RISK_PATH_REQUEST_RISK_PATH

        /// <summary>
        /// Parent RiskChecker pointed by [CHAIN_REQUEST].([RiskCheckerId]) (FK_RISK_PATH_REQUEST_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_PATH_REQUEST_RISK_CHECKER

        public ChainRequest()
        {
            D85 = System.DateTime.Now;
            Active = 1;
        }
    }

    // CHAIN_REQUEST_HISTORY
    ///<summary>
    /// История измения запросов на обработку организации по шаблону
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainRequestHistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН шаблона обработки
        ///</summary>
        public int HandlerChainId { get; set; } // HANDLER_CHAIN_ID

        ///<summary>
        /// Дата внесения записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// 1 - находится в активной обработке, 0 - историческая запись
        ///</summary>
        public int Active { get; set; } // ACTIVE

        ///<summary>
        /// Пользователь, изменивший запись
        ///</summary>
        public string Sname { get; set; } // SNAME (length: 128)

        // Foreign keys

        /// <summary>
        /// Parent HandlerChain pointed by [CHAIN_REQUEST_HISTORY].([HandlerChainId]) (FK_RISK_PATH_REQUEST_HISTORY_RISK_PATH)
        /// </summary>
        public virtual HandlerChain HandlerChain { get; set; } // FK_RISK_PATH_REQUEST_HISTORY_RISK_PATH

        /// <summary>
        /// Parent RiskChecker pointed by [CHAIN_REQUEST_HISTORY].([RiskCheckerId]) (FK_RISK_PATH_REQUEST_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_PATH_REQUEST_HISTORY_RISK_CHECKER

        public ChainRequestHistory()
        {
            D85 = System.DateTime.Now;
            Sname = "suser_sname()";
        }
    }

    // CHAIN_TO_HANDLER
    ///<summary>
    /// Связь обработчиков с путем обработки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainToHandler
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН пути обработки
        ///</summary>
        public int HandlerChainId { get; set; } // HANDLER_CHAIN_ID

        ///<summary>
        /// УН запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Порядок обработки
        ///</summary>
        public int Ord { get; set; } // ORD

        // Foreign keys

        /// <summary>
        /// Parent HandlerChain pointed by [CHAIN_TO_HANDLER].([HandlerChainId]) (FK_PATH_TO_HANDLER_RISK_PATH)
        /// </summary>
        public virtual HandlerChain HandlerChain { get; set; } // FK_PATH_TO_HANDLER_RISK_PATH

        /// <summary>
        /// Parent ReqType pointed by [CHAIN_TO_HANDLER].([ReqTypeId]) (FK_PATH_TO_HANDLER_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_PATH_TO_HANDLER_REQ_TYPE
    }

    // ClassOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassOtdel
    {
        public int IdClass { get; set; } // IdClass (Primary key)
        public string ClassLanguage { get; set; } // ClassLanguage (length: 128)
        public string ClassDescription { get; set; } // ClassDescription
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdClass] point to this entity (FK_ServiceWcfCommand_ClassOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_ClassOtdel

        public ClassOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // CONFIG_CODE
    ///<summary>
    /// Конфигурация системы (пути к каталогам для вывода и т.д.)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConfigCode
    {

        ///<summary>
        /// УН кода конфигурации
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название кода
        ///</summary>
        public string Title { get; set; } // TITLE (length: 50)

        ///<summary>
        /// Описание кода
        ///</summary>
        public string Description { get; set; } // DESCRIPTION (length: 512)

        ///<summary>
        /// Скрыть из интерфейса
        ///</summary>
        public bool Hide { get; set; } // HIDE

        ///<summary>
        /// Значение параметра
        ///</summary>
        public string Value { get; set; } // VALUE (length: 512)

        public ConfigCode()
        {
            Hide = false;
        }
    }

    // CURENTST
    ///<summary>
    /// Таблица CURENTST (CurrentStatus) – содержит перечень статусов
    /// актуальности записи адресного элемента по классификатору КЛАДР4.0.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Curentst
    {

        ///<summary>
        /// Идентификатор статуса
        /// (ключ)
        ///</summary>
        public int Curentstid { get; set; } // CURENTSTID (Primary key)

        ///<summary>
        /// Наименование (0 -
        /// актуальный, 1-50, 2-98 –
        /// исторический (кроме 51),
        /// 51 - переподчиненный, 99 -
        /// несуществующий)
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // DB_CONFIG
    ///<summary>
    /// Конфигурация способа соединения с базой Taxes (тестовый
    /// или рабочий набор баз)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DbConfig
    {

        ///<summary>
        /// УН конфигурации
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код конфигурации
        ///</summary>
        public string Code { get; set; } // CODE (length: 15)

        ///<summary>
        /// Описание конфигурации
        ///</summary>
        public string Title { get; set; } // TITLE (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn71 where [RISK_FN71].[DB_CONFIG_ID] point to this entity (FK_RISK_FN71_DB_CONFIG)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn71> RiskFn71 { get; set; } // RISK_FN71.FK_RISK_FN71_DB_CONFIG

        public DbConfig()
        {
            RiskFn71 = new System.Collections.Generic.List<RiskFn71>();
        }
    }

    // DECL_DATA
    ///<summary>
    /// Данные деклараций
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclDatum
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН строки с декларацией (загрузка из АИС)
        ///</summary>
        public int AisHdid { get; set; } // AIS_HDID

        ///<summary>
        /// Сведения о строке (код параметра, описание и т.д.)
        ///</summary>
        public int DeclRowid { get; set; } // DECL_ROWID

        ///<summary>
        /// Номер строки в декларации
        ///</summary>
        public int Rno { get; set; } // RNO

        ///<summary>
        /// 0 - по данным плательщика
        /// 1 - по данным инспектора
        ///</summary>
        public int Dkind { get; set; } // DKIND

        ///<summary>
        /// Значение
        ///</summary>
        public string Value { get; set; } // VALUE (length: 2048)

        // Foreign keys

        /// <summary>
        /// Parent AisHd pointed by [DECL_DATA].([AisHdid]) (FK_DECL_DATA_AIS_HD)
        /// </summary>
        public virtual AisHd AisHd { get; set; } // FK_DECL_DATA_AIS_HD

        /// <summary>
        /// Parent DeclRow pointed by [DECL_DATA].([DeclRowid]) (FK_DECL_DATA_DECL_ROW)
        /// </summary>
        public virtual DeclRow DeclRow { get; set; } // FK_DECL_DATA_DECL_ROW
    }

    // DECL_KND_CODE
    ///<summary>
    /// Вид налоговой декларации указанием кода КНД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclKndCode
    {

        ///<summary>
        /// УН вида декларации
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код КНД
        ///</summary>
        public string Knd { get; set; } // KND (length: 32)

        ///<summary>
        /// Название
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1024)

        // Reverse navigation

        /// <summary>
        /// Child DeclRows where [DECL_ROW].[KND_CODE_ID] point to this entity (FK_DECL_ROW_DECL_KND_CODE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DeclRow> DeclRows { get; set; } // DECL_ROW.FK_DECL_ROW_DECL_KND_CODE

        public DeclKndCode()
        {
            DeclRows = new System.Collections.Generic.List<DeclRow>();
        }
    }

    // DECL_ROW
    ///<summary>
    /// Описание строк налоговой декларации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclRow
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН кода КНД
        ///</summary>
        public int KndCodeId { get; set; } // KND_CODE_ID

        ///<summary>
        /// Код строки
        ///</summary>
        public string Code { get; set; } // CODE (length: 64)

        ///<summary>
        /// Название строки
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child DeclDatums where [DECL_DATA].[DECL_ROWID] point to this entity (FK_DECL_DATA_DECL_ROW)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DeclDatum> DeclDatums { get; set; } // DECL_DATA.FK_DECL_DATA_DECL_ROW

        // Foreign keys

        /// <summary>
        /// Parent DeclKndCode pointed by [DECL_ROW].([KndCodeId]) (FK_DECL_ROW_DECL_KND_CODE)
        /// </summary>
        public virtual DeclKndCode DeclKndCode { get; set; } // FK_DECL_ROW_DECL_KND_CODE

        public DeclRow()
        {
            DeclDatums = new System.Collections.Generic.List<DeclDatum>();
        }
    }

    // DelaPriemObu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DelaPriemObu
    {
        public int Id { get; set; } // Id (Primary key)
        public string IdDeloObu { get; set; } // IdDeloObu (length: 255)
        public int? IdMessages { get; set; } // IdMessages

        public DelaPriemObu()
        {
            IdMessages = 1;
        }
    }

    // Delo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Delo
    {
        public int Id { get; set; } // Id
        public int D3979 { get; set; } // D3979 (Primary key)
        public byte? Status1Priem { get; set; } // Status1Priem
        public byte? Status1Analiz { get; set; } // Status1Analiz
        public System.DateTime? D85 { get; set; } // D85

        // Reverse navigation

        /// <summary>
        /// Child AnalizNoes where [AnalizNO].[D3979] point to this entity (FK_AnalizNO_Delo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AnalizNo> AnalizNoes { get; set; } // AnalizNO.FK_AnalizNO_Delo

        // Foreign keys

        /// <summary>
        /// Parent StatusAnaliz pointed by [Delo].([Status1Analiz]) (FK_Delo_StatusAnaliz)
        /// </summary>
        public virtual StatusAnaliz StatusAnaliz { get; set; } // FK_Delo_StatusAnaliz

        /// <summary>
        /// Parent StatusPriem pointed by [Delo].([Status1Priem]) (FK_Delo_StatusPriem)
        /// </summary>
        public virtual StatusPriem StatusPriem { get; set; } // FK_Delo_StatusPriem

        public Delo()
        {
            D85 = System.DateTime.Now;
            AnalizNoes = new System.Collections.Generic.List<AnalizNo>();
        }
    }

    // DocTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocTemplate
    {
        public int Id { get; set; } // Id (Primary key)
        public string Mesage { get; set; } // Mesage (length: 255)
        public byte[] Templ { get; set; } // Templ (length: 2147483647)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // DocumentDetalization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentDetalization
    {
        public int Id { get; set; } // Id
        public int N4411 { get; set; } // N441__1 (Primary key)
        public int? IdProcedure { get; set; } // IdProcedure
        public int? N3331 { get; set; } // N333__1
        public int? IdUser { get; set; } // IdUser
        public byte? IdGroup { get; set; } // IdGroup
        public byte? IdDocument { get; set; } // IdDocument
        public string N77 { get; set; } // N77 (length: 128)
        public string Coment { get; set; } // Coment (length: 128)
        public System.DateTime? N4414 { get; set; } // N441__4

        // Foreign keys

        /// <summary>
        /// Parent DocumentReglament pointed by [DocumentDetalization].([N4411]) (FK_DocumentDetalization_DocumentReglament)
        /// </summary>
        public virtual DocumentReglament DocumentReglament { get; set; } // FK_DocumentDetalization_DocumentReglament
    }

    // DocumentReglament
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentReglament
    {
        public int Id { get; set; } // Id
        public int N4411 { get; set; } // N441__1 (Primary key)
        public int? Status1 { get; set; } // Status1
        public string MesErSt1 { get; set; } // MesErSt1 (length: 255)
        public System.DateTime? DSt1 { get; set; } // DSt1
        public int? Status2 { get; set; } // Status2
        public string MesErSt2 { get; set; } // MesErSt2 (length: 255)
        public System.DateTime? DSt2 { get; set; } // DSt2
        public System.DateTime? D85 { get; set; } // D85

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) DocumentReglament pointed by [DocumentDetalization].[N441__1] (FK_DocumentDetalization_DocumentReglament)
        /// </summary>
        public virtual DocumentDetalization DocumentDetalization { get; set; } // DocumentDetalization.FK_DocumentDetalization_DocumentReglament

        // Foreign keys

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [DocumentReglament].([Status1]) (FK_DocumentReglament_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Status1 { get; set; } // FK_DocumentReglament_StatusTrebOnIcass

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [DocumentReglament].([Status2]) (FK_DocumentReglament_StatusTrebOnIcass_2)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Status2 { get; set; } // FK_DocumentReglament_StatusTrebOnIcass_2
    }

    // DPL_FILES
    ///<summary>
    /// Поиск дубликатов - файлы для поиска дубликатов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DplFile
    {

        ///<summary>
        /// УН файла
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН сервера
        ///</summary>
        public int ServerId { get; set; } // SERVER_ID

        ///<summary>
        /// Путь к файлу
        ///</summary>
        public string FilePath { get; set; } // FILE_PATH (length: 850)

        ///<summary>
        /// Размер файла
        ///</summary>
        public long FileSize { get; set; } // FILE_SIZE

        ///<summary>
        /// Creation time - дата создания файла
        ///</summary>
        public System.DateTime Ct { get; set; } // CT

        ///<summary>
        /// Last write time - дата последней записи в файл
        ///</summary>
        public System.DateTime Lwt { get; set; } // LWT

        ///<summary>
        /// Crc-32 сумма
        ///</summary>
        public int? Crc { get; set; } // CRC

        ///<summary>
        /// md5 хэш
        ///</summary>
        public System.Guid? Md5 { get; set; } // MD5

        // Foreign keys

        /// <summary>
        /// Parent DplServer pointed by [DPL_FILES].([ServerId]) (FK_DPL_FILES_DPL_SERVERS)
        /// </summary>
        public virtual DplServer DplServer { get; set; } // FK_DPL_FILES_DPL_SERVERS
    }

    // DPL_SERVERS
    ///<summary>
    /// Поиск файлов-дубликатов. Серверы.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DplServer
    {

        ///<summary>
        /// УН сервера
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название сервера
        ///</summary>
        public string Name { get; set; } // NAME (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child DplFiles where [DPL_FILES].[SERVER_ID] point to this entity (FK_DPL_FILES_DPL_SERVERS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DplFile> DplFiles { get; set; } // DPL_FILES.FK_DPL_FILES_DPL_SERVERS

        public DplServer()
        {
            DplFiles = new System.Collections.Generic.List<DplFile>();
        }
    }

    // ESTSTAT
    ///<summary>
    /// Таблица ESTSTAT (EstateStatus) – содержит перечень возможных
    /// видов владений.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Eststat
    {

        ///<summary>
        /// Признак владения
        ///</summary>
        public int Eststatid { get; set; } // ESTSTATID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // Face
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Face
    {
        public int Id { get; set; } // Id (Primary key)
        public int? N1Old { get; set; } // N1old
        public int? N1New { get; set; } // N1new
        public string Messagee { get; set; } // Messagee
        public System.DateTime? DateFace { get; set; } // DateFace
    }

    // FIAS_LOAD
    ///<summary>
    /// Устанавливает порядок загрузки таблиц при обработке справочника ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasLoad
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int AcLoadId { get; set; } // AC_LOAD_ID (Primary key)

        ///<summary>
        /// Название таблицы
        ///</summary>
        public string TableTitle { get; set; } // TABLE_TITLE (length: 100)

        ///<summary>
        /// Очередность загрузки
        ///</summary>
        public int TableOrder { get; set; } // TABLE_ORDER
        public int MergeType { get; set; } // MERGE_TYPE
    }

    // FIAS_LOAD_PROGRESS
    ///<summary>
    /// Прогресс загрузки таблиц для предотвращения повторной загрузки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasLoadProgress
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Номер версии
        ///</summary>
        public long Versionid { get; set; } // VERSIONID

        ///<summary>
        /// УН таблицы
        ///</summary>
        public int Tableid { get; set; } // TABLEID
    }

    // FIAS_VERSION
    ///<summary>
    /// Версия справочника
    /// Формат DDMMYYYY = дата справочника.
    /// Версия, указанная в этой таблице, не совпадает с версией ФИАС!
    /// Формируется по дате файла.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasVersion
    {

        ///<summary>
        /// УН версии в нашей базе
        ///</summary>
        public int FiasVersionId { get; set; } // FIAS_VERSION_ID (Primary key)

        ///<summary>
        /// Дата версии (DDMMYYYY)
        ///</summary>
        public long FiasVersionNum { get; set; } // FIAS_VERSION_NUM

        ///<summary>
        /// Дата загрузки справочника
        ///</summary>
        public System.DateTime? D85 { get; set; } // D85
    }

    // FILE_ICON
    ///<summary>
    /// Иконки файлов (графический образ). Кэш для импорта в лотус
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FileIcon
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Расширение, которому соответствует иконка
        ///</summary>
        public string Extension { get; set; } // EXTENSION (length: 50)

        ///<summary>
        /// Изображение
        ///</summary>
        public byte[] Img { get; set; } // IMG (length: 2147483647)
    }

    // FLATTYPE
    ///<summary>
    /// Типы помещений в БД ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Flattype
    {

        ///<summary>
        /// УН типа помещения
        ///</summary>
        public int Fltypeid { get; set; } // FLTYPEID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // fn1341
    ///<summary>
    /// ОКВЭД, виды экономической деятельности
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341
    {

        ///<summary>
        /// УН ОКВЭД
        ///</summary>
        public int D3480 { get; set; } // D3480 (Primary key)

        ///<summary>
        /// Код ОКВЭД
        ///</summary>
        public string D3481 { get; set; } // D3481 (length: 20)

        ///<summary>
        /// Наименование ОКВЭД
        ///</summary>
        public string D3482 { get; set; } // D3482 (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn206 where [RISK_FN206].[D3480] point to this entity (FK_RISK_FN206_fn1341)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn206> RiskFn206 { get; set; } // RISK_FN206.FK_RISK_FN206_fn1341

        public Fn1341()
        {
            RiskFn206 = new System.Collections.Generic.List<RiskFn206>();
        }
    }

    // FN1341_TRUST
    ///<summary>
    /// Перечень &quot;доверенных&quot; кодов ОК ВЭД. Отменяет ППА организаций с кодами ВЭД, начинающихся на перечисленные в D3481 этой таблицы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341Trust
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Fn1341TrustId { get; set; } // FN1341_TRUST_ID (Primary key)

        ///<summary>
        /// Доверенный код ВЭД
        ///</summary>
        public string D3481 { get; set; } // D3481 (length: 20)

        ///<summary>
        /// Сообщение, выводимое вместо установочных данных на эту организацию
        ///</summary>
        public string Reason { get; set; } // REASON (length: 100)
    }

    // FN18441
    ///<summary>
    /// Причины прекращения деятельности
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn18441
    {

        ///<summary>
        /// УН причины прекращения деятельности
        ///</summary>
        public int N18441 { get; set; } // N18441 (Primary key)

        ///<summary>
        /// Наименование причины прекращения деятельности
        ///</summary>
        public string N18442 { get; set; } // N18442 (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn1844 where [RISK_FN1844].[N18441] point to this entity (FK_RISK_FN1844_FN184411)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844.FK_RISK_FN1844_FN184411

        public Fn18441()
        {
            RiskFn1844 = new System.Collections.Generic.List<RiskFn1844>();
        }
    }

    // FN1903
    ///<summary>
    /// Сведения о правоспособности (статусе) ЮЛ - (СЮЛСТ)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1903
    {

        ///<summary>
        /// УН записи о правоспособности (статусе) ЮЛ
        ///</summary>
        public int S2123 { get; set; } // S2123 (Primary key)

        ///<summary>
        /// Полное наименование
        ///</summary>
        public string S2126 { get; set; } // S2126 (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn210 where [RISK_FN210].[S2123] point to this entity (FK_RISK_FN210_FN1903)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn210> RiskFn210 { get; set; } // RISK_FN210.FK_RISK_FN210_FN1903

        public Fn1903()
        {
            RiskFn210 = new System.Collections.Generic.List<RiskFn210>();
        }
    }

    // FN3042
    ///<summary>
    /// Справочник категорий ФЛ-представителей ЮЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn3042
    {

        ///<summary>
        /// УН записи о категориях ФЛ
        ///</summary>
        public int N1525 { get; set; } // N1525 (Primary key)

        ///<summary>
        /// Код категорий ФЛ
        ///</summary>
        public string N1526 { get; set; } // N1526 (length: 2)

        ///<summary>
        /// Наименование категории
        ///</summary>
        public string N1527 { get; set; } // N1527 (length: 100)

        ///<summary>
        /// Дата начала
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// Дата окончания
        ///</summary>
        public System.DateTime? D41 { get; set; } // D41

        ///<summary>
        /// Признак автоматической синхронизации
        ///</summary>
        public byte? Synch { get; set; } // Synch

        ///<summary>
        /// федеральный код
        ///</summary>
        public int? SystemId { get; set; } // system_id

        ///<summary>
        /// примечание
        ///</summary>
        public string Prim { get; set; } // Prim (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1525] point to this entity (FK_RISK_FN245_FN3042)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245 { get; set; } // RISK_FN245.FK_RISK_FN245_FN3042

        public Fn3042()
        {
            RiskFn245 = new System.Collections.Generic.List<RiskFn245>();
        }
    }

    // FN50_2
    ///<summary>
    /// Банки - участники обмена в рамках Положения БР №365-П
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn502
    {

        ///<summary>
        /// Идентификатор банка
        ///</summary>
        public decimal Id { get; set; } // ID (Primary key)

        ///<summary>
        /// РегНомер банка
        ///</summary>
        public string RegN { get; set; } // RegN (length: 4)

        ///<summary>
        /// Номер филиала
        ///</summary>
        public string NumF { get; set; } // NumF (length: 4)

        ///<summary>
        /// БИК
        ///</summary>
        public string Bik { get; set; } // BIK (length: 9)

        ///<summary>
        /// Наименование банка/филиала
        ///</summary>
        public string Name { get; set; } // Name (length: 160)

        ///<summary>
        /// Дата заключения соглашения
        ///</summary>
        public System.DateTime? AgrDateBegin { get; set; } // AgrDateBegin

        ///<summary>
        /// Дата изменения условий соглашения
        ///</summary>
        public System.DateTime? AgrDateChange { get; set; } // AgrDateChange

        ///<summary>
        /// Дата расторжения соглашения
        ///</summary>
        public System.DateTime? AgrDateEnd { get; set; } // AgrDateEnd

        ///<summary>
        /// Дата начала обмена
        ///</summary>
        public System.DateTime? DateBegin { get; set; } // DateBegin

        ///<summary>
        /// Дата временного приостановления обмена
        ///</summary>
        public System.DateTime? DatePause { get; set; } // DatePause

        ///<summary>
        /// Дата возобновления обмена
        ///</summary>
        public System.DateTime? DateRenewal { get; set; } // DateRenewal

        ///<summary>
        /// Дата прекращения обмена
        ///</summary>
        public System.DateTime? DateEnd { get; set; } // DateEnd

        ///<summary>
        /// Код условий соглашения (RPZ)
        ///</summary>
        public string Rpz { get; set; } // RPZ (length: 3)

        ///<summary>
        /// Состояние обмена: 0 - не ведется, 1 - ведется, 2 - в ограниченном режиме
        ///</summary>
        public byte Code { get; set; } // Code

        ///<summary>
        /// Состояние банка: 0 - ликвид, 1 - действ
        ///</summary>
        public bool BLiq { get; set; } // BLiq

        ///<summary>
        /// ИНН банка
        ///</summary>
        public string Inn { get; set; } // INN (length: 10)

        ///<summary>
        /// КПП банка (филиала банка)
        ///</summary>
        public string Kpp { get; set; } // KPP (length: 9)

        ///<summary>
        /// Дата дополнительного соглашения к договору
        ///</summary>
        public System.DateTime? DateDop { get; set; } // DateDop

        ///<summary>
        /// Дата начала функционирования банка в ограниченном режиме
        ///</summary>
        public System.DateTime? DateOgrRe { get; set; } // DateOgrRe

        // Reverse navigation

        /// <summary>
        /// Child Fn503 where [FN50_3].[ID] point to this entity (FK__FN50_3__ID__7854C86E)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Fn503> Fn503 { get; set; } // FN50_3.FK__FN50_3__ID__7854C86E

        public Fn502()
        {
            Code = 0;
            BLiq = false;
            Fn503 = new System.Collections.Generic.List<Fn503>();
        }
    }

    // FN50_3
    ///<summary>
    /// Филиалы банков - участники обмена в рамках Положения БР №365-П
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn503
    {

        ///<summary>
        /// УН записи о филиале банка
        ///</summary>
        public int Un { get; set; } // UN (Primary key)

        ///<summary>
        /// Номер филиала
        ///</summary>
        public string NumF { get; set; } // NumF (length: 4)

        ///<summary>
        /// БИК филиала
        ///</summary>
        public string Bik { get; set; } // BIK (length: 9)

        ///<summary>
        /// Наименование филиала
        ///</summary>
        public string Name { get; set; } // Name (length: 160)

        ///<summary>
        /// Идентификатор банка
        ///</summary>
        public decimal Id { get; set; } // ID

        // Foreign keys

        /// <summary>
        /// Parent Fn502 pointed by [FN50_3].([Id]) (FK__FN50_3__ID__7854C86E)
        /// </summary>
        public virtual Fn502 Fn502 { get; set; } // FK__FN50_3__ID__7854C86E
    }

    // GroupOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupOtdel
    {
        public int IdGroup { get; set; } // IdGroup (Primary key)
        public string GroupDescription { get; set; } // GroupDescription
        public string NameGroup { get; set; } // NameGroup (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdGroup] point to this entity (FK_ServiceWcfCommand_GroupOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_GroupOtdel

        public GroupOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // HANDLER_CHAIN
    ///<summary>
    /// Способ обработки записи в Risks - вызов обработчика
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HandlerChain
    {

        ///<summary>
        /// УН способа обработки
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название способа обработки
        ///</summary>
        public string Title { get; set; } // TITLE (length: 256)
        public string Code { get; set; } // CODE (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child ChainRequests where [CHAIN_REQUEST].[HANDLER_CHAIN_ID] point to this entity (FK_RISK_PATH_REQUEST_RISK_PATH)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainRequest> ChainRequests { get; set; } // CHAIN_REQUEST.FK_RISK_PATH_REQUEST_RISK_PATH
        /// <summary>
        /// Child ChainRequestHistories where [CHAIN_REQUEST_HISTORY].[HANDLER_CHAIN_ID] point to this entity (FK_RISK_PATH_REQUEST_HISTORY_RISK_PATH)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainRequestHistory> ChainRequestHistories { get; set; } // CHAIN_REQUEST_HISTORY.FK_RISK_PATH_REQUEST_HISTORY_RISK_PATH
        /// <summary>
        /// Child ChainToHandlers where [CHAIN_TO_HANDLER].[HANDLER_CHAIN_ID] point to this entity (FK_PATH_TO_HANDLER_RISK_PATH)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainToHandler> ChainToHandlers { get; set; } // CHAIN_TO_HANDLER.FK_PATH_TO_HANDLER_RISK_PATH

        public HandlerChain()
        {
            ChainRequests = new System.Collections.Generic.List<ChainRequest>();
            ChainRequestHistories = new System.Collections.Generic.List<ChainRequestHistory>();
            ChainToHandlers = new System.Collections.Generic.List<ChainToHandler>();
        }
    }

    // Headers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Header
    {
        public int IdHeaders { get; set; } // IdHeaders (Primary key)
        public string TextHeade1 { get; set; } // TextHeade1
        public string TextHeade2 { get; set; } // TextHeade2
        public string TextHeade3 { get; set; } // TextHeade3
        public string TextHeade4 { get; set; } // TextHeade4
        public string TextHeade5 { get; set; } // TextHeade5
        public string TextHeade6 { get; set; } // TextHeade6
        public string TextHeade7 { get; set; } // TextHeade7
        public string TextHeade8 { get; set; } // TextHeade8
        public string TextHeade9 { get; set; } // TextHeade9
        public string TextHeade10 { get; set; } // TextHeade10
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdHeaders] point to this entity (FK_Template_Headers)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Headers

        public Header()
        {
            DateCreate = System.DateTime.Now;
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // H_NAMES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HName
    {
        public int Id { get; set; } // ID (Primary key)
        public string N142 { get; set; } // N142 (length: 64)
        public bool D1035 { get; set; } // D1035
    }

    // HOUSE
    ///<summary>
    /// Сведения по номерам домов улиц городов и населенных пунктов, номера земельных участков и т.п
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class House
    {

        ///<summary>
        /// Уникальный идентификатор записи дома
        ///</summary>
        public System.Guid Houseid { get; set; } // HOUSEID (Primary key)

        ///<summary>
        /// Глобальный уникальный идентификатор дома
        ///</summary>
        public System.Guid Houseguid { get; set; } // HOUSEGUID

        ///<summary>
        /// Guid записи родительского объекта (улицы, города, населенного пункта и т.п.
        ///</summary>
        public System.Guid Aoguid { get; set; } // AOGUID

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата время внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Номер дома
        ///</summary>
        public string Housenum { get; set; } // HOUSENUM (length: 20)

        ///<summary>
        /// Признак владения
        ///</summary>
        public int Eststatid { get; set; } // ESTSTATID

        ///<summary>
        /// Номер корпуса
        ///</summary>
        public string Buildnum { get; set; } // BUILDNUM (length: 10)

        ///<summary>
        /// Номер строения
        ///</summary>
        public string Strucnum { get; set; } // STRUCNUM (length: 64)

        ///<summary>
        /// Признак строения
        ///</summary>
        public int? Strstatid { get; set; } // STRSTATID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Состояние дома
        ///</summary>
        public int Housestid { get; set; } // HOUSESTID

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdocid { get; set; } // NORMDOCID

        ///<summary>
        /// Счетчик записей домов для КЛАДР 4
        ///</summary>
        public int Counter { get; set; } // COUNTER

        ///<summary>
        /// Кадастровый номер
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Тип адресации:
        /// 0 - не определено
        /// 1 - муниципальный;
        /// 2 - административно-территориальный
        ///</summary>
        public int? Divtype { get; set; } // DIVTYPE
    }

    // HSTSTAT
    ///<summary>
    /// Статус состояния домов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Hststat
    {

        ///<summary>
        /// Идентификатор статуса
        ///</summary>
        public int Housestid { get; set; } // HOUSESTID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 60)
    }

    // Incass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Incass
    {
        public int? D851Res1 { get; set; } // D851Res_1
        public int? D850Incass { get; set; } // D850Incass
        public int D851Incass { get; set; } // D851Incass (Primary key)
        public decimal? Summ { get; set; } // Summ
        public int? D270IshIncass { get; set; } // D270IshIncass
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Reshenie pointed by [Incass].([D851Res1]) (FK_Incass_Reshenie)
        /// </summary>
        public virtual Reshenie Reshenie { get; set; } // FK_Incass_Reshenie
    }

    // ITERATOR_RES
    ///<summary>
    /// Результаты итераций по таблицам
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IteratorRe
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// OBJECT_ID таблицы, по которой осуществляется итерация
        ///</summary>
        public int ObjectId { get; set; } // OBJECT_ID

        ///<summary>
        /// УН записи в таблице
        ///</summary>
        public int RecordId { get; set; } // RECORD_ID

        ///<summary>
        /// Результат итерации
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1024)

        ///<summary>
        /// Время первой записи
        ///</summary>
        public System.DateTime Df { get; set; } // DF

        ///<summary>
        /// Время следующей записи
        ///</summary>
        public System.DateTime? Dn { get; set; } // DN
        public System.DateTime Dc { get; set; } // DC
    }

    // JOB_DATA_DT
    ///<summary>
    /// Данные для отложенных заданий типа &quot;дата-время&quot;
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataDt
    {

        ///<summary>
        /// УН данного
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public System.DateTime Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_DT].([Id]) (FK_JOB_DATA_DT_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_DT_JOB_DATA
    }

    // JOB_DATA_INT
    ///<summary>
    /// Числовые данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataInt
    {

        ///<summary>
        /// УН значения в таблице JOB_DATA
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public int Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_INT].([Id]) (FK_JOB_DATA_INT_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_INT_JOB_DATA
    }

    // JOB_DATA_STR
    ///<summary>
    /// Строковые данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataStr
    {

        ///<summary>
        /// УН в таблице JOB_DATA
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_STR].([Id]) (FK_JOB_DATA_STR_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_STR_JOB_DATA
    }

    // JOB_DATA_XML
    ///<summary>
    /// Отложенные задания - XML-данные
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataXml
    {

        ///<summary>
        /// УН данного
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// XML-значение
        ///</summary>
        public string Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_XML].([Id]) (FK_JOB_DATA_XML_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_XML_JOB_DATA
    }

    // JOB_DATA
    ///<summary>
    /// Данные для shed_job - родительская таблица
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// УН поля
        ///</summary>
        public int FieldId { get; set; } // FIELD_ID

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_DT].[ID] (FK_JOB_DATA_DT_JOB_DATA)
        /// </summary>
        public virtual JobDataDt JobDataDt { get; set; } // JOB_DATA_DT.FK_JOB_DATA_DT_JOB_DATA
        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_INT].[ID] (FK_JOB_DATA_INT_JOB_DATA)
        /// </summary>
        public virtual JobDataInt JobDataInt { get; set; } // JOB_DATA_INT.FK_JOB_DATA_INT_JOB_DATA
        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_STR].[ID] (FK_JOB_DATA_STR_JOB_DATA)
        /// </summary>
        public virtual JobDataStr JobDataStr { get; set; } // JOB_DATA_STR.FK_JOB_DATA_STR_JOB_DATA
        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_XML].[ID] (FK_JOB_DATA_XML_JOB_DATA)
        /// </summary>
        public virtual JobDataXml JobDataXml { get; set; } // JOB_DATA_XML.FK_JOB_DATA_XML_JOB_DATA

        // Foreign keys

        /// <summary>
        /// Parent RiskField pointed by [JOB_DATA].([FieldId]) (FK_JOB_DATA_RISK_FIELDS)
        /// </summary>
        public virtual RiskField RiskField { get; set; } // FK_JOB_DATA_RISK_FIELDS

        /// <summary>
        /// Parent ShedJob pointed by [JOB_DATA].([ShedJobId]) (FK_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_JOB_DATA_SHED_JOB
    }

    // KAO_CERHISTORY
    ///<summary>
    /// История операций отзыва / восстановления сертификата
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoCerhistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН сертификата
        ///</summary>
        public int Cid { get; set; } // CID

        ///<summary>
        /// Дата операции
        ///</summary>
        public System.DateTime Dt { get; set; } // DT

        ///<summary>
        /// Флаг, указывающий, что речь идет об отзыве сертификата
        ///</summary>
        public bool? Revocation { get; set; } // REVOCATION

        ///<summary>
        /// Результат операции отзыва / восстановления
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent KaoRogueCert pointed by [KAO_CERHISTORY].([Cid]) (FK_KAO_CERHISTORY_KAO_ROGUE_CERT)
        /// </summary>
        public virtual KaoRogueCert KaoRogueCert { get; set; } // FK_KAO_CERHISTORY_KAO_ROGUE_CERT
    }

    // KAO_RANHISTORY
    ///<summary>
    /// История помещения / удаления НП в перечень отываемых сертификатов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRanhistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН компании
        ///</summary>
        public int RogueId { get; set; } // ROGUE_ID

        ///<summary>
        /// Пользователь, совершивший операцию
        ///</summary>
        public string Sname { get; set; } // SNAME (length: 128)

        ///<summary>
        /// Дата операции
        ///</summary>
        public System.DateTime Dt { get; set; } // DT

        ///<summary>
        /// Значение флага автоматического отзыва сертификата (0 - не отзывать, 1 - отзывать)
        ///</summary>
        public int AutoRevoke { get; set; } // AUTO_REVOKE

        // Foreign keys

        /// <summary>
        /// Parent KaoRogue pointed by [KAO_RANHISTORY].([RogueId]) (FK_KAO_RANHISTORY_KAO_ROGUE)
        /// </summary>
        public virtual KaoRogue KaoRogue { get; set; } // FK_KAO_RANHISTORY_KAO_ROGUE

        public KaoRanhistory()
        {
            Sname = "suser_sname()";
            Dt = System.DateTime.Now;
        }
    }

    // KAO_RHISTORY
    ///<summary>
    /// История запросов данных об абонентах в ИРУД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRhistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН проверяемого лица
        ///</summary>
        public int RogueId { get; set; } // ROGUE_ID

        ///<summary>
        /// Результат обращения
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Дата обращения
        ///</summary>
        public System.DateTime Dt { get; set; } // DT

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent KaoRogue pointed by [KAO_RHISTORY].([RogueId]) (FK_KAO_RHISTORY_KAO_ROGUE)
        /// </summary>
        public virtual KaoRogue KaoRogue { get; set; } // FK_KAO_RHISTORY_KAO_ROGUE

        public KaoRhistory()
        {
            Dt = System.DateTime.Now;
        }
    }

    // KAO_ROGUE
    ///<summary>
    /// Список финансовых помоек для отзыва сертификатов ЭЦП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogue
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// ИНН организации
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Дата последней проверки на отзыв сертификата
        ///</summary>
        public System.DateTime Dt { get; set; } // DT
        public int? Re { get; set; } // RE

        ///<summary>
        /// Автоматически отзывать сертификаты
        ///</summary>
        public int AutoRevoke { get; set; } // AUTO_REVOKE

        // Reverse navigation

        /// <summary>
        /// Child KaoRanhistories where [KAO_RANHISTORY].[ROGUE_ID] point to this entity (FK_KAO_RANHISTORY_KAO_ROGUE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<KaoRanhistory> KaoRanhistories { get; set; } // KAO_RANHISTORY.FK_KAO_RANHISTORY_KAO_ROGUE
        /// <summary>
        /// Child KaoRhistories where [KAO_RHISTORY].[ROGUE_ID] point to this entity (FK_KAO_RHISTORY_KAO_ROGUE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<KaoRhistory> KaoRhistories { get; set; } // KAO_RHISTORY.FK_KAO_RHISTORY_KAO_ROGUE
        /// <summary>
        /// Child KaoRogueAboes where [KAO_ROGUE_ABO].[ROGUE_ID] point to this entity (FK_KAO_ROGUE_ABO_KAO_ROGUE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<KaoRogueAbo> KaoRogueAboes { get; set; } // KAO_ROGUE_ABO.FK_KAO_ROGUE_ABO_KAO_ROGUE
        /// <summary>
        /// Child KaoRogueCerts where [KAO_ROGUE_CERT].[ROGUE_ID] point to this entity (FK_KAO_ROGUE_CERT_KAO_ROGUE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<KaoRogueCert> KaoRogueCerts { get; set; } // KAO_ROGUE_CERT.FK_KAO_ROGUE_CERT_KAO_ROGUE

        public KaoRogue()
        {
            AutoRevoke = 1;
            KaoRanhistories = new System.Collections.Generic.List<KaoRanhistory>();
            KaoRhistories = new System.Collections.Generic.List<KaoRhistory>();
            KaoRogueAboes = new System.Collections.Generic.List<KaoRogueAbo>();
            KaoRogueCerts = new System.Collections.Generic.List<KaoRogueCert>();
        }
    }

    // KAO_ROGUE_ABO
    ///<summary>
    /// Помойки как абоненты спецоператоров связи
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogueAbo
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН финансовой помойки
        ///</summary>
        public int RogueId { get; set; } // ROGUE_ID

        ///<summary>
        /// Код помойки у спецоператора
        ///</summary>
        public string Code { get; set; } // CODE (length: 100)

        ///<summary>
        /// Дата проверки сведений программой
        ///</summary>
        public System.DateTime? Dt { get; set; } // DT

        ///<summary>
        /// Результат последней обработки - загрузки сертификатов
        ///</summary>
        public int? Re { get; set; } // RE
        public string Err { get; set; } // ERR (length: 1024)

        ///<summary>
        /// Дата сведений о модификации (дата сертификата, изменения или передачи в ИРУД)
        ///</summary>
        public System.DateTime? Md { get; set; } // MD

        ///<summary>
        /// Дата загрузки сведений о сертификатах
        ///</summary>
        public System.DateTime? Cld { get; set; } // CLD

        // Foreign keys

        /// <summary>
        /// Parent KaoRogue pointed by [KAO_ROGUE_ABO].([RogueId]) (FK_KAO_ROGUE_ABO_KAO_ROGUE)
        /// </summary>
        public virtual KaoRogue KaoRogue { get; set; } // FK_KAO_ROGUE_ABO_KAO_ROGUE

        public KaoRogueAbo()
        {
            Dt = System.DateTime.Now;
        }
    }

    // KAO_ROGUE_CERT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogueCert
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН помойки-владельца
        ///</summary>
        public int RogueId { get; set; } // ROGUE_ID

        ///<summary>
        /// УН сертификата в базе ИРУД
        ///</summary>
        public string Idcert { get; set; } // IDCERT (length: 20)

        ///<summary>
        /// Отпечаток
        ///</summary>
        public string Sha { get; set; } // SHA (length: 50)

        ///<summary>
        /// Дата начала действия сертификата
        ///</summary>
        public System.DateTime Db { get; set; } // DB

        ///<summary>
        /// Дата окончания действия сертификата
        ///</summary>
        public System.DateTime De { get; set; } // DE

        ///<summary>
        /// Владелец квалифицированной электронной подписи
        ///</summary>
        public string N18 { get; set; } // N18 (length: 1024)

        ///<summary>
        /// Поставщик сертификата
        ///</summary>
        public string Issuer { get; set; } // ISSUER (length: 1024)

        ///<summary>
        /// Сертификат ключей проверки электронной подписи
        ///</summary>
        public bool SigCheck { get; set; } // SIG_CHECK
        public bool ForSign { get; set; } // FOR_SIGN
        public bool ForEncryption { get; set; } // FOR_ENCRYPTION
        public bool Revoked { get; set; } // REVOKED
        public bool Compromised { get; set; } // COMPROMISED
        public string Owner { get; set; } // OWNER (length: 1024)
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Дата отзыва сертификата с интерфейса ИРУД
        ///</summary>
        public System.DateTime? Rdc { get; set; } // RDC

        ///<summary>
        /// Образ сертификата
        ///</summary>
        public byte[] Img { get; set; } // IMG (length: 2147483647)
        public string Err { get; set; } // ERR (length: 1024)
        public int? Re { get; set; } // RE

        // Reverse navigation

        /// <summary>
        /// Child KaoCerhistories where [KAO_CERHISTORY].[CID] point to this entity (FK_KAO_CERHISTORY_KAO_ROGUE_CERT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<KaoCerhistory> KaoCerhistories { get; set; } // KAO_CERHISTORY.FK_KAO_CERHISTORY_KAO_ROGUE_CERT

        // Foreign keys

        /// <summary>
        /// Parent KaoRogue pointed by [KAO_ROGUE_CERT].([RogueId]) (FK_KAO_ROGUE_CERT_KAO_ROGUE)
        /// </summary>
        public virtual KaoRogue KaoRogue { get; set; } // FK_KAO_ROGUE_CERT_KAO_ROGUE

        public KaoRogueCert()
        {
            KaoCerhistories = new System.Collections.Generic.List<KaoCerhistory>();
        }
    }

    // KbkAnaliz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkAnaliz
    {
        public int Id { get; set; } // Id (Primary key)
        public string Kbk { get; set; } // Kbk (length: 20)
        public byte? Statuskbk { get; set; } // Statuskbk
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public KbkAnaliz()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // LD_COURT
    ///<summary>
    /// Справочник судов - промежуточная таблица для загрузки из налога 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LdCourt
    {

        ///<summary>
        /// УН суда
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Тип суда (районный, мировой)
        ///</summary>
        public string CourtType { get; set; } // COURT_TYPE (length: 512)

        ///<summary>
        /// Название участка
        ///</summary>
        public string Name { get; set; } // NAME (length: 512)

        ///<summary>
        /// Адрес
        ///</summary>
        public string Address { get; set; } // ADDRESS (length: 1024)

        ///<summary>
        /// Телефон
        ///</summary>
        public string Tel { get; set; } // TEL (length: 256)

        ///<summary>
        /// Эл. почта
        ///</summary>
        public string Email { get; set; } // EMAIL (length: 256)
        public string RegionCode { get; set; } // REGION_CODE (length: 2)
    }

    // LOCK_NG
    ///<summary>
    /// Новая версия таблицы блокировки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LockNg
    {

        ///<summary>
        /// УН блокировки
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата блокировки
        ///</summary>
        public System.DateTime Ld { get; set; } // LD

        ///<summary>
        /// Код заблокировавшего обработчика
        ///</summary>
        public string HandlerCode { get; set; } // HANDLER_CODE (length: 100)

        ///<summary>
        /// Ключ блокировки
        ///</summary>
        public string Kv { get; set; } // KV (length: 100)

        ///<summary>
        /// Заблокировавшая машина
        ///</summary>
        public string Hst { get; set; } // HST (length: 100)
        public System.DateTime Ed { get; set; } // ED
    }

    // LOTUS_DOCS
    ///<summary>
    /// Документы Lotus (штрих-коды)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusDoc
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН документа в базе Lotus (NotesDocument.GetDocumentByUnid)
        ///</summary>
        public System.Guid DocumentId { get; set; } // DOCUMENT_ID

        ///<summary>
        /// MD5 хэш документа
        ///</summary>
        public System.Guid Md5 { get; set; } // MD5

        ///<summary>
        /// Время печати документа
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Время отсылки документа
        ///</summary>
        public System.DateTime? D86 { get; set; } // D86

        ///<summary>
        /// Пользователь, напечатавший документ
        ///</summary>
        public string Utp { get; set; } // UTP (length: 512)

        ///<summary>
        /// Пользователь, отославший документ
        ///</summary>
        public string Uts { get; set; } // UTS (length: 512)

        public LotusDoc()
        {
            D85 = System.DateTime.Now;
        }
    }

    // LOTUS_FILE
    ///<summary>
    /// Дела Лотус, правила нумерации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusFile
    {

        ///<summary>
        /// УН дела
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Номер дела
        ///</summary>
        public string Fileno { get; set; } // FILENO (length: 500)

        ///<summary>
        /// Префикс нумератора
        ///</summary>
        public string Numprefix { get; set; } // NUMPREFIX (length: 50)

        ///<summary>
        /// Суффикс нумератора
        ///</summary>
        public string Numpostfix { get; set; } // NUMPOSTFIX (length: 50)

        ///<summary>
        /// Разделитель нумератора
        ///</summary>
        public string Separator { get; set; } // SEPARATOR (length: 10)

        ///<summary>
        /// Положение разделителя
        ///</summary>
        public int Numindexpl { get; set; } // NUMINDEXPL
        public int Mantissa { get; set; } // MANTISSA

        // Reverse navigation

        /// <summary>
        /// Child LotusSequences where [LOTUS_SEQUENCE].[FILEID] point to this entity (FK_LOTUS_SEQUENCE_LOTUS_FILE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE.FK_LOTUS_SEQUENCE_LOTUS_FILE

        public LotusFile()
        {
            Mantissa = 5;
            LotusSequences = new System.Collections.Generic.List<LotusSequence>();
        }
    }

    // LOTUS_MOVEMENT
    ///<summary>
    /// Сведения о переносе документов из ТКС в Лотус
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusMovement
    {

        ///<summary>
        /// УН сведения о переносе документа
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН системы документооборота
        ///</summary>
        public string Iddocob { get; set; } // IDDOCOB (length: 100)

        ///<summary>
        /// NoteId документа в лотус
        ///</summary>
        public string LotusNoteid { get; set; } // LOTUS_NOTEID (length: 64)

        ///<summary>
        /// Входящий номер
        ///</summary>
        public string LotusNo { get; set; } // LOTUS_NO (length: 32)

        ///<summary>
        /// Дата входящего
        ///</summary>
        public System.DateTime? LotusDate { get; set; } // LOTUS_DATE

        // Reverse navigation

        /// <summary>
        /// Child LotusMovementHistories where [LOTUS_MOVEMENT_HISTORY].[MID] point to this entity (FK_LOTUS_MOVEMENT_HISTORY_LOTUS_MOVEMENT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LotusMovementHistory> LotusMovementHistories { get; set; } // LOTUS_MOVEMENT_HISTORY.FK_LOTUS_MOVEMENT_HISTORY_LOTUS_MOVEMENT

        public LotusMovement()
        {
            LotusMovementHistories = new System.Collections.Generic.List<LotusMovementHistory>();
        }
    }

    // LOTUS_MOVEMENT_HISTORY
    ///<summary>
    /// История операций по переносу документов из ТКС в Лотус
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusMovementHistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН записи о документе (ун записи об обращении)
        ///</summary>
        public int Mid { get; set; } // MID

        ///<summary>
        /// Результат переноса
        ///</summary>
        public int Status { get; set; } // STATUS

        ///<summary>
        /// Дата операции
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent LotusMovement pointed by [LOTUS_MOVEMENT_HISTORY].([Mid]) (FK_LOTUS_MOVEMENT_HISTORY_LOTUS_MOVEMENT)
        /// </summary>
        public virtual LotusMovement LotusMovement { get; set; } // FK_LOTUS_MOVEMENT_HISTORY_LOTUS_MOVEMENT
    }

    // LOTUS_SEQUENCE
    ///<summary>
    /// Поля нумерации (для того, чтобы брать нумератор не по одному, а скопом)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusSequence
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Номер дела
        ///</summary>
        public int Fileid { get; set; } // FILEID

        ///<summary>
        /// Стартовое значение
        ///</summary>
        public int Strt { get; set; } // STRT

        ///<summary>
        /// Текущее значение
        ///</summary>
        public int Curval { get; set; } // CURVAL

        ///<summary>
        /// Максимальное значение
        ///</summary>
        public int Maxval { get; set; } // MAXVAL
        public int? DtInt { get; private set; } // DT_INT

        // Foreign keys

        /// <summary>
        /// Parent LotusFile pointed by [LOTUS_SEQUENCE].([Fileid]) (FK_LOTUS_SEQUENCE_LOTUS_FILE)
        /// </summary>
        public virtual LotusFile LotusFile { get; set; } // FK_LOTUS_SEQUENCE_LOTUS_FILE

        public LotusSequence()
        {
            D85 = System.DateTime.Now;
            Fileid = 0;
        }
    }

    // MessageDate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageDate
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessageDate_ { get; set; } // MessageDate (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child AnalizNoes where [AnalizNO].[DateAnaliz] point to this entity (FK_AnalizNO_MessageDate)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AnalizNo> AnalizNoes { get; set; } // AnalizNO.FK_AnalizNO_MessageDate

        public MessageDate()
        {
            AnalizNoes = new System.Collections.Generic.List<AnalizNo>();
        }
    }

    // MessageStatusUh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageStatusUh
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessageStatusUh_ { get; set; } // MessageStatusUh (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child AnalizNoes where [AnalizNO].[StatusUhAnaliz] point to this entity (FK_AnalizNO_MessageStatusUh)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AnalizNo> AnalizNoes { get; set; } // AnalizNO.FK_AnalizNO_MessageStatusUh

        public MessageStatusUh()
        {
            AnalizNoes = new System.Collections.Generic.List<AnalizNo>();
        }
    }

    // MessageStrahovieAndOtkaz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageStrahovieAndOtkaz
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessageStrahovieAndOtkaz_ { get; set; } // MessageStrahovieAndOtkaz (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child AnalizNoes where [AnalizNO].[StrahovieAndOtkazAnaliz] point to this entity (FK_AnalizNO_MessageStrahovieAndOtkaz)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AnalizNo> AnalizNoes { get; set; } // AnalizNO.FK_AnalizNO_MessageStrahovieAndOtkaz

        public MessageStrahovieAndOtkaz()
        {
            AnalizNoes = new System.Collections.Generic.List<AnalizNo>();
        }
    }

    // MessageVivod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageVivod
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessageVivod_ { get; set; } // MessageVivod (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child AnalizNoes where [AnalizNO].[Vivod] point to this entity (FK_AnalizNO_MessageVivod)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AnalizNo> AnalizNoes { get; set; } // AnalizNO.FK_AnalizNO_MessageVivod

        public MessageVivod()
        {
            AnalizNoes = new System.Collections.Generic.List<AnalizNo>();
        }
    }

    // NameDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NameDocument
    {
        public int IdNamedocument { get; set; } // IdNamedocument (Primary key)
        public string NameDocument_ { get; set; } // NameDocument (length: 128)
        public string ManualDoc { get; set; } // ManualDoc (length: 128)
        public int IdTemplate { get; set; } // IdTemplate
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child WordDocuments where [WordDocument].[IdNamedocument] point to this entity (FK_WordDocument_NameDocument)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<WordDocument> WordDocuments { get; set; } // WordDocument.FK_WordDocument_NameDocument

        // Foreign keys

        /// <summary>
        /// Parent Template pointed by [NameDocument].([IdTemplate]) (FK_NameDocument_Template)
        /// </summary>
        public virtual Template Template { get; set; } // FK_NameDocument_Template

        public NameDocument()
        {
            DateCreate = System.DateTime.Now;
            WordDocuments = new System.Collections.Generic.List<WordDocument>();
        }
    }

    // NDFL_INV
    ///<summary>
    /// Список полученных имущественных налоговых вычетов из НДФЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NdflInv
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН задания, в рамках которого произведен запрос
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Код НО отправителя
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// ИНН плательщика
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Дата представления декларации (заявления на выдачу уведомления)
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Налоговый период
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// Сведения о размере предоставленного имущественного налогового вычета  /Размер имущественного налогового вычета по расходам, направленным на новое строительство либо приобретение  объекта(в руб.)/Размер вычета, предоставленного в налоговом периоде
        ///</summary>
        public decimal Inv2203 { get; set; } // INV_220_3

        ///<summary>
        /// Сведения о размере предоставленного имущественного налогового вычета  /Размер имущественного налогового вычета по расходам, направленным на новое строительство либо приобретение  объекта(в руб.)/Предельный размер вычета
        ///</summary>
        public decimal Inv2203Limit { get; set; } // INV_220_3_LIMIT

        ///<summary>
        /// Сведения о размере предоставленного имущественного налогового вычета  /Размер имущественного налогового вычета по расходам, направленным на погашение процентов по целевым займам (кредитам), а также по кредитам, полученным в целях рефинансирования (перекредитования)(в руб.)/Предельный размер вычета в налоговом периоде
        ///</summary>
        public decimal Inv2204 { get; set; } // INV_220_4

        ///<summary>
        /// Сведения о размере предоставленного имущественного налогового вычета  /Размер имущественного налогового вычета по расходам, направленным на погашение процентов по целевым займам (кредитам), а также по кредитам, полученным в целях рефинансирования (перекредитования)(в руб.)/Предельный размер вычета в налоговом периоде
        ///</summary>
        public decimal Inv2204Limit { get; set; } // INV_220_4_LIMIT

        ///<summary>
        /// Адрес местонахождения/Индекс
        ///</summary>
        public string N315 { get; set; } // N315 (length: 12)

        ///<summary>
        /// Адрес местонахождения/Код региона
        ///</summary>
        public string D3201 { get; set; } // D320_1 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Район
        ///</summary>
        public string D3202 { get; set; } // D320_2 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Город
        ///</summary>
        public string D3203 { get; set; } // D320_3 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Нас. пункт
        ///</summary>
        public string D3204 { get; set; } // D320_4 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Улица
        ///</summary>
        public string N316 { get; set; } // N316 (length: 150)

        ///<summary>
        /// Адрес местонахождения/Дом
        ///</summary>
        public string N317 { get; set; } // N317 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Корпус
        ///</summary>
        public string N318 { get; set; } // N318 (length: 100)

        ///<summary>
        /// Адрес местонахождения/Квартира
        ///</summary>
        public string N319 { get; set; } // N319 (length: 100)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [NDFL_INV].([ShedJobId]) (FK_NDFL_INV_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_NDFL_INV_SHED_JOB

        public NdflInv()
        {
            Inv2203 = 0m;
            Inv2203Limit = 0m;
            Inv2204 = 0m;
            Inv2204Limit = 0m;
        }
    }

    // NDOCTYPE
    ///<summary>
    /// Тип нормативного документа
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Ndoctype
    {

        ///<summary>
        /// Идентификатор записи (ключ)
        ///</summary>
        public int Ndtypeid { get; set; } // NDTYPEID (Primary key)

        ///<summary>
        /// Наименование типа нормативного документа
        ///</summary>
        public string Name { get; set; } // NAME (length: 250)

        // Reverse navigation

        /// <summary>
        /// Child Normdocs where [NORMDOC].[NDTYPEID] point to this entity (FK_NORMDOC_NORMDOC)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Normdoc> Normdocs { get; set; } // NORMDOC.FK_NORMDOC_NORMDOC

        public Ndoctype()
        {
            Normdocs = new System.Collections.Generic.List<Normdoc>();
        }
    }

    // NORMDOC
    ///<summary>
    /// Сведения по нормативному документу, являющемуся основанием присвоения адресному элементу наименования
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Normdoc
    {

        ///<summary>
        /// Идентификатор нормативного документа
        ///</summary>
        public System.Guid Normdocid { get; set; } // NORMDOCID (Primary key)

        ///<summary>
        /// Наименование документа
        ///</summary>
        public string Docname { get; set; } // DOCNAME (length: 2147483647)

        ///<summary>
        /// Дата документа
        ///</summary>
        public System.DateTime? Docdate { get; set; } // DOCDATE

        ///<summary>
        /// Номер документа
        ///</summary>
        public string Docnum { get; set; } // DOCNUM (length: 256)

        ///<summary>
        /// Тип документа
        ///</summary>
        public int Ndtypeid { get; set; } // NDTYPEID

        ///<summary>
        /// Идентификатор образа (внешний ключ)
        ///</summary>
        public System.Guid? Docimgid { get; set; } // DOCIMGID

        // Foreign keys

        /// <summary>
        /// Parent Ndoctype pointed by [NORMDOC].([Ndtypeid]) (FK_NORMDOC_NORMDOC)
        /// </summary>
        public virtual Ndoctype Ndoctype { get; set; } // FK_NORMDOC_NORMDOC
    }

    // OPERSTAT
    ///<summary>
    /// Статус действия
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Operstat
    {

        ///<summary>
        /// Идентификатор статуса (ключ)
        ///</summary>
        public int Operstatid { get; set; } // OPERSTATID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 100)
    }

    // POSTAL_DOC2ROLL
    ///<summary>
    /// Связующая таблица между почтовым реестром и почтовым документом.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDoc2Roll
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН реестра
        ///</summary>
        public int Rollid { get; set; } // ROLLID

        ///<summary>
        /// УН документа
        ///</summary>
        public int Docid { get; set; } // DOCID

        // Foreign keys

        /// <summary>
        /// Parent PostalDocument pointed by [POSTAL_DOC2ROLL].([Docid]) (FK_POSTAL_DOC2ROLL_POSTAL_DOCUMENT)
        /// </summary>
        public virtual PostalDocument PostalDocument { get; set; } // FK_POSTAL_DOC2ROLL_POSTAL_DOCUMENT

        /// <summary>
        /// Parent PostalRoll pointed by [POSTAL_DOC2ROLL].([Rollid]) (FK_POSTAL_DOC2ROLL_POSTAL_ROLL)
        /// </summary>
        public virtual PostalRoll PostalRoll { get; set; } // FK_POSTAL_DOC2ROLL_POSTAL_ROLL
    }

    // POSTAL_DOCTYPE
    ///<summary>
    /// Тип почтового документа
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDoctype
    {

        ///<summary>
        /// УН типа документа
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код типа документа
        ///</summary>
        public string Code { get; set; } // CODE (length: 10)

        ///<summary>
        /// Название типа документа
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)
    }

    // POSTAL_DOCUMENT
    ///<summary>
    /// Почтовые документы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDocument
    {

        ///<summary>
        /// УН документа
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Тип документа
        ///</summary>
        public int Doctypeid { get; set; } // DOCTYPEID
        public string Kv { get; set; } // KV (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child PostalDoc2Roll where [POSTAL_DOC2ROLL].[DOCID] point to this entity (FK_POSTAL_DOC2ROLL_POSTAL_DOCUMENT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PostalDoc2Roll> PostalDoc2Roll { get; set; } // POSTAL_DOC2ROLL.FK_POSTAL_DOC2ROLL_POSTAL_DOCUMENT
        /// <summary>
        /// Child PostalDocumentFields where [POSTAL_DOCUMENT_FIELD].[DOCUMENT_ID] point to this entity (FK_POSTAL_DOCUMENT_FIELD_POSTAL_DOCUMENT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PostalDocumentField> PostalDocumentFields { get; set; } // POSTAL_DOCUMENT_FIELD.FK_POSTAL_DOCUMENT_FIELD_POSTAL_DOCUMENT

        public PostalDocument()
        {
            PostalDoc2Roll = new System.Collections.Generic.List<PostalDoc2Roll>();
            PostalDocumentFields = new System.Collections.Generic.List<PostalDocumentField>();
        }
    }

    // POSTAL_DOCUMENT_FIELD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDocumentField
    {
        public int Id { get; set; } // ID (Primary key)
        public int DocumentId { get; set; } // DOCUMENT_ID
        public int FieldId { get; set; } // FIELD_ID
        public string Value { get; set; } // VALUE (length: 200)

        // Foreign keys

        /// <summary>
        /// Parent PostalDocument pointed by [POSTAL_DOCUMENT_FIELD].([DocumentId]) (FK_POSTAL_DOCUMENT_FIELD_POSTAL_DOCUMENT)
        /// </summary>
        public virtual PostalDocument PostalDocument { get; set; } // FK_POSTAL_DOCUMENT_FIELD_POSTAL_DOCUMENT
    }

    // POSTAL_FIELD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalField
    {

        ///<summary>
        /// УН поля
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код поля (по программе предпочтовой подготовки)
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Название поля
        ///</summary>
        public string Title { get; set; } // TITLE (length: 200)

        ///<summary>
        /// Флаг, где поле обязательно. 
        /// 0 - не обязательно
        /// 1 - в внутреннем реестре
        /// 2 - в экспортном реестре
        ///</summary>
        public int IsRequired { get; set; } // IS_REQUIRED

        ///<summary>
        /// Регулярное выражение для проверки
        ///</summary>
        public string ChkRe { get; set; } // CHK_RE (length: 512)

        ///<summary>
        /// Позиция поля в кладрированом адресе
        ///</summary>
        public int? AddrPosition { get; set; } // ADDR_POSITION
    }

    // POSTAL_ROLL
    ///<summary>
    /// Почтовый реестр (как для передачи данных, так и экспортный - на почту)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalRoll
    {

        ///<summary>
        /// УН реестра
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Тип реестра
        ///</summary>
        public int Typeid { get; set; } // TYPEID

        ///<summary>
        /// Владелец (создатель)
        ///</summary>
        public string Owner { get; set; } // OWNER (length: 150)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Дата закрытия и передачи
        ///</summary>
        public System.DateTime? D86 { get; set; } // D86

        // Reverse navigation

        /// <summary>
        /// Child PostalDoc2Roll where [POSTAL_DOC2ROLL].[ROLLID] point to this entity (FK_POSTAL_DOC2ROLL_POSTAL_ROLL)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PostalDoc2Roll> PostalDoc2Roll { get; set; } // POSTAL_DOC2ROLL.FK_POSTAL_DOC2ROLL_POSTAL_ROLL

        // Foreign keys

        /// <summary>
        /// Parent PostalRollType pointed by [POSTAL_ROLL].([Typeid]) (FK_POSTAL_REESTR_POSTAL_REESTR_TYPE)
        /// </summary>
        public virtual PostalRollType PostalRollType { get; set; } // FK_POSTAL_REESTR_POSTAL_REESTR_TYPE

        public PostalRoll()
        {
            Owner = "suser_sname()";
            D85 = System.DateTime.Now;
            PostalDoc2Roll = new System.Collections.Generic.List<PostalDoc2Roll>();
        }
    }

    // POSTAL_ROLL_TYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalRollType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Code { get; set; } // CODE (length: 25)
        public string Title { get; set; } // TITLE (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child PostalRolls where [POSTAL_ROLL].[TYPEID] point to this entity (FK_POSTAL_REESTR_POSTAL_REESTR_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PostalRoll> PostalRolls { get; set; } // POSTAL_ROLL.FK_POSTAL_REESTR_POSTAL_REESTR_TYPE

        public PostalRollType()
        {
            PostalRolls = new System.Collections.Generic.List<PostalRoll>();
        }
    }

    // RB_COURT
    ///<summary>
    /// Справочник судов из налога 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourt
    {

        ///<summary>
        /// УН суда
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН типа суда
        ///</summary>
        public int TpId { get; set; } // TP_ID

        ///<summary>
        /// Название участка
        ///</summary>
        public string Name { get; set; } // NAME (length: 512)

        ///<summary>
        /// Адрес
        ///</summary>
        public string Address { get; set; } // ADDRESS (length: 1024)

        ///<summary>
        /// Телефон
        ///</summary>
        public string Tel { get; set; } // TEL (length: 256)

        ///<summary>
        /// Эл. почта
        ///</summary>
        public string Email { get; set; } // EMAIL (length: 256)

        ///<summary>
        /// Код суда в ГАС Правосудие
        ///</summary>
        public string Code { get; set; } // CODE (length: 25)

        ///<summary>
        /// Код региона
        ///</summary>
        public string RegionCode { get; set; } // REGION_CODE (length: 2)

        // Foreign keys

        /// <summary>
        /// Parent RbCourtType pointed by [RB_COURT].([TpId]) (FK_RB_COURT_RB_COURT)
        /// </summary>
        public virtual RbCourtType RbCourtType { get; set; } // FK_RB_COURT_RB_COURT
    }

    // RB_COURT_EXCEPTIONS
    ///<summary>
    /// Суды, не разрешаемые через Yandex. Разрешаются по исключению.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourtException
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Адрес суда
        ///</summary>
        public string Addr { get; set; } // ADDR (length: 150)

        ///<summary>
        /// Код суда (московский ID)
        ///</summary>
        public string CourtId { get; set; } // COURT_ID (length: 3)
    }

    // RB_COURT_TYPE
    ///<summary>
    /// Справочник типы судов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourtType
    {

        ///<summary>
        /// УН типа суда
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название типа суда
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child RbCourts where [RB_COURT].[TP_ID] point to this entity (FK_RB_COURT_RB_COURT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RbCourt> RbCourts { get; set; } // RB_COURT.FK_RB_COURT_RB_COURT

        public RbCourtType()
        {
            RbCourts = new System.Collections.Generic.List<RbCourt>();
        }
    }

    // RB_DECL_CODES
    ///<summary>
    /// Справочник. Коды периода предоставления декларации 6 НДФЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbDeclCode
    {

        ///<summary>
        /// УН периода
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название периода
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)

        ///<summary>
        /// Количество месяцев, за которые предоставляется декларация
        ///</summary>
        public int Mnt { get; set; } // MNT
    }

    // RB_HOLIDAYS
    ///<summary>
    /// Производственный календарь
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbHoliday
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата
        ///</summary>
        public System.DateTime Dt { get; set; } // DT

        ///<summary>
        /// Является выходным (1 - выходной, 0 - это выходной, являющийся рабочим)
        ///</summary>
        public bool IsHoliday { get; set; } // IS_HOLIDAY

        public RbHoliday()
        {
            IsHoliday = true;
        }
    }

    // RB_REPORT
    ///<summary>
    /// Образы отчетов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbReport
    {

        ///<summary>
        /// УН отчета
        ///</summary>
        public int ReportId { get; set; } // REPORT_ID (Primary key)

        ///<summary>
        /// Код отчета
        ///</summary>
        public string ReportCode { get; set; } // REPORT_CODE (length: 50)

        ///<summary>
        /// Образ шаблона
        ///</summary>
        public byte[] ReportImage { get; set; } // REPORT_IMAGE (length: 2147483647)

        ///<summary>
        /// Название отчета
        ///</summary>
        public string ReportTitle { get; set; } // REPORT_TITLE (length: 255)

        ///<summary>
        /// Запрос для подготовки отчета.
        ///</summary>
        public byte[] ReportQuery { get; set; } // REPORT_QUERY (length: 2147483647)
    }

    // RB_ZG_CLASSES
    ///<summary>
    /// Классификатор ответов на ЗГ по причине обращения
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbZgClass
    {

        ///<summary>
        /// УН поля
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название причины обращения
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)
    }

    // RC_RECORDS
    ///<summary>
    /// Причины постановки на налоговый учет - снятия с учета
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RcRecord
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Постановка (1) или снятие (-1) с учета
        ///</summary>
        public int Flag { get; set; } // FLAG

        ///<summary>
        /// Код причины постановки на налоговый учет
        ///</summary>
        public string Code { get; set; } // CODE (length: 10)

        ///<summary>
        /// Описание причины постановки на налоговый учет
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1024)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn1836 where [RISK_FN1836].[RC_RECORD_ID] point to this entity (FK_RISK_FN1836_RC_RECORDS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836.FK_RISK_FN1836_RC_RECORDS

        public RcRecord()
        {
            RiskFn1836 = new System.Collections.Generic.List<RiskFn1836>();
        }
    }

    // REC_REASON
    ///<summary>
    /// Причины постановки на налоговый учет
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RecReason
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название причины
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1024)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn1836 where [RISK_FN1836].[REC_REASON_ID] point to this entity (FK_RISK_FN1836_REC_REASON)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836.FK_RISK_FN1836_REC_REASON

        public RecReason()
        {
            RiskFn1836 = new System.Collections.Generic.List<RiskFn1836>();
        }
    }

    // REPORT_FILTER
    ///<summary>
    /// Описание фильтров для вывода списка подготовленных отчетов (по пользователю, отделу или для всех)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportFilter
    {

        ///<summary>
        /// УН записи ACL
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код фильтра
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Название фильтра
        ///</summary>
        public string Title { get; set; } // TITLE (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child XlReportAcls where [XL_REPORT_ACL].[REPORT_FILTER_ID] point to this entity (FK_XL_REPORT_ACL_REPORT_FILTER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL.FK_XL_REPORT_ACL_REPORT_FILTER

        public ReportFilter()
        {
            XlReportAcls = new System.Collections.Generic.List<XlReportAcl>();
        }
    }

    // REQ_TYPE
    ///<summary>
    /// Типы запроса к внешнему источнику
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReqType
    {

        ///<summary>
        /// УН типа запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID (Primary key)

        ///<summary>
        /// Название запроса
        ///</summary>
        public string ReqTypeTitle { get; set; } // REQ_TYPE_TITLE (length: 256)

        ///<summary>
        /// Время жизни запроса в сутках
        ///</summary>
        public int ReqTtl { get; set; } // REQ_TTL

        ///<summary>
        /// Точка отсечения запросов. Применяется при изменениии алгоритма разбора. Запросы, сделанные ранее этой точки отсечения, считаются устаревшими и делаются повторно.
        ///</summary>
        public System.DateTime? CutOffDate { get; set; } // CUT_OFF_DATE

        ///<summary>
        /// Код запроса
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Тайм-аут при нефатальной ошибке
        ///</summary>
        public int? ErrTo { get; set; } // ERR_TO

        ///<summary>
        /// Время жизни фатальной ошибки
        ///</summary>
        public int? ErrTtl { get; set; } // ERR_TTL

        ///<summary>
        /// Допустимое количество нефатальных ошибок перед возникновением фатальной
        ///</summary>
        public int? ErrCnt { get; set; } // ERR_CNT
        public string Xcfg { get; set; } // XCFG

        ///<summary>
        /// Конфигурация для Dependency injection (планируется Autofac)
        ///</summary>
        public string Dicfg { get; set; } // DICFG

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) ReqType pointed by [AIS_RULES].[REQ_TYPE_ID] (FK_HND_RULES_REQ_TYPE)
        /// </summary>
        public virtual AisRule AisRule { get; set; } // AIS_RULES.FK_HND_RULES_REQ_TYPE
        /// <summary>
        /// Child AisHds where [AIS_HD].[REQ_TYPE_ID] point to this entity (FK_AIS_HD_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AisHd> AisHds { get; set; } // AIS_HD.FK_AIS_HD_REQ_TYPE
        /// <summary>
        /// Child AisProcessLogs where [AIS_PROCESS_LOG].[HANDLER_ID] point to this entity (FK_AIS_PROCESS_LOG_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AisProcessLog> AisProcessLogs { get; set; } // AIS_PROCESS_LOG.FK_AIS_PROCESS_LOG_REQ_TYPE
        /// <summary>
        /// Child ChainToHandlers where [CHAIN_TO_HANDLER].[REQ_TYPE_ID] point to this entity (FK_PATH_TO_HANDLER_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainToHandler> ChainToHandlers { get; set; } // CHAIN_TO_HANDLER.FK_PATH_TO_HANDLER_REQ_TYPE
        /// <summary>
        /// Child RfBigDatums where [RF_BIG_DATA].[CYCLE_ID] point to this entity (FK_RF_BIG_DATA_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RfBigDatum> RfBigDatums { get; set; } // RF_BIG_DATA.FK_RF_BIG_DATA_REQ_TYPE
        /// <summary>
        /// Child RiskCycles (Many-to-Many) mapped by table [REQ_TO_CYCLE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCycle> RiskCycles { get; set; } // Many to many mapping
        /// <summary>
        /// Child RiskFailures where [RISK_FAILURE].[CYCLE_ID] point to this entity (FK_RISK_FAILURE_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE.FK_RISK_FAILURE_REQ_TYPE
        /// <summary>
        /// Child RiskFailureHistories where [RISK_FAILURE_HISTORY].[CYCLE_ID] point to this entity (FK_RISK_FAILURE_HISTORY_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailureHistory> RiskFailureHistories { get; set; } // RISK_FAILURE_HISTORY.FK_RISK_FAILURE_HISTORY_REQ_TYPE
        /// <summary>
        /// Child RiskLocks where [RISK_LOCK].[CYCLE_ID] point to this entity (FK_RISK_LOCK_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskLock> RiskLocks { get; set; } // RISK_LOCK.FK_RISK_LOCK_REQ_TYPE
        /// <summary>
        /// Child ShedJobs where [SHED_JOB].[REQ_TYPE_ID] point to this entity (FK_SHED_JOB_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJob> ShedJobs { get; set; } // SHED_JOB.FK_SHED_JOB_REQ_TYPE
        /// <summary>
        /// Child SmevReqs where [SMEV_REQ].[REQ_TYPE_ID] point to this entity (FK_SMEV_REQ_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SmevReq> SmevReqs { get; set; } // SMEV_REQ.FK_SMEV_REQ_REQ_TYPE
        /// <summary>
        /// Child SmevResponses where [SMEV_RESPONSE].[REQ_TYPE_ID] point to this entity (FK_SMEV_RESPONSE_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE.FK_SMEV_RESPONSE_REQ_TYPE

        public ReqType()
        {
            ReqTtl = 0;
            Code = "NO CODE";
            AisHds = new System.Collections.Generic.List<AisHd>();
            AisProcessLogs = new System.Collections.Generic.List<AisProcessLog>();
            ChainToHandlers = new System.Collections.Generic.List<ChainToHandler>();
            RfBigDatums = new System.Collections.Generic.List<RfBigDatum>();
            RiskFailures = new System.Collections.Generic.List<RiskFailure>();
            RiskFailureHistories = new System.Collections.Generic.List<RiskFailureHistory>();
            RiskLocks = new System.Collections.Generic.List<RiskLock>();
            ShedJobs = new System.Collections.Generic.List<ShedJob>();
            SmevReqs = new System.Collections.Generic.List<SmevReq>();
            SmevResponses = new System.Collections.Generic.List<SmevResponse>();
            RiskCycles = new System.Collections.Generic.List<RiskCycle>();
        }
    }

    // Reshenie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Reshenie
    {
        public int? D865 { get; set; } // D865
        public int D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public decimal? N120 { get; set; } // N120
        public int? D850Res { get; set; } // D850Res
        public int D851Res { get; set; } // D851Res (Primary key)
        public int? D865Res { get; set; } // D865Res
        public int? D270IshRes { get; set; } // D270IshRes
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Incasses where [Incass].[D851Res_1] point to this entity (FK_Incass_Reshenie)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Incass> Incasses { get; set; } // Incass.FK_Incass_Reshenie

        // Foreign keys

        /// <summary>
        /// Parent TableSysNumReshen pointed by [Reshenie].([D270]) (FK_Reshenie_TableSysNumReshen)
        /// </summary>
        public virtual TableSysNumReshen TableSysNumReshen { get; set; } // FK_Reshenie_TableSysNumReshen

        public Reshenie()
        {
            Incasses = new System.Collections.Generic.List<Incass>();
        }
    }

    // RF_BIG_DATA
    ///<summary>
    /// Для деклараций - хранилище для выгрузки данных большого объема данных
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RfBigDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН обработчика
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID

        ///<summary>
        /// Ключ данных
        ///</summary>
        public string Kv { get; set; } // KV (length: 100)

        ///<summary>
        /// Собственно данные
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RF_BIG_DATA].([CycleId]) (FK_RF_BIG_DATA_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RF_BIG_DATA_REQ_TYPE

        /// <summary>
        /// Parent RiskChecker pointed by [RF_BIG_DATA].([RiskCheckerId]) (FK_RF_BIG_DATA_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RF_BIG_DATA_RISK_CHECKER
    }

    // RISK_CHECKER
    ///<summary>
    /// Запросы в ФБД (массовые учредители, отсутствие сотрудников и др.)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskChecker
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID (Primary key)

        ///<summary>
        /// ИНН контрегента
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Дата проверки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат запроса
        ///</summary>
        public int? Status { get; set; } // STATUS

        // Reverse navigation

        /// <summary>
        /// Child BankOperations where [BANK_OPERATIONS].[RISK_CHECKER_ID] point to this entity (FK_BANK_OPERATIONS_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS.FK_BANK_OPERATIONS_RISK_CHECKER
        /// <summary>
        /// Child ChainRequests where [CHAIN_REQUEST].[RISK_CHECKER_ID] point to this entity (FK_RISK_PATH_REQUEST_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainRequest> ChainRequests { get; set; } // CHAIN_REQUEST.FK_RISK_PATH_REQUEST_RISK_CHECKER
        /// <summary>
        /// Child ChainRequestHistories where [CHAIN_REQUEST_HISTORY].[RISK_CHECKER_ID] point to this entity (FK_RISK_PATH_REQUEST_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ChainRequestHistory> ChainRequestHistories { get; set; } // CHAIN_REQUEST_HISTORY.FK_RISK_PATH_REQUEST_HISTORY_RISK_CHECKER
        /// <summary>
        /// Child RfBigDatums where [RF_BIG_DATA].[RISK_CHECKER_ID] point to this entity (FK_RF_BIG_DATA_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RfBigDatum> RfBigDatums { get; set; } // RF_BIG_DATA.FK_RF_BIG_DATA_RISK_CHECKER
        /// <summary>
        /// Child RiskCheckerHistories where [RISK_CHECKER_HISTORY].[RISK_CHECKER_ID] point to this entity (FK_RISK_CHECKER_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY.FK_RISK_CHECKER_HISTORY_RISK_CHECKER
        /// <summary>
        /// Child RiskCheckerTo212 where [RISK_CHECKER_TO_212].[RISK_CHECKER_ID] point to this entity (FK_RISK_CHECKER_TO_212_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212.FK_RISK_CHECKER_TO_212_RISK_CHECKER
        /// <summary>
        /// Child RiskFailures where [RISK_FAILURE].[RISK_CHECKER_ID] point to this entity (FK_RISK_FAILURE_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE.FK_RISK_FAILURE_RISK_CHECKER
        /// <summary>
        /// Child RiskFailureHistories where [RISK_FAILURE_HISTORY].[RISK_CHECKER_ID] point to this entity (FK_RISK_FAILURE_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailureHistory> RiskFailureHistories { get; set; } // RISK_FAILURE_HISTORY.FK_RISK_FAILURE_HISTORY_RISK_CHECKER
        /// <summary>
        /// Child RiskFn1836 where [RISK_FN1836].[RISK_CHECKER_ID] point to this entity (FK_RISK_FN1836_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836.FK_RISK_FN1836_RISK_CHECKER
        /// <summary>
        /// Child RiskFn205 where [RISK_FN205].[RISK_CHECKER_ID] point to this entity (FK_RISK_FN205_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn205> RiskFn205 { get; set; } // RISK_FN205.FK_RISK_FN205_RISK_CHECKER
        /// <summary>
        /// Child RiskFn236 where [RISK_FN236].[RISK_CHECKER_ID] point to this entity (FK_RISK_FN236_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn236> RiskFn236 { get; set; } // RISK_FN236.FK_RISK_FN236_RISK_CHECKER
        /// <summary>
        /// Child RiskNdfls where [RISK_NDFL].[RISK_CHECKER_ID] point to this entity (FK_RISK_NDFL_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskNdfl> RiskNdfls { get; set; } // RISK_NDFL.FK_RISK_NDFL_RISK_CHECKER
        /// <summary>
        /// Child RiskYears where [RISK_YEAR].[RISK_CHECKER_ID] point to this entity (FK_RISK_YEAR_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskYear> RiskYears { get; set; } // RISK_YEAR.FK_RISK_YEAR_RISK_CHECKER

        public RiskChecker()
        {
            D85 = System.DateTime.Now;
            BankOperations = new System.Collections.Generic.List<BankOperation>();
            ChainRequests = new System.Collections.Generic.List<ChainRequest>();
            ChainRequestHistories = new System.Collections.Generic.List<ChainRequestHistory>();
            RfBigDatums = new System.Collections.Generic.List<RfBigDatum>();
            RiskCheckerHistories = new System.Collections.Generic.List<RiskCheckerHistory>();
            RiskCheckerTo212 = new System.Collections.Generic.List<RiskCheckerTo212>();
            RiskFailures = new System.Collections.Generic.List<RiskFailure>();
            RiskFailureHistories = new System.Collections.Generic.List<RiskFailureHistory>();
            RiskFn1836 = new System.Collections.Generic.List<RiskFn1836>();
            RiskFn205 = new System.Collections.Generic.List<RiskFn205>();
            RiskFn236 = new System.Collections.Generic.List<RiskFn236>();
            RiskNdfls = new System.Collections.Generic.List<RiskNdfl>();
            RiskYears = new System.Collections.Generic.List<RiskYear>();
        }
    }

    // RISK_CHECKER_HISTORY
    ///<summary>
    /// Список пользователей, сформировавших запрос к RISK_CHECKER
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerHistory
    {

        ///<summary>
        /// УН записи сведения об истории создания запросов
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата создания запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Имя пользователя, создавшего запрос
        ///</summary>
        public string Sname { get; set; } // SNAME (length: 128)

        ///<summary>
        /// УН записи в RISK_CHECKER (есть ИНН организации, сведения о которой запрашиваются).
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_CHECKER_HISTORY].([RiskCheckerId]) (FK_RISK_CHECKER_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_CHECKER_HISTORY_RISK_CHECKER

        public RiskCheckerHistory()
        {
            D85 = System.DateTime.Now;
            Sname = "suser_sname()";
        }
    }

    // RISK_CHECKER_TO_212
    ///<summary>
    /// Связка между RISK_CHECKER и RISK_FN212
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerTo212
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskCheckerTo212Id { get; set; } // RISK_CHECKER_TO_212_ID (Primary key)

        ///<summary>
        /// УН запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН лица
        ///</summary>
        public int? N1 { get; set; } // N1

        ///<summary>
        /// Дата запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Тип сведений
        /// 0 - сведения об организации
        /// 1 - сведения об учредителе.
        /// 2 - сведения о руководителе.
        ///</summary>
        public int Flag { get; set; } // FLAG

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_CHECKER_TO_212].([RiskCheckerId]) (FK_RISK_CHECKER_TO_212_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_CHECKER_TO_212_RISK_CHECKER

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_CHECKER_TO_212].([N1]) (FK_RISK_CHECKER_TO_212_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_CHECKER_TO_212_RISK_FN212

        public RiskCheckerTo212()
        {
            D85 = System.DateTime.Now;
        }
    }

    // RISK_CYCLE
    ///<summary>
    /// Название обработчиков для ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCycle
    {

        ///<summary>
        /// УН обработчика
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID (Primary key)

        ///<summary>
        /// Название обработчика
        ///</summary>
        public string CycleTitle { get; set; } // CYCLE_TITLE (length: 150)

        ///<summary>
        /// Число потоков при одновременной работе
        ///</summary>
        public int PoolSize { get; set; } // POOL_SIZE

        ///<summary>
        /// Класс - enumerator при потоковой работе
        ///</summary>
        public string Enumerator { get; set; } // ENUMERATOR (length: 100)

        ///<summary>
        /// Не используется (ранее было время жизни запроса)
        ///</summary>
        public int Ttl { get; set; } // TTL

        ///<summary>
        /// Активность цикла опроса
        /// 1 - цикл активен
        /// 0 - цикл выключен.
        ///</summary>
        public int HandlerId { get; set; } // HANDLER_ID

        // Reverse navigation

        /// <summary>
        /// Child ReqTypes (Many-to-Many) mapped by table [REQ_TO_CYCLE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ReqType> ReqTypes { get; set; } // Many to many mapping

        public RiskCycle()
        {
            PoolSize = 1;
            Enumerator = "N'Unknown'";
            HandlerId = 1;
            ReqTypes = new System.Collections.Generic.List<ReqType>();
        }
    }

    // RISK_DOSSIER
    ///<summary>
    /// Номенклатура дел
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskDossier
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код документа по КНД
        ///</summary>
        public string ReportCode { get; set; } // REPORT_CODE (length: 50)

        ///<summary>
        /// Номер дела (младший разряд), старший разряд берется из RISK_FN72
        ///</summary>
        public string Num { get; set; } // NUM (length: 10)

        ///<summary>
        /// УН отдела
        ///</summary>
        public int N274 { get; set; } // N274
    }

    // RISK_FAILURE
    ///<summary>
    /// Результаты запроса установочных сведений на организацию.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailure
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН цикла (REQ_TYPE)
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string ErrorMessage { get; set; } // ERROR_MESSAGE (length: 512)

        ///<summary>
        /// Время установки ошибки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Код завершения операции 
        /// Больше 0 - операция не завершена, отображается количество сделанных запросов - 1.
        /// 0 - Успешное завершение операции.
        /// -1 - Фатальная ошибка при совершении операции.
        ///</summary>
        public int? StatusCode { get; set; } // status_code

        ///<summary>
        /// Данные как результат обработки
        ///</summary>
        public string Data { get; set; } // DATA

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RISK_FAILURE].([CycleId]) (FK_RISK_FAILURE_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RISK_FAILURE_REQ_TYPE

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FAILURE].([RiskCheckerId]) (FK_RISK_FAILURE_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FAILURE_RISK_CHECKER

        public RiskFailure()
        {
            D85 = System.DateTime.Now;
            StatusCode = -1;
        }
    }

    // RISK_FAILURE_HISTORY
    ///<summary>
    /// Результаты запроса установочных сведений на организацию.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailureHistory
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string ErrorMessage { get; set; } // ERROR_MESSAGE (length: 512)

        ///<summary>
        /// Время установки ошибки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// УН цикла (REQ_TYPE)
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID

        ///<summary>
        /// Код завершения операции 
        /// Больше 0 - операция не завершена, отображается количество сделанных запросов - 1.
        /// 0 - Успешное завершение операции.
        /// -1 - Фатальная ошибка при совершении операции.
        ///</summary>
        public int? StatusCode { get; set; } // status_code

        ///<summary>
        /// Данные как результат обработки
        ///</summary>
        public string Data { get; set; } // DATA

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RISK_FAILURE_HISTORY].([CycleId]) (FK_RISK_FAILURE_HISTORY_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RISK_FAILURE_HISTORY_REQ_TYPE

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FAILURE_HISTORY].([RiskCheckerId]) (FK_RISK_FAILURE_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FAILURE_HISTORY_RISK_CHECKER
    }

    // RISK_FIELDS
    ///<summary>
    /// Поля для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskField
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код поля
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Название поля
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child JobDatums where [JOB_DATA].[FIELD_ID] point to this entity (FK_JOB_DATA_RISK_FIELDS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<JobDatum> JobDatums { get; set; } // JOB_DATA.FK_JOB_DATA_RISK_FIELDS

        public RiskField()
        {
            JobDatums = new System.Collections.Generic.List<JobDatum>();
        }
    }

    // RISK_FN1048
    ///<summary>
    /// Отчетные периоды
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1048
    {

        ///<summary>
        /// УН периода (номер квартала от 01.01.1900).
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН периода (номер квартала от 01.01.1900).
        ///</summary>
        public int D80 { get; set; } // D80

        ///<summary>
        /// Дата последней операции
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат выполнения операции
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Этап выполнения операции
        ///</summary>
        public int Stage { get; set; } // STAGE
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [RISK_FN1048].([ShedJobId]) (FK_RISK_FN1048_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_RISK_FN1048_SHED_JOB

        public RiskFn1048()
        {
            D85 = System.DateTime.Now;
            Re = 1;
        }
    }

    // RISK_FN1836
    ///<summary>
    /// Сведения о постановке на учет в налоговом органе
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1836
    {

        ///<summary>
        /// УН записи о постановке на учет
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// КПП
        ///</summary>
        public string D3 { get; set; } // D3 (length: 9)

        ///<summary>
        /// УН причины постановки/снятия
        ///</summary>
        public int RcRecordId { get; set; } // RC_RECORD_ID

        ///<summary>
        /// Дата постановки / снятия с учета
        ///</summary>
        public System.DateTime Dt { get; set; } // DT

        ///<summary>
        /// УН типа объекта учета
        ///</summary>
        public int RecReasonId { get; set; } // REC_REASON_ID

        ///<summary>
        /// Код НО учета
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// Адрес объекта учета
        ///</summary>
        public string N320 { get; set; } // N320 (length: 1024)

        ///<summary>
        /// УН записи объекта учета
        ///</summary>
        public long Fid { get; set; } // FID

        ///<summary>
        /// Дата фактической постановки или снятия с учета
        ///</summary>
        public System.DateTime? Df { get; set; } // DF

        // Foreign keys

        /// <summary>
        /// Parent RcRecord pointed by [RISK_FN1836].([RcRecordId]) (FK_RISK_FN1836_RC_RECORDS)
        /// </summary>
        public virtual RcRecord RcRecord { get; set; } // FK_RISK_FN1836_RC_RECORDS

        /// <summary>
        /// Parent RecReason pointed by [RISK_FN1836].([RecReasonId]) (FK_RISK_FN1836_REC_REASON)
        /// </summary>
        public virtual RecReason RecReason { get; set; } // FK_RISK_FN1836_REC_REASON

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FN1836].([RiskCheckerId]) (FK_RISK_FN1836_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FN1836_RISK_CHECKER
    }

    // RISK_FN1844
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1844
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// Дата прекращения деятельности
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// УН причины прекращения деятельности
        ///</summary>
        public int N18441 { get; set; } // N18441

        // Foreign keys

        /// <summary>
        /// Parent Fn18441 pointed by [RISK_FN1844].([N18441]) (FK_RISK_FN1844_FN184411)
        /// </summary>
        public virtual Fn18441 Fn18441 { get; set; } // FK_RISK_FN1844_FN184411
    }

    // RISK_FN1903
    ///<summary>
    /// Статус индивидуальных предпринимателей (без кода).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1903
    {
        public int S2123 { get; set; } // S2123 (Primary key)
        public string S2126 { get; set; } // S2126 (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn211 where [RISK_FN211].[S2123] point to this entity (FK_RISK_FN211_FN1903)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn211> RiskFn211 { get; set; } // RISK_FN211.FK_RISK_FN211_FN1903

        public RiskFn1903()
        {
            RiskFn211 = new System.Collections.Generic.List<RiskFn211>();
        }
    }

    // RISK_FN205
    ///<summary>
    /// Ответы от ЦОД на запросы сведений о счетах (в эту таблицу разбирается JSON-ответ от ЦОД)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn205
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН запроса о плательщике
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Номер счета
        ///</summary>
        public string N89 { get; set; } // N89 (length: 50)

        ///<summary>
        /// Дата открытия счета/возникновения права на КЭСП
        ///</summary>
        public System.DateTime? N95 { get; set; } // N95

        ///<summary>
        /// Дата закрытия счета/прекращения права на КЭСП
        ///</summary>
        public System.DateTime? N96 { get; set; } // N96

        ///<summary>
        /// БИК
        ///</summary>
        public string N111 { get; set; } // N111 (length: 50)

        ///<summary>
        /// КПП налоголательщика
        ///</summary>
        public string D3 { get; set; } // D3 (length: 12)

        ///<summary>
        /// ИНН налогоплательщика
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// ИНН банка
        ///</summary>
        public string N134Fn50 { get; set; } // N134Fn50 (length: 12)

        ///<summary>
        /// КПП банка
        ///</summary>
        public string D3Fn50 { get; set; } // D3Fn50 (length: 12)

        ///<summary>
        /// Название банка
        ///</summary>
        public string N18Fn50 { get; set; } // N18Fn50 (length: 1000)

        ///<summary>
        /// Регистрационный код банка по данным ЦБ РФ. FN50.D3807_6
        ///</summary>
        public int? D38076 { get; set; } // D38076

        ///<summary>
        /// Номер сообщения банка об открытии счета
        ///</summary>
        public string R248 { get; set; } // R248 (length: 200)

        ///<summary>
        /// Источник сведений о счете. 0 - &quot;Банк-счет-плательщик&quot; в ЦОД. 1 - &quot;История банк-счет-плательщик&quot; в ЦОД 2- ЭОД
        ///</summary>
        public int Rsource { get; set; } // RSOURCE

        ///<summary>
        /// Дата сообщения
        ///</summary>
        public System.DateTime? D1858 { get; set; } // D1858

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FN205].([RiskCheckerId]) (FK_RISK_FN205_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FN205_RISK_CHECKER

        public RiskFn205()
        {
            Rsource = 0;
        }
    }

    // RISK_FN206
    ///<summary>
    /// Виды деятельности налогоплательщика
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn206
    {

        ///<summary>
        /// УН вида деятельности лица
        ///</summary>
        public int N257 { get; set; } // N257 (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН кода ВЭД
        ///</summary>
        public int D3480 { get; set; } // D3480

        ///<summary>
        /// Признак основного вида деятельности
        ///</summary>
        public bool N306 { get; set; } // N306

        // Foreign keys

        /// <summary>
        /// Parent Fn1341 pointed by [RISK_FN206].([D3480]) (FK_RISK_FN206_fn1341)
        /// </summary>
        public virtual Fn1341 Fn1341 { get; set; } // FK_RISK_FN206_fn1341

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN206].([N1]) (FK_RISK_FN206_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN206_RISK_FN212

        public RiskFn206()
        {
            N306 = false;
        }
    }

    // RISK_FN210
    ///<summary>
    /// Организации (юр. лица) для загрузки сведений из ФБД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn210
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// ОГРН
        ///</summary>
        public string N1002 { get; set; } // N1002 (length: 13)

        ///<summary>
        /// Адрес
        ///</summary>
        public string N320 { get; set; } // N320 (length: 255)

        ///<summary>
        /// Уставной капитал
        ///</summary>
        public decimal? N1036 { get; set; } // N1036

        ///<summary>
        /// КПП
        ///</summary>
        public string D3 { get; set; } // D3 (length: 9)

        ///<summary>
        /// Полное наименование
        ///</summary>
        public string N135 { get; set; } // N135 (length: 1000)

        ///<summary>
        /// Дата образования
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// УН состояния лица
        ///</summary>
        public int? S2123 { get; set; } // S2123

        // Foreign keys

        /// <summary>
        /// Parent Fn1903 pointed by [RISK_FN210].([S2123]) (FK_RISK_FN210_FN1903)
        /// </summary>
        public virtual Fn1903 Fn1903 { get; set; } // FK_RISK_FN210_FN1903

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN210].([N1]) (FK_RISK_FN210_RISK_FN210)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN210_RISK_FN210
    }

    // RISK_FN211
    ///<summary>
    /// Физические лица - загрузка из ФБД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn211
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// Фамилия
        ///</summary>
        public string N146 { get; set; } // N146 (length: 64)

        ///<summary>
        /// Имя
        ///</summary>
        public string N142 { get; set; } // N142 (length: 60)

        ///<summary>
        /// Отчество
        ///</summary>
        public string N610 { get; set; } // N610 (length: 60)

        ///<summary>
        /// Номер документа
        ///</summary>
        public string N147 { get; set; } // N147 (length: 50)

        ///<summary>
        /// Серия документа
        ///</summary>
        public string N148 { get; set; } // N148 (length: 50)

        ///<summary>
        /// Адрес физического лица
        ///</summary>
        public string N320 { get; set; } // N320 (length: 255)

        ///<summary>
        /// ОГРНИП - регистрационный номер лица в качестве ИП.
        ///</summary>
        public string N1002 { get; set; } // N1002 (length: 20)

        ///<summary>
        /// УН записи о статусе ИП
        ///</summary>
        public int? S2123 { get; set; } // S2123

        // Foreign keys

        /// <summary>
        /// Parent RiskFn1903 pointed by [RISK_FN211].([S2123]) (FK_RISK_FN211_FN1903)
        /// </summary>
        public virtual RiskFn1903 RiskFn1903 { get; set; } // FK_RISK_FN211_FN1903

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN211].([N1]) (FK_RISK_FN211_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN211_RISK_FN212
    }

    // RISK_FN212
    ///<summary>
    /// Загрузка сведений - данные о лице
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn212
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// ИНН
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Название
        ///</summary>
        public string N18 { get; set; } // N18 (length: 160)

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) RiskFn212 pointed by [RISK_FN210].[N1] (FK_RISK_FN210_RISK_FN210)
        /// </summary>
        public virtual RiskFn210 RiskFn210 { get; set; } // RISK_FN210.FK_RISK_FN210_RISK_FN210
        /// <summary>
        /// Parent (One-to-One) RiskFn212 pointed by [RISK_FN211].[N1] (FK_RISK_FN211_RISK_FN212)
        /// </summary>
        public virtual RiskFn211 RiskFn211 { get; set; } // RISK_FN211.FK_RISK_FN211_RISK_FN212
        /// <summary>
        /// Child RiskCheckerTo212 where [RISK_CHECKER_TO_212].[N1] point to this entity (FK_RISK_CHECKER_TO_212_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212.FK_RISK_CHECKER_TO_212_RISK_FN212
        /// <summary>
        /// Child RiskFn206 where [RISK_FN206].[N1] point to this entity (FK_RISK_FN206_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn206> RiskFn206 { get; set; } // RISK_FN206.FK_RISK_FN206_RISK_FN212
        /// <summary>
        /// Child RiskFn236 where [RISK_FN236].[N1] point to this entity (FK_RISK_FN236_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn236> RiskFn236 { get; set; } // RISK_FN236.FK_RISK_FN236_RISK_FN212
        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1] point to this entity (FK_RISK_FN245_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245_N1 { get; set; } // RISK_FN245.FK_RISK_FN245_RISK_FN212
        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1_1] point to this entity (FK_RISK_FN245_RISK_FN2121)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245_N11 { get; set; } // RISK_FN245.FK_RISK_FN245_RISK_FN2121

        public RiskFn212()
        {
            RiskCheckerTo212 = new System.Collections.Generic.List<RiskCheckerTo212>();
            RiskFn206 = new System.Collections.Generic.List<RiskFn206>();
            RiskFn236 = new System.Collections.Generic.List<RiskFn236>();
            RiskFn245_N1 = new System.Collections.Generic.List<RiskFn245>();
            RiskFn245_N11 = new System.Collections.Generic.List<RiskFn245>();
        }
    }

    // RISK_FN236
    ///<summary>
    /// Лица-правопреемники при реорганизации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn236
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица-предшественника
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН запроса сведений о лице-правопреемнике
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FN236].([RiskCheckerId]) (FK_RISK_FN236_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FN236_RISK_CHECKER

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN236].([N1]) (FK_RISK_FN236_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN236_RISK_FN212
    }

    // RISK_FN245
    ///<summary>
    /// Сведения об учредителях - руководителях юр.лица
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn245
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskFn245Id { get; set; } // RISK_FN245_ID (Primary key)

        ///<summary>
        /// УН фирмы
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН лица
        ///</summary>
        public int N11 { get; set; } // N1_1

        ///<summary>
        /// УН записи о категориях ФЛ
        ///</summary>
        public int N1525 { get; set; } // N1525

        ///<summary>
        /// Дата последней проверки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        // Foreign keys

        /// <summary>
        /// Parent Fn3042 pointed by [RISK_FN245].([N1525]) (FK_RISK_FN245_FN3042)
        /// </summary>
        public virtual Fn3042 Fn3042 { get; set; } // FK_RISK_FN245_FN3042

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN245].([N1]) (FK_RISK_FN245_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212_N1 { get; set; } // FK_RISK_FN245_RISK_FN212

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN245].([N11]) (FK_RISK_FN245_RISK_FN2121)
        /// </summary>
        public virtual RiskFn212 RiskFn212_N11 { get; set; } // FK_RISK_FN245_RISK_FN2121

        public RiskFn245()
        {
            D85 = System.DateTime.Now;
        }
    }

    // RISK_FN71
    ///<summary>
    /// Список строк соединения с базами инспекций
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn71
    {

        ///<summary>
        /// УН инспекции
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код инспекции
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// УН конфигурации (тест / бой)
        ///</summary>
        public int DbConfigId { get; set; } // DB_CONFIG_ID

        ///<summary>
        /// Суффикс базы Taxes
        ///</summary>
        public string DbSuffix { get; set; } // DB_SUFFIX (length: 2)

        ///<summary>
        /// Server link, к машине, где установлена БД Taxes.
        ///</summary>
        public string LinkedServer { get; set; } // LINKED_SERVER (length: 50)

        ///<summary>
        /// Connection string для базы Taxes (не содержит Catalog)
        ///</summary>
        public string ConnectionString { get; set; } // CONNECTION_STRING (length: 100)

        // Foreign keys

        /// <summary>
        /// Parent DbConfig pointed by [RISK_FN71].([DbConfigId]) (FK_RISK_FN71_DB_CONFIG)
        /// </summary>
        public virtual DbConfig DbConfig { get; set; } // FK_RISK_FN71_DB_CONFIG
    }

    // RISK_FN72
    ///<summary>
    /// Справочник отделов.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn72
    {

        ///<summary>
        /// УН подразделения
        ///</summary>
        public int N274 { get; set; } // N274 (Primary key)

        ///<summary>
        /// Название подразделения
        ///</summary>
        public string N276 { get; set; } // N276 (length: 150)

        ///<summary>
        /// Номер дела (старшая цифра)
        ///</summary>
        public string R250 { get; set; } // R250 (length: 10)

        ///<summary>
        /// УН зама, подписывающего документы отдела
        ///</summary>
        public int N279 { get; set; } // N279
        public string N250 { get; set; } // N250 (length: 100)

        ///<summary>
        /// Признак основной деятельности
        ///</summary>
        public bool D1989 { get; set; } // D1989

        ///<summary>
        /// Направление деятельности - выездные проверки
        ///</summary>
        public bool D1990 { get; set; } // D1990

        ///<summary>
        /// Начало действия
        ///</summary>
        public System.DateTime D40 { get; set; } // D40

        ///<summary>
        /// Конец действия
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Дата модификации/удаления
        ///</summary>
        public System.DateTime? D306 { get; set; } // D306

        ///<summary>
        /// Признак: 1- юридическая служба, 0-нет
        ///</summary>
        public byte D19902 { get; set; } // D1990_2

        public RiskFn72()
        {
            D1989 = true;
            D1990 = false;
            D85 = System.DateTime.Now;
            D19902 = 0;
        }
    }

    // RISK_FN74
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn74
    {

        ///<summary>
        /// УН пользователя. Совпадает с TAXES.RISK_FN74.N269
        ///</summary>
        public int N269 { get; set; } // N269 (Primary key)

        ///<summary>
        /// ФИО пользователя
        ///</summary>
        public string N273 { get; set; } // N273 (length: 64)

        ///<summary>
        /// NT LOGIN
        ///</summary>
        public string D686 { get; set; } // D686 (length: 20)

        ///<summary>
        /// Код подразделения ГНИ
        ///</summary>
        public int N274 { get; set; } // N274

        ///<summary>
        /// Телефон, номер
        ///</summary>
        public string N249 { get; set; } // N249 (length: 20)

        ///<summary>
        /// Признак Имеет Право Подписи Документов ОБУ
        ///</summary>
        public byte? D2348 { get; set; } // D2348

        ///<summary>
        /// Признак Имеет Право Подписи Документов ЕГРН
        ///</summary>
        public byte? D2349 { get; set; } // D2349

        ///<summary>
        /// Признак Использовать по Умолчанию на Документах ОБУ
        ///</summary>
        public byte? D2350 { get; set; } // D2350

        ///<summary>
        /// Признак Использовать по Умолчанию на Документах ЕГРН
        ///</summary>
        public byte? D2351 { get; set; } // D2351

        ///<summary>
        /// ФИО к подписи на документе
        ///</summary>
        public string D2352 { get; set; } // D2352 (length: 40)

        ///<summary>
        /// Звание к подписи на документе
        ///</summary>
        public string D2353 { get; set; } // D2353 (length: 200)

        ///<summary>
        /// Должность к подписи на документе, кратко 45с
        ///</summary>
        public string D2354 { get; set; } // D2354 (length: 200)

        ///<summary>
        /// Дата начала действия
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// Дата окончания действия
        ///</summary>
        public System.DateTime? D41 { get; set; } // D41

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? D85 { get; set; } // D85

        ///<summary>
        /// Дата модификации/удаления
        ///</summary>
        public System.DateTime? D306 { get; set; } // D306

        ///<summary>
        /// ПризнакПравоПодписиДокументовВыездныхПроверок
        ///</summary>
        public bool D2355 { get; set; } // D2355

        ///<summary>
        /// ИспользоватьПоУмолчаниюНаДокументахВыездныхПроверок
        ///</summary>
        public bool D2356 { get; set; } // D2356

        ///<summary>
        /// ФИО должностного лица в творительном падеже, КЕМ
        ///</summary>
        public string N2731 { get; set; } // N273_1 (length: 64)

        ///<summary>
        /// Телефон, код м/г связи
        ///</summary>
        public string N2491 { get; set; } // N249_1 (length: 5)

        ///<summary>
        /// Телефон, внутренний номер
        ///</summary>
        public string N2492 { get; set; } // N249_2 (length: 5)

        ///<summary>
        /// ФИО должностного лица в дательном падеже, КОМУ
        ///</summary>
        public string N2732 { get; set; } // N273_2 (length: 100)

        ///<summary>
        /// Адрес электронной почты
        ///</summary>
        public string D3828 { get; set; } // D3828 (length: 100)

        ///<summary>
        /// Адрес электронной почты, E-mail
        ///</summary>
        public string N250 { get; set; } // N250 (length: 100)

        ///<summary>
        /// Должность к подписи на документе, полно
        ///</summary>
        public string D23542 { get; set; } // D2354_2 (length: 200)

        public RiskFn74()
        {
            N274 = 0;
            D2355 = false;
            D2356 = false;
        }
    }

    // RISK_INCOME_TAXATION
    ///<summary>
    /// Сведения о зарплате по ставкам
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskIncomeTaxation
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН года
        ///</summary>
        public int RiskYearId { get; set; } // RISK_YEAR_ID

        ///<summary>
        /// ИНН налогоплательщика (наемного сотрудника, в большинстве случаев)
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Ставка налога
        ///</summary>
        public decimal TaxRate { get; set; } // TAX_RATE

        ///<summary>
        /// Общая сумма дохода
        ///</summary>
        public decimal Income { get; set; } // INCOME

        ///<summary>
        /// Облагаемая сумма дохода
        ///</summary>
        public decimal TaxableIncome { get; set; } // TAXABLE_INCOME

        ///<summary>
        /// Сумма налога исчисленная
        ///</summary>
        public decimal IncomeTax { get; set; } // INCOME_TAX

        ///<summary>
        /// Сумма налога удержанная
        ///</summary>
        public decimal DeductedTax { get; set; } // DEDUCTED_TAX

        ///<summary>
        /// Сумма налога перечисленная
        ///</summary>
        public decimal TransferredTax { get; set; } // TRANSFERRED_TAX

        // Foreign keys

        /// <summary>
        /// Parent RiskYear pointed by [RISK_INCOME_TAXATION].([RiskYearId]) (FK_RISK_INCOME_TAXATION_RISK_YEAR)
        /// </summary>
        public virtual RiskYear RiskYear { get; set; } // FK_RISK_INCOME_TAXATION_RISK_YEAR
    }

    // RISK_LOCK
    ///<summary>
    /// Блокировка для запросов в ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskLock
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskLockId { get; set; } // RISK_LOCK_ID (Primary key)

        ///<summary>
        /// ID запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// ID вида запроса (численность, сведения)
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID

        ///<summary>
        /// Время установки блокировки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Снимать блокировку в автоматическом режиме
        ///</summary>
        public bool AutoRemove { get; set; } // AUTO_REMOVE

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RISK_LOCK].([CycleId]) (FK_RISK_LOCK_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RISK_LOCK_REQ_TYPE

        public RiskLock()
        {
            D85 = System.DateTime.Now;
            AutoRemove = true;
        }
    }

    // RISK_MIME
    ///<summary>
    /// Типы mime (используется при вызове процедуры загрузки через Web-интерфейс)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskMime
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Расширение файла
        ///</summary>
        public string Extension { get; set; } // EXTENSION (length: 16)

        ///<summary>
        /// Тип Mime
        ///</summary>
        public string Mime { get; set; } // MIME (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child XlReports where [XL_REPORT].[RISK_MIME_ID] point to this entity (FK_XL_REPORT_RISK_MIME)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReport> XlReports { get; set; } // XL_REPORT.FK_XL_REPORT_RISK_MIME

        public RiskMime()
        {
            XlReports = new System.Collections.Generic.List<XlReport>();
        }
    }

    // RISK_NDFL
    ///<summary>
    /// Сведения о форме 6-НДФЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskNdfl
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Год
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// УН формы
        ///</summary>
        public int KindCode { get; set; } // KIND_CODE

        ///<summary>
        /// Количество работников
        ///</summary>
        public int Qty { get; set; } // QTY

        ///<summary>
        /// Удержан налог
        ///</summary>
        public decimal DeductedTax { get; set; } // DEDUCTED_TAX

        ///<summary>
        /// Не удержан налог
        ///</summary>
        public decimal RemaindedTax { get; set; } // REMAINDED_TAX

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_NDFL].([RiskCheckerId]) (FK_RISK_NDFL_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_NDFL_RISK_CHECKER

        public RiskNdfl()
        {
            Qty = 0;
            DeductedTax = 0m;
            RemaindedTax = 0m;
        }
    }

    // RISK_NDFL2
    ///<summary>
    /// Деталировка зарплаты по 2-НДФЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskNdfl2
    {
        public int Id { get; set; } // ID (Primary key)
        public int ShedJobId { get; set; } // SHED_JOB_ID
        public string N134 { get; set; } // N134 (length: 12)
        public string RiskN134 { get; set; } // RiskN134 (length: 12)
        public string RiskD3 { get; set; } // RiskD3 (length: 9)
        public string RiskN18 { get; set; } // RiskN18 (length: 1024)
        public string V743 { get; set; } // V743 (length: 8)
        public decimal Income { get; set; } // INCOME
        public decimal Tax { get; set; } // TAX
        public decimal TaxRate { get; set; } // TAX_RATE

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [RISK_NDFL2].([ShedJobId]) (FK_RISK_NDFL2_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_RISK_NDFL2_SHED_JOB
    }

    // RISK_PROXY
    ///<summary>
    /// Представитель сотрудника управления в базе инспекции
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskProxy
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН инспекции
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// Login доверителя (FN74.D686)
        ///</summary>
        public string CommiterD686 { get; set; } // COMMITER_D686 (length: 50)

        ///<summary>
        /// Login доверенного лица (FN74.D686)
        ///</summary>
        public string ProxyD686 { get; set; } // PROXY_D686 (length: 50)
    }

    // RISK_VERSION
    ///<summary>
    /// Сведения о версии БД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskVersion
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskVersionId { get; set; } // RISK_VERSION_ID (Primary key)

        ///<summary>
        /// Версия базы
        ///</summary>
        public long DbVersion { get; set; } // DB_VERSION
    }

    // RISK_WEB
    ///<summary>
    /// Функции внутреннего web-сервиса (например, настройки, сверки с физлицом, печать документов и т.д.).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskWeb
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название контроллера
        ///</summary>
        public string Ctl { get; set; } // Ctl (length: 50)

        ///<summary>
        /// Url для RedirectTo
        ///</summary>
        public string Redir { get; set; } // Redir (length: 255)

        ///<summary>
        /// Название группы
        ///</summary>
        public string Title { get; set; } // Title (length: 50)
    }

    // RISK_YEAR
    ///<summary>
    /// Численность работников (количество справок 2-НДФЛ) по данным ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskYear
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskYearId { get; set; } // RISK_YEAR_ID (Primary key)

        ///<summary>
        /// ID запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Год, за который запрошена численность работников
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// Количество справок 2-НДФЛ
        ///</summary>
        public int Qty { get; set; } // QTY

        ///<summary>
        /// ID запроса. Для предотвращения повторного запуска.
        ///</summary>
        public int? QueryId { get; set; } // QUERY_ID

        // Reverse navigation

        /// <summary>
        /// Child RiskIncomeTaxations where [RISK_INCOME_TAXATION].[RISK_YEAR_ID] point to this entity (FK_RISK_INCOME_TAXATION_RISK_YEAR)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskIncomeTaxation> RiskIncomeTaxations { get; set; } // RISK_INCOME_TAXATION.FK_RISK_INCOME_TAXATION_RISK_YEAR

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_YEAR].([RiskCheckerId]) (FK_RISK_YEAR_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_YEAR_RISK_CHECKER

        public RiskYear()
        {
            RiskIncomeTaxations = new System.Collections.Generic.List<RiskIncomeTaxation>();
        }
    }

    // ROOM
    ///<summary>
    /// Сведения о помещениях
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Room
    {

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Roomid { get; set; } // ROOMID (Primary key)

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта (помещения)
        ///</summary>
        public System.Guid Roomguid { get; set; } // ROOMGUID

        ///<summary>
        /// Номер помещения или офиса
        ///</summary>
        public string Flatnumber { get; set; } // FLATNUMBER (length: 50)

        ///<summary>
        /// Тип помещения
        ///</summary>
        public int Flattype { get; set; } // FLATTYPE

        ///<summary>
        /// Номер комнаты
        ///</summary>
        public string Roomnumber { get; set; } // ROOMNUMBER (length: 50)

        ///<summary>
        /// Тип комнаты
        ///</summary>
        public int? Roomtype { get; set; } // ROOMTYPE

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Идентификатор родительского объекта (дома)
        ///</summary>
        public System.Guid Houseguid { get; set; } // HOUSEGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public int Livestatus { get; set; } // LIVESTATUS

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdoc { get; set; } // NORMDOC

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus):
        /// 01 – Инициация;
        /// 10 – Добавление;
        /// 20 – Изменение;
        /// 21 – Групповое изменение;
        /// 30 – Удаление;
        /// 31 - Удаление вследствие удаления вышестоящего объекта;
        /// 40 – Присоединение адресного объекта (слияние);
        /// 41 – Переподчинение вследствие слияния вышестоящего объекта;
        /// 42 - Прекращение существования вследствие присоединения к другому адресному объекту;
        /// 43 - Создание нового адресного объекта в результате слияния адресных объектов;
        /// 50 – Переподчинение;
        /// 51 – Переподчинение вследствие переподчинения вышестоящего объекта;
        /// 60 – Прекращение существования вследствие дробления;
        /// 61 – Создание нового адресного объекта в результате дробления
        ///</summary>
        public int Operstatus { get; set; } // OPERSTATUS

        ///<summary>
        /// Кадастровый номер помещения
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Кадастровый номер комнаты в помещении
        ///</summary>
        public string Roomcadnum { get; set; } // ROOMCADNUM (length: 100)
    }

    // ROOMTYPE
    ///<summary>
    /// Информация по типам комнат в БД ФИАС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Roomtype
    {

        ///<summary>
        /// УН типа комнаты
        ///</summary>
        public int Rmtypeid { get; set; } // RMTYPEID (Primary key)

        ///<summary>
        /// Наименование типа комнаты
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование типа комнаты
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // The table 'SashaErrorTreb' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // SashaErrorTreb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SashaErrorTreb
    {
        public int? D865 { get; set; } // D865
        public int? D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public string ErrorTreb { get; set; } // ErrorTreb
        public int? D850Treb { get; set; } // D850Treb
        public int? D865Treb { get; set; } // D865Treb
        public int? D851Treb { get; set; } // D851Treb
        public int? D270Treb { get; set; } // D270Treb
        public string ErrorIncas { get; set; } // ErrorIncas
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // The table 'SashaOkTreb' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // SashaOkTreb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SashaOkTreb
    {
        public int? D865 { get; set; } // D865
        public int? D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public string OkTr { get; set; } // OkTr
        public int? D850Treb { get; set; } // D850Treb
        public int? D851Treb { get; set; } // D851Treb
        public int? D865Treb { get; set; } // D865Treb
        public int? D270IshTreb { get; set; } // D270IshTreb
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // ServerIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServerIfn
    {
        public int Id { get; set; } // Id (Primary key)
        public string ServerName { get; set; } // ServerName (length: 64)
        public string ServerDiscription { get; set; } // ServerDiscription (length: 64)
        public string Children { get; set; } // Children (length: 64)
        public string ServerIp { get; set; } // ServerIp (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public ServerIfn()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ServiceWcfCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceWcfCommand
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdGroup { get; set; } // IdGroup
        public int IdClass { get; set; } // IdClass
        public int IdSobytieSystem { get; set; } // IdSobytieSystem
        public string DescriptionFull { get; set; } // DescriptionFull
        public string DescriptionParam { get; set; } // DescriptionParam
        public string Command { get; set; } // Command
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent ClassOtdel pointed by [ServiceWcfCommand].([IdClass]) (FK_ServiceWcfCommand_ClassOtdel)
        /// </summary>
        public virtual ClassOtdel ClassOtdel { get; set; } // FK_ServiceWcfCommand_ClassOtdel

        /// <summary>
        /// Parent GroupOtdel pointed by [ServiceWcfCommand].([IdGroup]) (FK_ServiceWcfCommand_GroupOtdel)
        /// </summary>
        public virtual GroupOtdel GroupOtdel { get; set; } // FK_ServiceWcfCommand_GroupOtdel

        /// <summary>
        /// Parent SobytieOtdel pointed by [ServiceWcfCommand].([IdSobytieSystem]) (FK_ServiceWcfCommand_SobytieOtdel)
        /// </summary>
        public virtual SobytieOtdel SobytieOtdel { get; set; } // FK_ServiceWcfCommand_SobytieOtdel
    }

    // SHED_JOB
    ///<summary>
    /// Отложенные задания. Ресурсоемкие задачи для выполнения в фоновом режиме (например, подготовка tiff-документов).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJob
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID (Primary key)

        ///<summary>
        /// Тип задания
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Время помещения задания в очередь
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат выполнения задания
        /// Больше 0 - не выполнено (указано количество попыток  + 1)
        /// 0 - успешно выполнено
        /// -1 - завершено с ошибкой
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Время последнего изменения
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// Сообщение об ошибке выполнения.
        ///</summary>
        public string Err { get; set; } // ERR (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child JobDatums where [JOB_DATA].[SHED_JOB_ID] point to this entity (FK_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<JobDatum> JobDatums { get; set; } // JOB_DATA.FK_JOB_DATA_SHED_JOB
        /// <summary>
        /// Child NdflInvs where [NDFL_INV].[SHED_JOB_ID] point to this entity (FK_NDFL_INV_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NdflInv> NdflInvs { get; set; } // NDFL_INV.FK_NDFL_INV_SHED_JOB
        /// <summary>
        /// Child RiskFn1048 where [RISK_FN1048].[SHED_JOB_ID] point to this entity (FK_RISK_FN1048_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1048> RiskFn1048 { get; set; } // RISK_FN1048.FK_RISK_FN1048_SHED_JOB
        /// <summary>
        /// Child RiskNdfl2 where [RISK_NDFL2].[SHED_JOB_ID] point to this entity (FK_RISK_NDFL2_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskNdfl2> RiskNdfl2 { get; set; } // RISK_NDFL2.FK_RISK_NDFL2_SHED_JOB
        /// <summary>
        /// Child ShedJobDatums where [SHED_JOB_DATA].[SHED_JOB_ID] point to this entity (FK_SHED_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA.FK_SHED_JOB_DATA_SHED_JOB
        /// <summary>
        /// Child ShedJobLogs where [SHED_JOB_LOG].[SHED_JOB_ID] point to this entity (FK_SHED_JOB_LOG_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG.FK_SHED_JOB_LOG_SHED_JOB

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SHED_JOB].([ReqTypeId]) (FK_SHED_JOB_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SHED_JOB_REQ_TYPE

        public ShedJob()
        {
            D85 = System.DateTime.Now;
            JobDatums = new System.Collections.Generic.List<JobDatum>();
            NdflInvs = new System.Collections.Generic.List<NdflInv>();
            RiskFn1048 = new System.Collections.Generic.List<RiskFn1048>();
            RiskNdfl2 = new System.Collections.Generic.List<RiskNdfl2>();
            ShedJobDatums = new System.Collections.Generic.List<ShedJobDatum>();
            ShedJobLogs = new System.Collections.Generic.List<ShedJobLog>();
        }
    }

    // SHED_JOB_DATA
    ///<summary>
    /// Данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobDataId { get; set; } // SHED_JOB_DATA_ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Поле
        ///</summary>
        public string Field { get; set; } // FIELD (length: 100)

        ///<summary>
        /// Значение
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [SHED_JOB_DATA].([ShedJobId]) (FK_SHED_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_SHED_JOB_DATA_SHED_JOB
    }

    // SHED_JOB_LOG
    ///<summary>
    /// Результаты работы обработчика Shed_job (подробности).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobLog
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobLogId { get; set; } // SHED_JOB_LOG_ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Поле
        ///</summary>
        public string Field { get; set; } // FIELD (length: 100)

        ///<summary>
        /// Значение (например, значение ключа документа)
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        ///<summary>
        /// Результат обработки
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [SHED_JOB_LOG].([ShedJobId]) (FK_SHED_JOB_LOG_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_SHED_JOB_LOG_SHED_JOB
    }

    // SHED_REPORT
    ///<summary>
    /// Периодически выполняемые запросы к базе
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedReport
    {

        ///<summary>
        /// УН запроса
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код запроса
        ///</summary>
        public string Code { get; set; } // CODE (length: 15)

        ///<summary>
        /// Данные для совершения запроса
        ///</summary>
        public string Guide { get; set; } // GUIDE
    }

    // SIGNATURE
    ///<summary>
    /// Подписи, наносимые на документы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Signature
    {

        ///<summary>
        /// УН подписи
        ///</summary>
        public int SignatureId { get; set; } // SIGNATURE_ID (Primary key)

        ///<summary>
        /// УН владельца
        ///</summary>
        public int SignerId { get; set; } // SIGNER_ID

        ///<summary>
        /// Изображение подписи
        ///</summary>
        public byte[] SignatureImage { get; set; } // SIGNATURE_IMAGE (length: 2147483647)

        // Foreign keys

        /// <summary>
        /// Parent Signer pointed by [SIGNATURE].([SignerId]) (FK_SIGNATURE_SIGNER)
        /// </summary>
        public virtual Signer Signer { get; set; } // FK_SIGNATURE_SIGNER
    }

    // SIGNER
    ///<summary>
    /// Авторы подписи
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Signer
    {

        ///<summary>
        /// УН автора подписи
        ///</summary>
        public int SignerId { get; set; } // SIGNER_ID (Primary key)

        ///<summary>
        /// Выражение для поиска автора в тексте
        ///</summary>
        public string SignerExpr { get; set; } // SIGNER_EXPR (length: 100)

        ///<summary>
        /// Является ли выражение SIGNER_EXP регулярным выражением
        ///</summary>
        public bool RegEx { get; set; } // REG_EX
        public string SignerTitle { get; set; } // SIGNER_TITLE (length: 100)

        ///<summary>
        /// Разновидность подписи и печати (0 - без печати, 1 - с печатью). RISKS..SIGNER.SealType
        ///</summary>
        public int SealType { get; set; } // SealType

        ///<summary>
        /// Сдвиг печати по горизонтали. Подбирайте под каждую разновидность печати. Подпись без печати -0.7, печать и подпись -0.4.
        ///</summary>
        public double HoriShift { get; set; } // HoriShift

        ///<summary>
        /// Сдвиг печати по вертикали. RISKS..SIGNER.VertShift
        ///</summary>
        public double VertShift { get; set; } // VertShift

        // Reverse navigation

        /// <summary>
        /// Child Signatures where [SIGNATURE].[SIGNER_ID] point to this entity (FK_SIGNATURE_SIGNER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Signature> Signatures { get; set; } // SIGNATURE.FK_SIGNATURE_SIGNER

        public Signer()
        {
            RegEx = false;
            SealType = 0;
            HoriShift = -0.7;
            VertShift = -0.5;
            Signatures = new System.Collections.Generic.List<Signature>();
        }
    }

    // SMEV_CAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCar
    {
        public int SmevCarId { get; set; } // SMEV_CAR_ID (Primary key)
        public string SmevCarExpr { get; set; } // SMEV_CAR_EXPR (Primary key) (length: 1024)
        public string N1076 { get; set; } // N1076 (Primary key) (length: 512)
        public string D900 { get; set; } // D900 (Primary key) (length: 512)
    }

    // SMEV_CRED
    ///<summary>
    /// Учетные данные для входа в СМЭВ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCred
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int SmevCredId { get; set; } // SMEV_CRED_ID (Primary key)

        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string SmevLogin { get; set; } // SMEV_LOGIN (length: 50)

        ///<summary>
        /// Пароль
        ///</summary>
        public string SmevPass { get; set; } // SMEV_PASS (length: 50)

        ///<summary>
        /// Имя пользователя в домене Windows
        ///</summary>
        public string Suser { get; set; } // SUSER (length: 255)

        ///<summary>
        /// Имя пользователя ЦОД
        ///</summary>
        public string FdcUser { get; set; } // FdcUser (length: 500)

        ///<summary>
        /// Дата изменения имени пользователя / пароля
        ///</summary>
        public byte[] CredChg { get; set; } // CredChg (length: 8)

        ///<summary>
        /// Дата проверки доступа к ЦОД
        ///</summary>
        public System.DateTime? CredVer { get; set; } // CredVer

        ///<summary>
        /// Дата окончания срока действия пароля ЦОД
        ///</summary>
        public System.DateTime? PasswdValid { get; set; } // PasswdValid

        public SmevCred()
        {
            Suser = "suser_sname()";
        }
    }

    // SMEV_PARAM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevParam
    {
        public int SmevParamId { get; set; } // SMEV_PARAM_ID (Primary key)
        public string SmevParamCode { get; set; } // SMEV_PARAM_CODE (length: 50)
        public string SmevParamValue { get; set; } // SMEV_PARAM_VALUE (length: 255)
        public string SmevParamDescription { get; set; } // SMEV_PARAM_DESCRIPTION (length: 255)
    }

    // SMEV_REQ
    ///<summary>
    /// Запросы к внешнему серверу
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevReq
    {

        ///<summary>
        /// УН запроса
        ///</summary>
        public int SmevReqId { get; set; } // SMEV_REQ_ID (Primary key)

        ///<summary>
        /// Время отправки запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Вид запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Значение ключа
        ///</summary>
        public long KeyValue { get; set; } // KEY_VALUE

        ///<summary>
        /// Результат выполнения запроса
        /// Больше 0 - не выполнено (указано количество попыток  + 1)
        /// 0 - успешно выполнено
        /// -1 - завершено с ошибкой
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Данные, полученные из ЦОД (или из другого внешнего источника)
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)

        ///<summary>
        /// Ключ запроса, для последующей обработки, если запрос асинхронный.
        /// При запросе сведений о машинах пишется УН запроса в ЦОД, затем по этому запросу загружается ответ.
        ///</summary>
        public string SmevKey { get; set; } // SMEV_KEY (length: 512)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SMEV_REQ].([ReqTypeId]) (FK_SMEV_REQ_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SMEV_REQ_REQ_TYPE
    }

    // SMEV_RESPONSE
    ///<summary>
    /// Ответы от СМЭВ, результаты подготовки отложенных запросов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevResponse
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int SmevResponseId { get; set; } // SMEV_RESPONSE_ID (Primary key)

        ///<summary>
        /// Дата создания записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// УН типа запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Результат выполнения команды на загрузку / подготовку ответа
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Данные
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)

        ///<summary>
        /// УН запроса на сервере поставщика информации
        ///</summary>
        public string SmevKey { get; set; } // SMEV_KEY (length: 512)

        ///<summary>
        /// Локальный ключ. EventID на сайте Росреестра
        ///</summary>
        public string FileName { get; set; } // FILE_NAME (length: 512)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SMEV_RESPONSE].([ReqTypeId]) (FK_SMEV_RESPONSE_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SMEV_RESPONSE_REQ_TYPE

        public SmevResponse()
        {
            D85 = System.DateTime.Now;
        }
    }

    // SobytieOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SobytieOtdel
    {
        public int IdSobytieSystem { get; set; } // IdSobytieSystem (Primary key)
        public string DescriptionSobytie { get; set; } // DescriptionSobytie (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdSobytieSystem] point to this entity (FK_ServiceWcfCommand_SobytieOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_SobytieOtdel

        public SobytieOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // SOCRBASE
    ///<summary>
    /// Тип адресного объекта
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Socrbase
    {

        ///<summary>
        /// Ключевое поле
        ///</summary>
        public string KodTSt { get; set; } // KOD_T_ST (Primary key) (length: 4)

        ///<summary>
        /// Уровень адресного объекта
        ///</summary>
        public int SocrbaseLevel { get; set; } // SOCRBASE_LEVEL

        ///<summary>
        /// Краткое наименование типа объекта
        ///</summary>
        public string Scname { get; set; } // SCNAME (length: 10)

        ///<summary>
        /// Полное наименование типа объекта
        ///</summary>
        public string Socrname { get; set; } // SOCRNAME (length: 50)
    }

    // StatusAnaliz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusAnaliz
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessageAnaliz { get; set; } // MessageAnaliz (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Deloes where [Delo].[Status1Analiz] point to this entity (FK_Delo_StatusAnaliz)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Delo> Deloes { get; set; } // Delo.FK_Delo_StatusAnaliz

        public StatusAnaliz()
        {
            Deloes = new System.Collections.Generic.List<Delo>();
        }
    }

    // StatusPriem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusPriem
    {
        public int Id { get; set; } // Id
        public byte Priznak { get; set; } // Priznak (Primary key)
        public string MessagePriem { get; set; } // MessagePriem (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Deloes where [Delo].[Status1Priem] point to this entity (FK_Delo_StatusPriem)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Delo> Deloes { get; set; } // Delo.FK_Delo_StatusPriem

        public StatusPriem()
        {
            Deloes = new System.Collections.Generic.List<Delo>();
        }
    }

    // StatusTrebOnIcass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusTrebOnIcass
    {
        public int IdStatus { get; set; } // IdStatus (Primary key)
        public string StatusText { get; set; } // StatusText (length: 128)

        // Reverse navigation

        /// <summary>
        /// Child AhalisBdks where [AhalisBdk].[idanalis] point to this entity (FK_AhalisBdk_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AhalisBdk> AhalisBdks_Idanalis { get; set; } // AhalisBdk.FK_AhalisBdk_StatusTrebOnIcass
        /// <summary>
        /// Child AhalisBdks where [AhalisBdk].[idok] point to this entity (FK_AhalisBdk1_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AhalisBdk> AhalisBdks_Idok { get; set; } // AhalisBdk.FK_AhalisBdk1_StatusTrebOnIcass
        /// <summary>
        /// Child DocumentReglaments where [DocumentReglament].[Status1] point to this entity (FK_DocumentReglament_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DocumentReglament> DocumentReglaments_Status1 { get; set; } // DocumentReglament.FK_DocumentReglament_StatusTrebOnIcass
        /// <summary>
        /// Child DocumentReglaments where [DocumentReglament].[Status2] point to this entity (FK_DocumentReglament_StatusTrebOnIcass_2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<DocumentReglament> DocumentReglaments_Status2 { get; set; } // DocumentReglament.FK_DocumentReglament_StatusTrebOnIcass_2
        /// <summary>
        /// Child TableSysNumReshens where [TableSysNumReshen].[IdStatus_1] point to this entity (FK_TableSysNumReshen_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TableSysNumReshen> TableSysNumReshens_IdStatus1 { get; set; } // TableSysNumReshen.FK_TableSysNumReshen_StatusTrebOnIcass
        /// <summary>
        /// Child TableSysNumReshens where [TableSysNumReshen].[IdStatus_2] point to this entity (FK_TableSysNumReshen_StatusTrebOnIcass_2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TableSysNumReshen> TableSysNumReshens_IdStatus2 { get; set; } // TableSysNumReshen.FK_TableSysNumReshen_StatusTrebOnIcass_2

        public StatusTrebOnIcass()
        {
            AhalisBdks_Idanalis = new System.Collections.Generic.List<AhalisBdk>();
            AhalisBdks_Idok = new System.Collections.Generic.List<AhalisBdk>();
            DocumentReglaments_Status1 = new System.Collections.Generic.List<DocumentReglament>();
            DocumentReglaments_Status2 = new System.Collections.Generic.List<DocumentReglament>();
            TableSysNumReshens_IdStatus1 = new System.Collections.Generic.List<TableSysNumReshen>();
            TableSysNumReshens_IdStatus2 = new System.Collections.Generic.List<TableSysNumReshen>();
        }
    }

    // STEAD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Stead
    {

        ///<summary>
        /// Уникальный идентификатор записи. Ключевое поле.
        ///</summary>
        public System.Guid Steadid { get; set; } // STEADID (Primary key)

        ///<summary>
        /// Глобальный уникальный идентификатор адресного объекта (земельного участка)
        ///</summary>
        public System.Guid Steadguid { get; set; } // STEADGUID

        ///<summary>
        /// Номер земельного участка
        ///</summary>
        public string Number { get; set; } // NUMBER (length: 1024)

        ///<summary>
        /// Код региона
        ///</summary>
        public string Regioncode { get; set; } // REGIONCODE (length: 2)

        ///<summary>
        /// Почтовый индекс
        ///</summary>
        public string Postalcode { get; set; } // POSTALCODE (length: 6)

        ///<summary>
        /// Код ИФНС ФЛ
        ///</summary>
        public string Ifnsfl { get; set; } // IFNSFL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ФЛ
        ///</summary>
        public string Terrifnsfl { get; set; } // TERRIFNSFL (length: 4)

        ///<summary>
        /// Код ИФНС ЮЛ
        ///</summary>
        public string Ifnsul { get; set; } // IFNSUL (length: 4)

        ///<summary>
        /// Код территориального участка ИФНС ЮЛ
        ///</summary>
        public string Terrifnsul { get; set; } // TERRIFNSUL (length: 4)

        ///<summary>
        /// OKATO
        ///</summary>
        public string Okato { get; set; } // OKATO (length: 11)

        ///<summary>
        /// OKTMO
        ///</summary>
        public string Oktmo { get; set; } // OKTMO (length: 11)

        ///<summary>
        /// Дата  внесения записи
        ///</summary>
        public System.DateTime Updatedate { get; set; } // UPDATEDATE

        ///<summary>
        /// Идентификатор объекта родительского объекта
        ///</summary>
        public System.Guid? Parentguid { get; set; } // PARENTGUID

        ///<summary>
        /// Идентификатор записи связывания с предыдушей исторической записью
        ///</summary>
        public System.Guid? Previd { get; set; } // PREVID

        ///<summary>
        /// Идентификатор записи  связывания с последующей исторической записью
        ///</summary>
        public System.Guid? Nextid { get; set; } // NEXTID

        ///<summary>
        /// Статус действия над записью – причина появления записи (см. описание таблицы OperationStatus):
        /// 01 – Инициация;
        /// 10 – Добавление;
        /// 20 – Изменение;
        /// 21 – Групповое изменение;
        /// 30 – Удаление;
        /// 31 - Удаление вследствие удаления вышестоящего объекта;
        /// 40 – Присоединение адресного объекта (слияние);
        /// 41 – Переподчинение вследствие слияния вышестоящего объекта;
        /// 42 - Прекращение существования вследствие присоединения к другому адресному объекту;
        /// 43 - Создание нового адресного объекта в результате слияния адресных объектов;
        /// 50 – Переподчинение;
        /// 51 – Переподчинение вследствие переподчинения вышестоящего объекта;
        /// 60 – Прекращение существования вследствие дробления;
        /// 61 – Создание нового адресного объекта в результате дробления
        ///</summary>
        public int Operstatus { get; set; } // OPERSTATUS

        ///<summary>
        /// Начало действия записи
        ///</summary>
        public System.DateTime Startdate { get; set; } // STARTDATE

        ///<summary>
        /// Окончание действия записи
        ///</summary>
        public System.DateTime Enddate { get; set; } // ENDDATE

        ///<summary>
        /// Внешний ключ на нормативный документ
        ///</summary>
        public System.Guid? Normdoc { get; set; } // NORMDOC

        ///<summary>
        /// Признак действующего адресного объекта
        ///</summary>
        public int Livestatus { get; set; } // LIVESTATUS

        ///<summary>
        /// Кадастровый номер
        ///</summary>
        public string Cadnum { get; set; } // CADNUM (length: 100)

        ///<summary>
        /// Тип адресации:
        /// 0 - не определено
        /// 1 - муниципальный;
        /// 2 - административно-территориальный
        ///</summary>
        public int Divtype { get; set; } // DIVTYPE
    }

    // Stone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Stone
    {
        public int IdStone { get; set; } // IdStone (Primary key)
        public string Stone1 { get; set; } // Stone1
        public string Stone2 { get; set; } // Stone2
        public string Stone3 { get; set; } // Stone3
        public string Stone4 { get; set; } // Stone4
        public string Stone5 { get; set; } // Stone5
        public string Stone6 { get; set; } // Stone6
        public string Stone7 { get; set; } // Stone7
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdStone] point to this entity (FK_Template_Stone)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Stone

        public Stone()
        {
            DateCreate = System.DateTime.Now;
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // STRSTAT
    ///<summary>
    /// Признак строения
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Strstat
    {

        ///<summary>
        /// Признак строения
        ///</summary>
        public int Strstatid { get; set; } // STRSTATID (Primary key)

        ///<summary>
        /// Наименование
        ///</summary>
        public string Name { get; set; } // NAME (length: 20)

        ///<summary>
        /// Краткое наименование
        ///</summary>
        public string Shortname { get; set; } // SHORTNAME (length: 20)
    }

    // The table 'TableInfoDelo' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // TableInfoDelo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TableInfoDelo
    {
        public string IdDelo { get; set; } // IdDelo (length: 255)
        public int? Id { get; set; } // Id
        public int? Id2 { get; set; } // Id2
        public string Cmd { get; set; } // Cmd (length: 64)
    }

    // TableSysNumReshen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TableSysNumReshen
    {
        public int D270 { get; set; } // D270 (Primary key)
        public int? IdStatus1 { get; set; } // IdStatus_1
        public string ErrorReshenie { get; set; } // ErrorReshenie
        public System.DateTime? DateBlokReshenie { get; set; } // DateBlokReshenie
        public int? IdStatus2 { get; set; } // IdStatus_2
        public string ErrorIncass { get; set; } // ErrorIncass
        public System.DateTime? DateBlokIncass { get; set; } // DateBlokIncass
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) TableSysNumReshen pointed by [Reshenie].[D270] (FK_Reshenie_TableSysNumReshen)
        /// </summary>
        public virtual Reshenie Reshenie { get; set; } // Reshenie.FK_Reshenie_TableSysNumReshen

        // Foreign keys

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [TableSysNumReshen].([IdStatus1]) (FK_TableSysNumReshen_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_IdStatus1 { get; set; } // FK_TableSysNumReshen_StatusTrebOnIcass

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [TableSysNumReshen].([IdStatus2]) (FK_TableSysNumReshen_StatusTrebOnIcass_2)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_IdStatus2 { get; set; } // FK_TableSysNumReshen_StatusTrebOnIcass_2
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Template
    {
        public int IdTemplate { get; set; } // IdTemplate (Primary key)
        public int IdHeaders { get; set; } // IdHeaders
        public int IdBody { get; set; } // IdBody
        public int IdStone { get; set; } // IdStone
        public System.DateTime? DateCreateTemplate { get; set; } // DateCreateTemplate

        // Reverse navigation

        /// <summary>
        /// Child NameDocuments where [NameDocument].[IdTemplate] point to this entity (FK_NameDocument_Template)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NameDocument> NameDocuments { get; set; } // NameDocument.FK_NameDocument_Template

        // Foreign keys

        /// <summary>
        /// Parent Body pointed by [Template].([IdBody]) (FK_Template_Body)
        /// </summary>
        public virtual Body Body { get; set; } // FK_Template_Body

        /// <summary>
        /// Parent Header pointed by [Template].([IdHeaders]) (FK_Template_Headers)
        /// </summary>
        public virtual Header Header { get; set; } // FK_Template_Headers

        /// <summary>
        /// Parent Stone pointed by [Template].([IdStone]) (FK_Template_Stone)
        /// </summary>
        public virtual Stone Stone { get; set; } // FK_Template_Stone

        public Template()
        {
            DateCreateTemplate = System.DateTime.Now;
            NameDocuments = new System.Collections.Generic.List<NameDocument>();
        }
    }

    // UseTableTemplateBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UseTableTemplateBdk
    {
        public int Id { get; set; } // Id (Primary key)
        public System.Guid Numerdocument { get; set; } // Numerdocument (Primary key)
        public string N279 { get; set; } // N279 (length: 4)
        public string N280 { get; set; } // N280 (length: 256)
        public System.DateTime? D85 { get; set; } // D85
        public string D981 { get; set; } // D981 (length: 128)
        public System.Guid? Guid { get; set; } // GUID

    }

    // VidDelaException
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VidDelaException
    {
        public int Id { get; set; } // id (Primary key)
        public int? Vid { get; set; } // vid
    }

    // WHD_DECL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdDecl
    {
        public int Id { get; set; } // ID (Primary key)
        public int D80 { get; set; } // D80
        public int D270 { get; set; } // D270
        public string N279 { get; set; } // N279 (length: 50)
        public string RisksN134 { get; set; } // RisksN134 (length: 12)
    }

    // WHD_FN212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdFn212
    {
        public int Id { get; set; } // ID (Primary key)
        public string N134 { get; set; } // N134 (length: 12)
        public string N18 { get; set; } // N18 (length: 160)
    }

    // WHD_GAUGE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdGauge
    {
        public int Id { get; set; } // ID (Primary key)
        public int? Parentid { get; set; } // PARENTID
        public string Code { get; set; } // CODE (length: 64)
        public string Title { get; set; } // TITLE (length: 256)
    }

    // WHD_VNP
    ///<summary>
    /// Выездные налоговые проверки - документы из базы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdVnp
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// ИНН проверяемого лица
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// УН инспекции с документом о ВНП
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// УН документа ВНП
        ///</summary>
        public int N8491 { get; set; } // N849__1

        ///<summary>
        /// Номер документа ВНП
        ///</summary>
        public string N8496 { get; set; } // N849__6 (length: 25)

        ///<summary>
        /// Дата документа ВНП
        ///</summary>
        public System.DateTime? N8495 { get; set; } // N849__5

        ///<summary>
        /// Начало проверяемого периода
        ///</summary>
        public System.DateTime? N84910 { get; set; } // N849__10

        ///<summary>
        /// Окончание проверяемого периода
        ///</summary>
        public System.DateTime? N84911 { get; set; } // N849__11
    }

    // WHF_ACCREQ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfAccreq
    {
        public int Id { get; set; } // ID (Primary key)
        public int D80 { get; set; } // D80
        public string N279 { get; set; } // N279 (length: 4)
        public int D270 { get; set; } // D270
        public System.DateTime D40 { get; set; } // D40
        public System.DateTime D41 { get; set; } // D41
        public int D440 { get; set; } // D440
        public string D38076 { get; set; } // D3807_6 (length: 4)
        public string N89 { get; set; } // N89 (length: 30)
        public string N134 { get; set; } // N134 (length: 12)
        public bool Er { get; set; } // ER
        public string N111 { get; set; } // N111 (length: 9)
        public string Bankn134 { get; set; } // BANKN134 (length: 12)
    }

    // WHF_GAPS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfGap
    {
        public int Id { get; set; } // ID (Primary key)
        public int D80 { get; set; } // D80
        public int GaugeId { get; set; } // GAUGE_ID
        public string N89 { get; set; } // N89 (length: 20)
        public string N134 { get; set; } // N134 (length: 12)
        public System.DateTime D40 { get; set; } // d40
        public System.DateTime D41 { get; set; } // d41
    }

    // WHF_VAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfVat
    {
        public int Id { get; set; } // ID (Primary key)
        public int D80 { get; set; } // D80
        public string N134 { get; set; } // N134 (length: 12)
        public int Declid { get; set; } // DECLID
        public int Gaugeid { get; set; } // GAUGEID
        public decimal Amount { get; set; } // AMOUNT
    }

    // WHT_OPERATIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhtOperation
    {
        public int Id { get; set; } // id (Primary key)
        public string RisksN134 { get; set; } // RisksN134 (length: 12)
        public int D80 { get; set; } // D80
        public int D40541 { get; set; } // D4054_1
        public int? D2702 { get; set; } // D270_2
        public int? D2701 { get; set; } // D270_1
        public string N105 { get; set; } // N105 (length: 160)
        public string N111 { get; set; } // N111 (length: 9)
        public System.DateTime? D883 { get; set; } // D88_3
        public System.DateTime? D884 { get; set; } // D88_4
        public string N89 { get; set; } // N89 (length: 30)
        public int? D250 { get; set; } // D250
        public System.DateTime? D882 { get; set; } // d88_2
        public string R096 { get; set; } // R096 (length: 30)
        public string R097 { get; set; } // R097 (length: 30)
        public string N1232 { get; set; } // N123_2 (length: 3)
        public decimal? D832 { get; set; } // D83_2
        public decimal? D833 { get; set; } // D83_3
        public string N134 { get; set; } // N134 (length: 12)
        public string R099 { get; set; } // R099 (length: 500)
        public string R105 { get; set; } // R105 (length: 2500)

        ///<summary>
        /// Корсчет корреспондента
        ///</summary>
        public string R098 { get; set; } // R098 (length: 50)

        ///<summary>
        /// Документ-основание для операции - шифр
        ///</summary>
        public string D4232 { get; set; } // D4232 (length: 2)
    }

    // WHT_THRESHOLDS
    ///<summary>
    /// Разброс организаций по оборотам (средние, крупные)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhtThreshold
    {
        public int Id { get; set; } // ID (Primary key)
        public string Title { get; set; } // TITLE (length: 100)
        public decimal MinValue { get; set; } // MinValue
        public decimal MaxValue { get; set; } // MaxValue
    }

    // WordDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WordDocument
    {
        public int Id { get; set; } // Id (Primary key)
        public System.Guid Numerdocument { get; set; } // Numerdocument
        public int IdNamedocument { get; set; } // IdNamedocument
        public string Namefile { get; set; } // Namefile (length: 128)
        public byte[] Document { get; set; } // Document (length: 2147483647)
        public string TypeFile { get; set; } // TypeFile (length: 5)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent NameDocument pointed by [WordDocument].([IdNamedocument]) (FK_WordDocument_NameDocument)
        /// </summary>
        public virtual NameDocument NameDocument { get; set; } // FK_WordDocument_NameDocument
    }

    // XLCOLOR
    ///<summary>
    /// Цвета в XL - сортировка
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Xlcolor
    {

        ///<summary>
        /// ARGB-палитра
        ///</summary>
        public int Argb { get; set; } // ARGB (Primary key)

        ///<summary>
        /// Порядок сортировки - приоритеты
        ///</summary>
        public int Priority { get; set; } // PRIORITY
        public string Comment { get; set; } // COMMENT (length: 250)
    }

    // XL_REPORT
    ///<summary>
    /// Отчеты в Excel для дальнейшей обработки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReport
    {

        ///<summary>
        /// УН отчета
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название отчета
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1500)

        ///<summary>
        /// Дата формирования отчета
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Файл с отчетом
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)
        public int RiskMimeId { get; set; } // RISK_MIME_ID

        ///<summary>
        /// Время жизни отчета в днях. По истечение времени жизни отчет удаляется из базы техпроцессом.
        ///</summary>
        public int Ttl { get; set; } // TTL

        // Reverse navigation

        /// <summary>
        /// Child XlReportAcls where [XL_REPORT_ACL].[XL_REPORT_ID] point to this entity (FK_XL_REPORT_ACL_XL_REPORT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL.FK_XL_REPORT_ACL_XL_REPORT

        // Foreign keys

        /// <summary>
        /// Parent RiskMime pointed by [XL_REPORT].([RiskMimeId]) (FK_XL_REPORT_RISK_MIME)
        /// </summary>
        public virtual RiskMime RiskMime { get; set; } // FK_XL_REPORT_RISK_MIME

        public XlReport()
        {
            D85 = System.DateTime.Now;
            Ttl = 5;
            XlReportAcls = new System.Collections.Generic.List<XlReportAcl>();
        }
    }

    // XL_REPORT_ACL
    ///<summary>
    /// Разрешения на доступ к отчету
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportAcl
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН отчета
        ///</summary>
        public int XlReportId { get; set; } // XL_REPORT_ID

        ///<summary>
        /// УН доступа
        ///</summary>
        public int ReportFilterId { get; set; } // REPORT_FILTER_ID

        ///<summary>
        /// Значение списка разрешений. Например, УН группы, если разрешения на группу.
        ///</summary>
        public int Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent ReportFilter pointed by [XL_REPORT_ACL].([ReportFilterId]) (FK_XL_REPORT_ACL_REPORT_FILTER)
        /// </summary>
        public virtual ReportFilter ReportFilter { get; set; } // FK_XL_REPORT_ACL_REPORT_FILTER

        /// <summary>
        /// Parent XlReport pointed by [XL_REPORT_ACL].([XlReportId]) (FK_XL_REPORT_ACL_XL_REPORT)
        /// </summary>
        public virtual XlReport XlReport { get; set; } // FK_XL_REPORT_ACL_XL_REPORT
    }

    // XML_PARAMS
    ///<summary>
    /// Хранение XML-файлов с конфигами.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XmlParam
    {

        ///<summary>
        /// УН параметра
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код параметра
        ///</summary>
        public string Code { get; set; } // CODE (length: 25)

        ///<summary>
        /// Данные для параметра
        ///</summary>
        public string Data { get; set; } // DATA

        ///<summary>
        /// Описание параметра
        ///</summary>
        public string Title { get; set; } // TITLE (length: 150)
    }

    #endregion

    #region POCO Configuration

    // ACTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Actstat>
    {
        public ActstatConfiguration()
            : this("dbo")
        {
        }

        public ActstatConfiguration(string schema)
        {
            ToTable("ACTSTAT", schema);
            HasKey(x => x.Actstatid);

            Property(x => x.Actstatid).HasColumnName(@"ACTSTATID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AddrobjConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Addrobj>
    {
        public AddrobjConfiguration()
            : this("dbo")
        {
        }

        public AddrobjConfiguration(string schema)
        {
            ToTable("ADDROBJ", schema);
            HasKey(x => x.Aoid);

            Property(x => x.Aoid).HasColumnName(@"AOID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Aoguid).HasColumnName(@"AOGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Formalname).HasColumnName(@"FORMALNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(120);
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Autocode).HasColumnName(@"AUTOCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Areacode).HasColumnName(@"AREACODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Citycode).HasColumnName(@"CITYCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Ctarcode).HasColumnName(@"CTARCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Placecode).HasColumnName(@"PLACECODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Streetcode).HasColumnName(@"STREETCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Extrcode).HasColumnName(@"EXTRCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Sextcode).HasColumnName(@"SEXTCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Offname).HasColumnName(@"OFFNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(120);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Aolevel).HasColumnName(@"AOLEVEL").HasColumnType("int").IsRequired();
            Property(x => x.Parentguid).HasColumnName(@"PARENTGUID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(17);
            Property(x => x.Plaincode).HasColumnName(@"PLAINCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Actstatid).HasColumnName(@"ACTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Centerstid).HasColumnName(@"CENTERSTID").HasColumnType("int").IsRequired();
            Property(x => x.Operstatid).HasColumnName(@"OPERSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("bit").IsRequired();
            Property(x => x.Plancode).HasColumnName(@"PLANCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.Actstat).WithMany(b => b.Addrobjs).HasForeignKey(c => c.Actstatid).WillCascadeOnDelete(false); // FK_ADDROBJ_ACTSTAT
            HasRequired(a => a.Centerst).WithMany(b => b.Addrobjs).HasForeignKey(c => c.Centerstid).WillCascadeOnDelete(false); // FK_ADDROBJ_centerst
        }
    }

    // AhalisBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AhalisBdkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AhalisBdk>
    {
        public AhalisBdkConfiguration()
            : this("dbo")
        {
        }

        public AhalisBdkConfiguration(string schema)
        {
            ToTable("AhalisBdk", schema);
            HasKey(x => x.Idtable);

            Property(x => x.Idtable).HasColumnName(@"Idtable").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DbName1).HasColumnName(@"DbName_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VerConteiner1).HasColumnName(@"VerConteiner_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Rus1).HasColumnName(@"RUS_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.N2791).HasColumnName(@"N279_1").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.D27021).HasColumnName(@"D2702_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Viddela1).HasColumnName(@"Viddela_1").HasColumnType("int").IsOptional();
            Property(x => x.D3970).HasColumnName(@"D3970").HasColumnType("int").IsOptional();
            Property(x => x.D09).HasColumnName(@"D09").HasColumnType("tinyint").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N2792).HasColumnName(@"N279_2").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Idanalis).HasColumnName(@"idanalis").HasColumnType("int").IsOptional();
            Property(x => x.MessageError).HasColumnName(@"MessageError").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataError).HasColumnName(@"DataError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Idok).HasColumnName(@"idok").HasColumnType("int").IsOptional();
            Property(x => x.MessageOk).HasColumnName(@"MessageOk").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataOk).HasColumnName(@"DataOk").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NumDelo).HasColumnName(@"NumDelo").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusTrebOnIcass_Idanalis).WithMany(b => b.AhalisBdks_Idanalis).HasForeignKey(c => c.Idanalis).WillCascadeOnDelete(false); // FK_AhalisBdk_StatusTrebOnIcass
            HasOptional(a => a.StatusTrebOnIcass_Idok).WithMany(b => b.AhalisBdks_Idok).HasForeignKey(c => c.Idok).WillCascadeOnDelete(false); // FK_AhalisBdk1_StatusTrebOnIcass
        }
    }

    // AIS_HD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisHdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisHd>
    {
        public AisHdConfiguration()
            : this("dbo")
        {
        }

        public AisHdConfiguration(string schema)
        {
            ToTable("AIS_HD", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProcessId).HasColumnName(@"PROCESS_ID").HasColumnType("int").IsRequired();
            Property(x => x.Kv).HasColumnName(@"KV").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("xml").IsOptional();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ReqType).WithMany(b => b.AisHds).HasForeignKey(c => c.ReqTypeId); // FK_AIS_HD_REQ_TYPE
            HasRequired(a => a.AisProcess).WithMany(b => b.AisHds).HasForeignKey(c => c.ProcessId); // FK_AIS_HD_AIS_PROCESS_LOG
        }
    }

    // AIS_PROCESS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisProcessConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisProcess>
    {
        public AisProcessConfiguration()
            : this("dbo")
        {
        }

        public AisProcessConfiguration(string schema)
        {
            ToTable("AIS_PROCESS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Process).HasColumnName(@"PROCESS").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
        }
    }

    // AIS_PROCESS_LOG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisProcessLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisProcessLog>
    {
        public AisProcessLogConfiguration()
            : this("dbo")
        {
        }

        public AisProcessLogConfiguration(string schema)
        {
            ToTable("AIS_PROCESS_LOG", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProcessId).HasColumnName(@"PROCESS_ID").HasColumnType("int").IsRequired();
            Property(x => x.HandlerId).HasColumnName(@"HANDLER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Errmsg).HasColumnName(@"ERRMSG").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.D86).HasColumnName(@"D86").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.AisProcess).WithMany(b => b.AisProcessLogs).HasForeignKey(c => c.ProcessId); // FK_AIS_PROCESS_LOG_AIS_PROCESS
            HasRequired(a => a.ReqType).WithMany(b => b.AisProcessLogs).HasForeignKey(c => c.HandlerId); // FK_AIS_PROCESS_LOG_REQ_TYPE
        }
    }

    // AIS_REQUEST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisRequestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisRequest>
    {
        public AisRequestConfiguration()
            : this("dbo")
        {
        }

        public AisRequestConfiguration(string schema)
        {
            ToTable("AIS_REQUEST", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(900);
        }
    }

    // AIS_RULES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AisRuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AisRule>
    {
        public AisRuleConfiguration()
            : this("dbo")
        {
        }

        public AisRuleConfiguration(string schema)
        {
            ToTable("AIS_RULES", schema);
            HasKey(x => x.ReqTypeId);

            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReqRule).HasColumnName(@"REQ_RULE").HasColumnType("xml").IsRequired();
            Property(x => x.Ord).HasColumnName(@"ORD").HasColumnType("int").IsRequired();
            Property(x => x.Branch).HasColumnName(@"BRANCH").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.ReqType).WithOptional(b => b.AisRule); // FK_HND_RULES_REQ_TYPE
        }
    }

    // AnalizNO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AnalizNoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AnalizNo>
    {
        public AnalizNoConfiguration()
            : this("dbo")
        {
        }

        public AnalizNoConfiguration(string schema)
        {
            ToTable("AnalizNO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3979).HasColumnName(@"D3979").HasColumnType("int").IsRequired();
            Property(x => x.D3972).HasColumnName(@"D3972").HasColumnType("int").IsRequired();
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("tinyint").IsRequired();
            Property(x => x.DateAnaliz).HasColumnName(@"DateAnaliz").HasColumnType("tinyint").IsOptional();
            Property(x => x.StrahovieAndOtkazAnaliz).HasColumnName(@"StrahovieAndOtkazAnaliz").HasColumnType("tinyint").IsOptional();
            Property(x => x.StatusUhAnaliz).HasColumnName(@"StatusUhAnaliz").HasColumnType("tinyint").IsOptional();
            Property(x => x.Vivod).HasColumnName(@"Vivod").HasColumnType("tinyint").IsOptional();
            Property(x => x.D6).HasColumnName(@"D6").HasColumnType("int").IsOptional();
            Property(x => x.D15602).HasColumnName(@"D1560_2").HasColumnType("int").IsRequired();
            Property(x => x.D15601).HasColumnName(@"D1560_1").HasColumnType("int").IsOptional();
            Property(x => x.DatePeredachi).HasColumnName(@"DatePeredachi").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateZakritia).HasColumnName(@"DateZakritia").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.OktmoOld).HasColumnName(@"OKTMO_old").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.D093).HasColumnName(@"D09_3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.N11).HasColumnName(@"N1_1").HasColumnType("int").IsOptional();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.OktmoNew).HasColumnName(@"OKTMO_new").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Error).HasColumnName(@"Error").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateError).HasColumnName(@"DateError").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.MessageDate).WithMany(b => b.AnalizNoes).HasForeignKey(c => c.DateAnaliz).WillCascadeOnDelete(false); // FK_AnalizNO_MessageDate
            HasOptional(a => a.MessageStatusUh).WithMany(b => b.AnalizNoes).HasForeignKey(c => c.StatusUhAnaliz).WillCascadeOnDelete(false); // FK_AnalizNO_MessageStatusUh
            HasOptional(a => a.MessageStrahovieAndOtkaz).WithMany(b => b.AnalizNoes).HasForeignKey(c => c.StrahovieAndOtkazAnaliz).WillCascadeOnDelete(false); // FK_AnalizNO_MessageStrahovieAndOtkaz
            HasOptional(a => a.MessageVivod).WithMany(b => b.AnalizNoes).HasForeignKey(c => c.Vivod).WillCascadeOnDelete(false); // FK_AnalizNO_MessageVivod
            HasRequired(a => a.Delo).WithMany(b => b.AnalizNoes).HasForeignKey(c => c.D3979); // FK_AnalizNO_Delo
        }
    }

    // AS_ACTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsActstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsActstat>
    {
        public AsActstatConfiguration()
            : this("dbo")
        {
        }

        public AsActstatConfiguration(string schema)
        {
            ToTable("AS_ACTSTAT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Actstatid).HasColumnName(@"ACTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // AS_ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsAddrobjConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsAddrobj>
    {
        public AsAddrobjConfiguration()
            : this("dbo")
        {
        }

        public AsAddrobjConfiguration(string schema)
        {
            ToTable("AS_ADDROBJ", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Aoid).HasColumnName(@"AOID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Aoguid).HasColumnName(@"AOGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Formalname).HasColumnName(@"FORMALNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(120);
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Autocode).HasColumnName(@"AUTOCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Areacode).HasColumnName(@"AREACODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Citycode).HasColumnName(@"CITYCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Ctarcode).HasColumnName(@"CTARCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Placecode).HasColumnName(@"PLACECODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Streetcode).HasColumnName(@"STREETCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Extrcode).HasColumnName(@"EXTRCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Sextcode).HasColumnName(@"SEXTCODE").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Offname).HasColumnName(@"OFFNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(120);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Aolevel).HasColumnName(@"AOLEVEL").HasColumnType("int").IsRequired();
            Property(x => x.Parentguid).HasColumnName(@"PARENTGUID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(17);
            Property(x => x.Plaincode).HasColumnName(@"PLAINCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Actstatid).HasColumnName(@"ACTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Centerstid).HasColumnName(@"CENTERSTID").HasColumnType("int").IsRequired();
            Property(x => x.Operstatid).HasColumnName(@"OPERSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("bit").IsRequired();
            Property(x => x.Plancode).HasColumnName(@"PLANCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsOptional();
        }
    }

    // AS_CENTERST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsCenterstConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsCenterst>
    {
        public AsCenterstConfiguration()
            : this("dbo")
        {
        }

        public AsCenterstConfiguration(string schema)
        {
            ToTable("AS_CENTERST", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Centerstid).HasColumnName(@"CENTERSTID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // AS_CURENTST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsCurentstConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsCurentst>
    {
        public AsCurentstConfiguration()
            : this("dbo")
        {
        }

        public AsCurentstConfiguration(string schema)
        {
            ToTable("AS_CURENTST", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Curentstid).HasColumnName(@"CURENTSTID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // AS_DEL_ADDROBJ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelAddrobjConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsDelAddrobj>
    {
        public AsDelAddrobjConfiguration()
            : this("dbo")
        {
        }

        public AsDelAddrobjConfiguration(string schema)
        {
            ToTable("AS_DEL_ADDROBJ", schema);
            HasKey(x => x.Aoid);

            Property(x => x.Aoid).HasColumnName(@"AOID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AS_DEL_HOUSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelHouseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsDelHouse>
    {
        public AsDelHouseConfiguration()
            : this("dbo")
        {
        }

        public AsDelHouseConfiguration(string schema)
        {
            ToTable("AS_DEL_HOUSE", schema);
            HasKey(x => x.Houseid);

            Property(x => x.Houseid).HasColumnName(@"HOUSEID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AS_DEL_HOUSEINT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelHouseintConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsDelHouseint>
    {
        public AsDelHouseintConfiguration()
            : this("dbo")
        {
        }

        public AsDelHouseintConfiguration(string schema)
        {
            ToTable("AS_DEL_HOUSEINT", schema);
            HasKey(x => x.Houseintid);

            Property(x => x.Houseintid).HasColumnName(@"HOUSEINTID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AS_DEL_LANDMARK
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelLandmarkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsDelLandmark>
    {
        public AsDelLandmarkConfiguration()
            : this("dbo")
        {
        }

        public AsDelLandmarkConfiguration(string schema)
        {
            ToTable("AS_DEL_LANDMARK", schema);
            HasKey(x => x.Landid);

            Property(x => x.Landid).HasColumnName(@"LANDID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AS_DEL_NORMDOC
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsDelNormdocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsDelNormdoc>
    {
        public AsDelNormdocConfiguration()
            : this("dbo")
        {
        }

        public AsDelNormdocConfiguration(string schema)
        {
            ToTable("AS_DEL_NORMDOC", schema);
            HasKey(x => x.Normdocid);

            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AS_ESTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsEststatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsEststat>
    {
        public AsEststatConfiguration()
            : this("dbo")
        {
        }

        public AsEststatConfiguration(string schema)
        {
            ToTable("AS_ESTSTAT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Eststatid).HasColumnName(@"ESTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // AS_FLATTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsFlattypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsFlattype>
    {
        public AsFlattypeConfiguration()
            : this("dbo")
        {
        }

        public AsFlattypeConfiguration(string schema)
        {
            ToTable("AS_FLATTYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Fltypeid).HasColumnName(@"FLTYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // AS_HOUSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsHouseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsHouse>
    {
        public AsHouseConfiguration()
            : this("dbo")
        {
        }

        public AsHouseConfiguration(string schema)
        {
            ToTable("AS_HOUSE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Houseid).HasColumnName(@"HOUSEID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Houseguid).HasColumnName(@"HOUSEGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Aoguid).HasColumnName(@"AOGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Housenum).HasColumnName(@"HOUSENUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Eststatid).HasColumnName(@"ESTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Buildnum).HasColumnName(@"BUILDNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Strucnum).HasColumnName(@"STRUCNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Strstatid).HasColumnName(@"STRSTATID").HasColumnType("int").IsOptional();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Housestid).HasColumnName(@"HOUSESTID").HasColumnType("int").IsRequired();
            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Counter).HasColumnName(@"COUNTER").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsOptional();
        }
    }

    // AS_HSTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsHststatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsHststat>
    {
        public AsHststatConfiguration()
            : this("dbo")
        {
        }

        public AsHststatConfiguration(string schema)
        {
            ToTable("AS_HSTSTAT", schema);
            HasKey(x => x.Housestid);

            Property(x => x.Housestid).HasColumnName(@"HOUSESTID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(60);
        }
    }

    // AS_NDOCTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsNdoctypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsNdoctype>
    {
        public AsNdoctypeConfiguration()
            : this("dbo")
        {
        }

        public AsNdoctypeConfiguration(string schema)
        {
            ToTable("AS_NDOCTYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Ndtypeid).HasColumnName(@"NDTYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
        }
    }

    // AS_NORMDOC
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsNormdocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsNormdoc>
    {
        public AsNormdocConfiguration()
            : this("dbo")
        {
        }

        public AsNormdocConfiguration(string schema)
        {
            ToTable("AS_NORMDOC", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Docname).HasColumnName(@"DOCNAME").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.Docdate).HasColumnName(@"DOCDATE").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Docnum).HasColumnName(@"DOCNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Ndtypeid).HasColumnName(@"NDTYPEID").HasColumnType("int").IsOptional();
            Property(x => x.Docimgid).HasColumnName(@"DOCIMGID").HasColumnType("uniqueidentifier").IsOptional();
        }
    }

    // AS_OPERSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsOperstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsOperstat>
    {
        public AsOperstatConfiguration()
            : this("dbo")
        {
        }

        public AsOperstatConfiguration(string schema)
        {
            ToTable("AS_OPERSTAT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Operstatid).HasColumnName(@"OPERSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // AS_ROOM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsRoomConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsRoom>
    {
        public AsRoomConfiguration()
            : this("dbo")
        {
        }

        public AsRoomConfiguration(string schema)
        {
            ToTable("AS_ROOM", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Roomid).HasColumnName(@"ROOMID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Roomguid).HasColumnName(@"ROOMGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Flatnumber).HasColumnName(@"FLATNUMBER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Flattype).HasColumnName(@"FLATTYPE").HasColumnType("int").IsRequired();
            Property(x => x.Roomnumber).HasColumnName(@"ROOMNUMBER").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Roomtype).HasColumnName(@"ROOMTYPE").HasColumnType("int").IsOptional();
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Houseguid).HasColumnName(@"HOUSEGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Normdoc).HasColumnName(@"NORMDOC").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Operstatus).HasColumnName(@"OPERSTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Roomcadnum).HasColumnName(@"ROOMCADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

    // AS_ROOMTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsRoomtypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsRoomtype>
    {
        public AsRoomtypeConfiguration()
            : this("dbo")
        {
        }

        public AsRoomtypeConfiguration(string schema)
        {
            ToTable("AS_ROOMTYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Rmtypeid).HasColumnName(@"RMTYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // AS_SOCRBASE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsSocrbaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsSocrbase>
    {
        public AsSocrbaseConfiguration()
            : this("dbo")
        {
        }

        public AsSocrbaseConfiguration(string schema)
        {
            ToTable("AS_SOCRBASE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.KodTSt).HasColumnName(@"KOD_T_ST").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.SocrbaseLevel).HasColumnName(@"SOCRBASE_LEVEL").HasColumnType("int").IsRequired();
            Property(x => x.Scname).HasColumnName(@"SCNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Socrname).HasColumnName(@"SOCRNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // AS_STEAD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsSteadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsStead>
    {
        public AsSteadConfiguration()
            : this("dbo")
        {
        }

        public AsSteadConfiguration(string schema)
        {
            ToTable("AS_STEAD", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Steadid).HasColumnName(@"STEADID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Steadguid).HasColumnName(@"STEADGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Number).HasColumnName(@"NUMBER").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Parentguid).HasColumnName(@"PARENTGUID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Operstatus).HasColumnName(@"OPERSTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Normdoc).HasColumnName(@"NORMDOC").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsRequired();
        }
    }

    // AS_STRSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsStrstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsStrstat>
    {
        public AsStrstatConfiguration()
            : this("dbo")
        {
        }

        public AsStrstatConfiguration(string schema)
        {
            ToTable("AS_STRSTAT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Strstatid).HasColumnName(@"STRSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // AS_VERSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AsVersionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AsVersion>
    {
        public AsVersionConfiguration()
            : this("dbo")
        {
        }

        public AsVersionConfiguration(string schema)
        {
            ToTable("AS_VERSION", schema);
            HasKey(x => x.AcVersionId);

            Property(x => x.AcVersionId).HasColumnName(@"AC_VERSION_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcDt).HasColumnName(@"AC_DT").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // BANK_ACC_EXCLUSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccExclusionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankAccExclusion>
    {
        public BankAccExclusionConfiguration()
            : this("dbo")
        {
        }

        public BankAccExclusionConfiguration(string schema)
        {
            ToTable("BANK_ACC_EXCLUSION", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
        }
    }

    // BANK_ACC_PLAN
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccPlanConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankAccPlan>
    {
        public BankAccPlanConfiguration()
            : this("dbo")
        {
        }

        public BankAccPlanConfiguration(string schema)
        {
            ToTable("BANK_ACC_PLAN", schema);
            HasKey(x => x.N89);

            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.BankAccExclusionId).HasColumnName(@"BANK_ACC_EXCLUSION_ID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.BankAccExclusion).WithMany(b => b.BankAccPlans).HasForeignKey(c => c.BankAccExclusionId).WillCascadeOnDelete(false); // FK_BANK_ACC_PLAN_BANK_ACC_PLAN
        }
    }

    // BANK_DOCUMENT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankDocument>
    {
        public BankDocumentConfiguration()
            : this("dbo")
        {
        }

        public BankDocumentConfiguration(string schema)
        {
            ToTable("BANK_DOCUMENT", schema);
            HasKey(x => x.D4232);

            Property(x => x.D4232).HasColumnName(@"D4232").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // BANK_OPERATIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankOperationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankOperation>
    {
        public BankOperationConfiguration()
            : this("dbo")
        {
        }

        public BankOperationConfiguration(string schema)
        {
            ToTable("BANK_OPERATIONS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.D832).HasColumnName(@"D83_2").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.D833).HasColumnName(@"D83_3").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.BankOperations).HasForeignKey(c => c.RiskCheckerId); // FK_BANK_OPERATIONS_RISK_CHECKER
        }
    }

    // BNKSEEK
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BnkseekConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Bnkseek>
    {
        public BnkseekConfiguration()
            : this("dbo")
        {
        }

        public BnkseekConfiguration(string schema)
        {
            ToTable("BNKSEEK", schema);
            HasKey(x => x.Vkey);

            Property(x => x.Vkey).HasColumnName(@"VKEY").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Real).HasColumnName(@"REAL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Pzn).HasColumnName(@"PZN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Uer).HasColumnName(@"UER").HasColumnType("smallint").IsOptional();
            Property(x => x.Rgn).HasColumnName(@"RGN").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Ind).HasColumnName(@"IND").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Tnp).HasColumnName(@"TNP").HasColumnType("smallint").IsOptional();
            Property(x => x.Nnp).HasColumnName(@"NNP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.Adr).HasColumnName(@"ADR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Rkc).HasColumnName(@"RKC").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Namep).HasColumnName(@"NAMEP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(45);
            Property(x => x.Namen).HasColumnName(@"NAMEN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Newnum).HasColumnName(@"NEWNUM").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Newks).HasColumnName(@"NEWKS").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Permfo).HasColumnName(@"PERMFO").HasColumnType("int").IsOptional();
            Property(x => x.Srok).HasColumnName(@"SROK").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.At1).HasColumnName(@"AT1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.At2).HasColumnName(@"AT2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7);
            Property(x => x.Telef).HasColumnName(@"TELEF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.Regn).HasColumnName(@"REGN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Okpo).HasColumnName(@"OKPO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(10);
            Property(x => x.DtIzm).HasColumnName(@"DT_IZM").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.P).HasColumnName(@"P").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Cks).HasColumnName(@"CKS").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ksnp).HasColumnName(@"KSNP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Vkeydel).HasColumnName(@"VKEYDEL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Datedel).HasColumnName(@"DATEDEL").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.RClose).HasColumnName(@"R_CLOSE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.DateCh).HasColumnName(@"DATE_CH").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DtIzmr).HasColumnName(@"DT_IZMR").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Body
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BodyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Body>
    {
        public BodyConfiguration()
            : this("dbo")
        {
        }

        public BodyConfiguration(string schema)
        {
            ToTable("Body", schema);
            HasKey(x => x.IdBody);

            Property(x => x.IdBody).HasColumnName(@"IdBody").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BodyGl1).HasColumnName(@"BodyGl1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl2).HasColumnName(@"BodyGl2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl3).HasColumnName(@"BodyGl3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl4).HasColumnName(@"BodyGl4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl5).HasColumnName(@"BodyGl5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CBR_BANKS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrBank>
    {
        public CbrBankConfiguration()
            : this("dbo")
        {
        }

        public CbrBankConfiguration(string schema)
        {
            ToTable("CBR_BANKS", schema);
            HasKey(x => x.D38076);

            Property(x => x.D38076).HasColumnName(@"D3807_6").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InternalCode).HasColumnName(@"INTERNAL_CODE").HasColumnType("numeric").IsRequired().HasPrecision(18,2);
        }
    }

    // CBR_BANK_RELEVANCE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankRelevanceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrBankRelevance>
    {
        public CbrBankRelevanceConfiguration()
            : this("dbo")
        {
        }

        public CbrBankRelevanceConfiguration(string schema)
        {
            ToTable("CBR_BANK_RELEVANCE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Cls).HasColumnName(@"CLS").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D851).HasColumnName(@"D85_1").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // CENTERST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CenterstConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Centerst>
    {
        public CenterstConfiguration()
            : this("dbo")
        {
        }

        public CenterstConfiguration(string schema)
        {
            ToTable("CENTERST", schema);
            HasKey(x => x.Centerstid);

            Property(x => x.Centerstid).HasColumnName(@"CENTERSTID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // CHAIN_REQUEST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainRequestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChainRequest>
    {
        public ChainRequestConfiguration()
            : this("dbo")
        {
        }

        public ChainRequestConfiguration(string schema)
        {
            ToTable("CHAIN_REQUEST", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.HandlerChainId).HasColumnName(@"HANDLER_CHAIN_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Active).HasColumnName(@"ACTIVE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.HandlerChain).WithMany(b => b.ChainRequests).HasForeignKey(c => c.HandlerChainId); // FK_RISK_PATH_REQUEST_RISK_PATH
            HasRequired(a => a.RiskChecker).WithMany(b => b.ChainRequests).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_PATH_REQUEST_RISK_CHECKER
        }
    }

    // CHAIN_REQUEST_HISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainRequestHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChainRequestHistory>
    {
        public ChainRequestHistoryConfiguration()
            : this("dbo")
        {
        }

        public ChainRequestHistoryConfiguration(string schema)
        {
            ToTable("CHAIN_REQUEST_HISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.HandlerChainId).HasColumnName(@"HANDLER_CHAIN_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Active).HasColumnName(@"ACTIVE").HasColumnType("int").IsRequired();
            Property(x => x.Sname).HasColumnName(@"SNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);

            // Foreign keys
            HasRequired(a => a.HandlerChain).WithMany(b => b.ChainRequestHistories).HasForeignKey(c => c.HandlerChainId); // FK_RISK_PATH_REQUEST_HISTORY_RISK_PATH
            HasRequired(a => a.RiskChecker).WithMany(b => b.ChainRequestHistories).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_PATH_REQUEST_HISTORY_RISK_CHECKER
        }
    }

    // CHAIN_TO_HANDLER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ChainToHandlerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ChainToHandler>
    {
        public ChainToHandlerConfiguration()
            : this("dbo")
        {
        }

        public ChainToHandlerConfiguration(string schema)
        {
            ToTable("CHAIN_TO_HANDLER", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.HandlerChainId).HasColumnName(@"HANDLER_CHAIN_ID").HasColumnType("int").IsRequired();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Ord).HasColumnName(@"ORD").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.HandlerChain).WithMany(b => b.ChainToHandlers).HasForeignKey(c => c.HandlerChainId); // FK_PATH_TO_HANDLER_RISK_PATH
            HasRequired(a => a.ReqType).WithMany(b => b.ChainToHandlers).HasForeignKey(c => c.ReqTypeId); // FK_PATH_TO_HANDLER_REQ_TYPE
        }
    }

    // ClassOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClassOtdel>
    {
        public ClassOtdelConfiguration()
            : this("dbo")
        {
        }

        public ClassOtdelConfiguration(string schema)
        {
            ToTable("ClassOtdel", schema);
            HasKey(x => x.IdClass);

            Property(x => x.IdClass).HasColumnName(@"IdClass").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClassLanguage).HasColumnName(@"ClassLanguage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ClassDescription).HasColumnName(@"ClassDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CONFIG_CODE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConfigCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ConfigCode>
    {
        public ConfigCodeConfiguration()
            : this("dbo")
        {
        }

        public ConfigCodeConfiguration(string schema)
        {
            ToTable("CONFIG_CODE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"DESCRIPTION").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Hide).HasColumnName(@"HIDE").HasColumnType("bit").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // CURENTST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CurentstConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Curentst>
    {
        public CurentstConfiguration()
            : this("dbo")
        {
        }

        public CurentstConfiguration(string schema)
        {
            ToTable("CURENTST", schema);
            HasKey(x => x.Curentstid);

            Property(x => x.Curentstid).HasColumnName(@"CURENTSTID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // DB_CONFIG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DbConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DbConfig>
    {
        public DbConfigConfiguration()
            : this("dbo")
        {
        }

        public DbConfigConfiguration(string schema)
        {
            ToTable("DB_CONFIG", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // DECL_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclDatum>
    {
        public DeclDatumConfiguration()
            : this("dbo")
        {
        }

        public DeclDatumConfiguration(string schema)
        {
            ToTable("DECL_DATA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AisHdid).HasColumnName(@"AIS_HDID").HasColumnType("int").IsRequired();
            Property(x => x.DeclRowid).HasColumnName(@"DECL_ROWID").HasColumnType("int").IsRequired();
            Property(x => x.Rno).HasColumnName(@"RNO").HasColumnType("int").IsRequired();
            Property(x => x.Dkind).HasColumnName(@"DKIND").HasColumnType("int").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);

            // Foreign keys
            HasRequired(a => a.AisHd).WithMany(b => b.DeclDatums).HasForeignKey(c => c.AisHdid).WillCascadeOnDelete(false); // FK_DECL_DATA_AIS_HD
            HasRequired(a => a.DeclRow).WithMany(b => b.DeclDatums).HasForeignKey(c => c.DeclRowid).WillCascadeOnDelete(false); // FK_DECL_DATA_DECL_ROW
        }
    }

    // DECL_KND_CODE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclKndCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclKndCode>
    {
        public DeclKndCodeConfiguration()
            : this("dbo")
        {
        }

        public DeclKndCodeConfiguration(string schema)
        {
            ToTable("DECL_KND_CODE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Knd).HasColumnName(@"KND").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // DECL_ROW
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeclRowConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeclRow>
    {
        public DeclRowConfiguration()
            : this("dbo")
        {
        }

        public DeclRowConfiguration(string schema)
        {
            ToTable("DECL_ROW", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.KndCodeId).HasColumnName(@"KND_CODE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.DeclKndCode).WithMany(b => b.DeclRows).HasForeignKey(c => c.KndCodeId); // FK_DECL_ROW_DECL_KND_CODE
        }
    }

    // DelaPriemObu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DelaPriemObuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DelaPriemObu>
    {
        public DelaPriemObuConfiguration()
            : this("dbo")
        {
        }

        public DelaPriemObuConfiguration(string schema)
        {
            ToTable("DelaPriemObu", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdDeloObu).HasColumnName(@"IdDeloObu").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IdMessages).HasColumnName(@"IdMessages").HasColumnType("int").IsOptional();
        }
    }

    // Delo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DeloConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Delo>
    {
        public DeloConfiguration()
            : this("dbo")
        {
        }

        public DeloConfiguration(string schema)
        {
            ToTable("Delo", schema);
            HasKey(x => x.D3979);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3979).HasColumnName(@"D3979").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Status1Priem).HasColumnName(@"Status1Priem").HasColumnType("tinyint").IsOptional();
            Property(x => x.Status1Analiz).HasColumnName(@"Status1Analiz").HasColumnType("tinyint").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusAnaliz).WithMany(b => b.Deloes).HasForeignKey(c => c.Status1Analiz).WillCascadeOnDelete(false); // FK_Delo_StatusAnaliz
            HasOptional(a => a.StatusPriem).WithMany(b => b.Deloes).HasForeignKey(c => c.Status1Priem); // FK_Delo_StatusPriem
        }
    }

    // DocTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocTemplate>
    {
        public DocTemplateConfiguration()
            : this("dbo")
        {
        }

        public DocTemplateConfiguration(string schema)
        {
            ToTable("DocTemplate", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Mesage).HasColumnName(@"Mesage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Templ).HasColumnName(@"Templ").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DocumentDetalization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentDetalizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentDetalization>
    {
        public DocumentDetalizationConfiguration()
            : this("dbo")
        {
        }

        public DocumentDetalizationConfiguration(string schema)
        {
            ToTable("DocumentDetalization", schema);
            HasKey(x => x.N4411);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N4411).HasColumnName(@"N441__1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdProcedure).HasColumnName(@"IdProcedure").HasColumnType("int").IsOptional();
            Property(x => x.N3331).HasColumnName(@"N333__1").HasColumnType("int").IsOptional();
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdGroup).HasColumnName(@"IdGroup").HasColumnType("tinyint").IsOptional();
            Property(x => x.IdDocument).HasColumnName(@"IdDocument").HasColumnType("tinyint").IsOptional();
            Property(x => x.N77).HasColumnName(@"N77").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.N4414).HasColumnName(@"N441__4").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DocumentReglament).WithOptional(b => b.DocumentDetalization).WillCascadeOnDelete(false); // FK_DocumentDetalization_DocumentReglament
        }
    }

    // DocumentReglament
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DocumentReglamentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentReglament>
    {
        public DocumentReglamentConfiguration()
            : this("dbo")
        {
        }

        public DocumentReglamentConfiguration(string schema)
        {
            ToTable("DocumentReglament", schema);
            HasKey(x => x.N4411);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N4411).HasColumnName(@"N441__1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Status1).HasColumnName(@"Status1").HasColumnType("int").IsOptional();
            Property(x => x.MesErSt1).HasColumnName(@"MesErSt1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DSt1).HasColumnName(@"DSt1").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Status2).HasColumnName(@"Status2").HasColumnType("int").IsOptional();
            Property(x => x.MesErSt2).HasColumnName(@"MesErSt2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DSt2).HasColumnName(@"DSt2").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusTrebOnIcass_Status1).WithMany(b => b.DocumentReglaments_Status1).HasForeignKey(c => c.Status1); // FK_DocumentReglament_StatusTrebOnIcass
            HasOptional(a => a.StatusTrebOnIcass_Status2).WithMany(b => b.DocumentReglaments_Status2).HasForeignKey(c => c.Status2).WillCascadeOnDelete(false); // FK_DocumentReglament_StatusTrebOnIcass_2
        }
    }

    // DPL_FILES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DplFileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DplFile>
    {
        public DplFileConfiguration()
            : this("dbo")
        {
        }

        public DplFileConfiguration(string schema)
        {
            ToTable("DPL_FILES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ServerId).HasColumnName(@"SERVER_ID").HasColumnType("int").IsRequired();
            Property(x => x.FilePath).HasColumnName(@"FILE_PATH").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(850);
            Property(x => x.FileSize).HasColumnName(@"FILE_SIZE").HasColumnType("bigint").IsRequired();
            Property(x => x.Ct).HasColumnName(@"CT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Lwt).HasColumnName(@"LWT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Crc).HasColumnName(@"CRC").HasColumnType("int").IsOptional();
            Property(x => x.Md5).HasColumnName(@"MD5").HasColumnType("uniqueidentifier").IsOptional();

            // Foreign keys
            HasRequired(a => a.DplServer).WithMany(b => b.DplFiles).HasForeignKey(c => c.ServerId); // FK_DPL_FILES_DPL_SERVERS
        }
    }

    // DPL_SERVERS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DplServerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DplServer>
    {
        public DplServerConfiguration()
            : this("dbo")
        {
        }

        public DplServerConfiguration(string schema)
        {
            ToTable("DPL_SERVERS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // ESTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EststatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Eststat>
    {
        public EststatConfiguration()
            : this("dbo")
        {
        }

        public EststatConfiguration(string schema)
        {
            ToTable("ESTSTAT", schema);
            HasKey(x => x.Eststatid);

            Property(x => x.Eststatid).HasColumnName(@"ESTSTATID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // Face
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Face>
    {
        public FaceConfiguration()
            : this("dbo")
        {
        }

        public FaceConfiguration(string schema)
        {
            ToTable("Face", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1Old).HasColumnName(@"N1old").HasColumnType("int").IsOptional();
            Property(x => x.N1New).HasColumnName(@"N1new").HasColumnType("int").IsOptional();
            Property(x => x.Messagee).HasColumnName(@"Messagee").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateFace).HasColumnName(@"DateFace").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FIAS_LOAD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasLoadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FiasLoad>
    {
        public FiasLoadConfiguration()
            : this("dbo")
        {
        }

        public FiasLoadConfiguration(string schema)
        {
            ToTable("FIAS_LOAD", schema);
            HasKey(x => x.AcLoadId);

            Property(x => x.AcLoadId).HasColumnName(@"AC_LOAD_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TableTitle).HasColumnName(@"TABLE_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.TableOrder).HasColumnName(@"TABLE_ORDER").HasColumnType("int").IsRequired();
            Property(x => x.MergeType).HasColumnName(@"MERGE_TYPE").HasColumnType("int").IsRequired();
        }
    }

    // FIAS_LOAD_PROGRESS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasLoadProgressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FiasLoadProgress>
    {
        public FiasLoadProgressConfiguration()
            : this("dbo")
        {
        }

        public FiasLoadProgressConfiguration(string schema)
        {
            ToTable("FIAS_LOAD_PROGRESS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Versionid).HasColumnName(@"VERSIONID").HasColumnType("bigint").IsRequired();
            Property(x => x.Tableid).HasColumnName(@"TABLEID").HasColumnType("int").IsRequired();
        }
    }

    // FIAS_VERSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FiasVersionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FiasVersion>
    {
        public FiasVersionConfiguration()
            : this("dbo")
        {
        }

        public FiasVersionConfiguration(string schema)
        {
            ToTable("FIAS_VERSION", schema);
            HasKey(x => x.FiasVersionId);

            Property(x => x.FiasVersionId).HasColumnName(@"FIAS_VERSION_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FiasVersionNum).HasColumnName(@"FIAS_VERSION_NUM").HasColumnType("bigint").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FILE_ICON
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FileIconConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FileIcon>
    {
        public FileIconConfiguration()
            : this("dbo")
        {
        }

        public FileIconConfiguration(string schema)
        {
            ToTable("FILE_ICON", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Extension).HasColumnName(@"EXTENSION").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Img).HasColumnName(@"IMG").HasColumnType("image").IsRequired().HasMaxLength(2147483647);
        }
    }

    // FLATTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FlattypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Flattype>
    {
        public FlattypeConfiguration()
            : this("dbo")
        {
        }

        public FlattypeConfiguration(string schema)
        {
            ToTable("FLATTYPE", schema);
            HasKey(x => x.Fltypeid);

            Property(x => x.Fltypeid).HasColumnName(@"FLTYPEID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // fn1341
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1341>
    {
        public Fn1341Configuration()
            : this("dbo")
        {
        }

        public Fn1341Configuration(string schema)
        {
            ToTable("fn1341", schema);
            HasKey(x => x.D3480);

            Property(x => x.D3480).HasColumnName(@"D3480").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3481).HasColumnName(@"D3481").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.D3482).HasColumnName(@"D3482").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // FN1341_TRUST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341TrustConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1341Trust>
    {
        public Fn1341TrustConfiguration()
            : this("dbo")
        {
        }

        public Fn1341TrustConfiguration(string schema)
        {
            ToTable("FN1341_TRUST", schema);
            HasKey(x => x.Fn1341TrustId);

            Property(x => x.Fn1341TrustId).HasColumnName(@"FN1341_TRUST_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3481).HasColumnName(@"D3481").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Reason).HasColumnName(@"REASON").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // FN18441
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn18441Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn18441>
    {
        public Fn18441Configuration()
            : this("dbo")
        {
        }

        public Fn18441Configuration(string schema)
        {
            ToTable("FN18441", schema);
            HasKey(x => x.N18441);

            Property(x => x.N18441).HasColumnName(@"N18441").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N18442).HasColumnName(@"N18442").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // FN1903
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1903Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1903>
    {
        public Fn1903Configuration()
            : this("dbo")
        {
        }

        public Fn1903Configuration(string schema)
        {
            ToTable("FN1903", schema);
            HasKey(x => x.S2123);

            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.S2126).HasColumnName(@"S2126").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // FN3042
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn3042Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn3042>
    {
        public Fn3042Configuration()
            : this("dbo")
        {
        }

        public Fn3042Configuration(string schema)
        {
            ToTable("FN3042", schema);
            HasKey(x => x.N1525);

            Property(x => x.N1525).HasColumnName(@"N1525").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1526).HasColumnName(@"N1526").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.N1527).HasColumnName(@"N1527").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Synch).HasColumnName(@"Synch").HasColumnType("tinyint").IsOptional();
            Property(x => x.SystemId).HasColumnName(@"system_id").HasColumnType("int").IsOptional();
            Property(x => x.Prim).HasColumnName(@"Prim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

    // FN50_2
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn502Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn502>
    {
        public Fn502Configuration()
            : this("dbo")
        {
        }

        public Fn502Configuration(string schema)
        {
            ToTable("FN50_2", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("numeric").IsRequired().HasPrecision(20,0).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RegN).HasColumnName(@"RegN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.NumF).HasColumnName(@"NumF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Bik).HasColumnName(@"BIK").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(160);
            Property(x => x.AgrDateBegin).HasColumnName(@"AgrDateBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AgrDateChange).HasColumnName(@"AgrDateChange").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.AgrDateEnd).HasColumnName(@"AgrDateEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateBegin).HasColumnName(@"DateBegin").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DatePause).HasColumnName(@"DatePause").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateRenewal).HasColumnName(@"DateRenewal").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateEnd).HasColumnName(@"DateEnd").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Rpz).HasColumnName(@"RPZ").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(3);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("tinyint").IsRequired();
            Property(x => x.BLiq).HasColumnName(@"BLiq").HasColumnType("bit").IsRequired();
            Property(x => x.Inn).HasColumnName(@"INN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Kpp).HasColumnName(@"KPP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.DateDop).HasColumnName(@"DateDop").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateOgrRe).HasColumnName(@"DateOgrRe").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FN50_3
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn503Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn503>
    {
        public Fn503Configuration()
            : this("dbo")
        {
        }

        public Fn503Configuration(string schema)
        {
            ToTable("FN50_3", schema);
            HasKey(x => x.Un);

            Property(x => x.Un).HasColumnName(@"UN").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumF).HasColumnName(@"NumF").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Bik).HasColumnName(@"BIK").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(160);
            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("numeric").IsRequired().HasPrecision(20,0);

            // Foreign keys
            HasRequired(a => a.Fn502).WithMany(b => b.Fn503).HasForeignKey(c => c.Id); // FK__FN50_3__ID__7854C86E
        }
    }

    // GroupOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GroupOtdel>
    {
        public GroupOtdelConfiguration()
            : this("dbo")
        {
        }

        public GroupOtdelConfiguration(string schema)
        {
            ToTable("GroupOtdel", schema);
            HasKey(x => x.IdGroup);

            Property(x => x.IdGroup).HasColumnName(@"IdGroup").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GroupDescription).HasColumnName(@"GroupDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NameGroup).HasColumnName(@"NameGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // HANDLER_CHAIN
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HandlerChainConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HandlerChain>
    {
        public HandlerChainConfiguration()
            : this("dbo")
        {
        }

        public HandlerChainConfiguration(string schema)
        {
            ToTable("HANDLER_CHAIN", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // Headers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HeaderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Header>
    {
        public HeaderConfiguration()
            : this("dbo")
        {
        }

        public HeaderConfiguration(string schema)
        {
            ToTable("Headers", schema);
            HasKey(x => x.IdHeaders);

            Property(x => x.IdHeaders).HasColumnName(@"IdHeaders").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TextHeade1).HasColumnName(@"TextHeade1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade2).HasColumnName(@"TextHeade2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade3).HasColumnName(@"TextHeade3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade4).HasColumnName(@"TextHeade4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade5).HasColumnName(@"TextHeade5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade6).HasColumnName(@"TextHeade6").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade7).HasColumnName(@"TextHeade7").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade8).HasColumnName(@"TextHeade8").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade9).HasColumnName(@"TextHeade9").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade10).HasColumnName(@"TextHeade10").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // H_NAMES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HName>
    {
        public HNameConfiguration()
            : this("dbo")
        {
        }

        public HNameConfiguration(string schema)
        {
            ToTable("H_NAMES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N142).HasColumnName(@"N142").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.D1035).HasColumnName(@"D1035").HasColumnType("bit").IsRequired();
        }
    }

    // HOUSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HouseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<House>
    {
        public HouseConfiguration()
            : this("dbo")
        {
        }

        public HouseConfiguration(string schema)
        {
            ToTable("HOUSE", schema);
            HasKey(x => x.Houseid);

            Property(x => x.Houseid).HasColumnName(@"HOUSEID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Houseguid).HasColumnName(@"HOUSEGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Aoguid).HasColumnName(@"AOGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Housenum).HasColumnName(@"HOUSENUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Eststatid).HasColumnName(@"ESTSTATID").HasColumnType("int").IsRequired();
            Property(x => x.Buildnum).HasColumnName(@"BUILDNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Strucnum).HasColumnName(@"STRUCNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Strstatid).HasColumnName(@"STRSTATID").HasColumnType("int").IsOptional();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Housestid).HasColumnName(@"HOUSESTID").HasColumnType("int").IsRequired();
            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Counter).HasColumnName(@"COUNTER").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsOptional();
        }
    }

    // HSTSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HststatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Hststat>
    {
        public HststatConfiguration()
            : this("dbo")
        {
        }

        public HststatConfiguration(string schema)
        {
            ToTable("HSTSTAT", schema);
            HasKey(x => x.Housestid);

            Property(x => x.Housestid).HasColumnName(@"HOUSESTID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(60);
        }
    }

    // Incass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IncassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Incass>
    {
        public IncassConfiguration()
            : this("dbo")
        {
        }

        public IncassConfiguration(string schema)
        {
            ToTable("Incass", schema);
            HasKey(x => x.D851Incass);

            Property(x => x.D851Res1).HasColumnName(@"D851Res_1").HasColumnType("int").IsOptional();
            Property(x => x.D850Incass).HasColumnName(@"D850Incass").HasColumnType("int").IsOptional();
            Property(x => x.D851Incass).HasColumnName(@"D851Incass").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Summ).HasColumnName(@"Summ").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.D270IshIncass).HasColumnName(@"D270IshIncass").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Reshenie).WithMany(b => b.Incasses).HasForeignKey(c => c.D851Res1); // FK_Incass_Reshenie
        }
    }

    // ITERATOR_RES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IteratorReConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IteratorRe>
    {
        public IteratorReConfiguration()
            : this("dbo")
        {
        }

        public IteratorReConfiguration(string schema)
        {
            ToTable("ITERATOR_RES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"OBJECT_ID").HasColumnType("int").IsRequired();
            Property(x => x.RecordId).HasColumnName(@"RECORD_ID").HasColumnType("int").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Df).HasColumnName(@"DF").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Dn).HasColumnName(@"DN").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Dc).HasColumnName(@"DC").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // JOB_DATA_DT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataDtConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataDt>
    {
        public JobDataDtConfiguration()
            : this("dbo")
        {
        }

        public JobDataDtConfiguration(string schema)
        {
            ToTable("JOB_DATA_DT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataDt); // FK_JOB_DATA_DT_JOB_DATA
        }
    }

    // JOB_DATA_INT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataIntConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataInt>
    {
        public JobDataIntConfiguration()
            : this("dbo")
        {
        }

        public JobDataIntConfiguration(string schema)
        {
            ToTable("JOB_DATA_INT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataInt); // FK_JOB_DATA_INT_JOB_DATA
        }
    }

    // JOB_DATA_STR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataStrConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataStr>
    {
        public JobDataStrConfiguration()
            : this("dbo")
        {
        }

        public JobDataStrConfiguration(string schema)
        {
            ToTable("JOB_DATA_STR", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataStr); // FK_JOB_DATA_STR_JOB_DATA
        }
    }

    // JOB_DATA_XML
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataXmlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataXml>
    {
        public JobDataXmlConfiguration()
            : this("dbo")
        {
        }

        public JobDataXmlConfiguration(string schema)
        {
            ToTable("JOB_DATA_XML", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("xml").IsRequired();

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataXml); // FK_JOB_DATA_XML_JOB_DATA
        }
    }

    // JOB_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDatum>
    {
        public JobDatumConfiguration()
            : this("dbo")
        {
        }

        public JobDatumConfiguration(string schema)
        {
            ToTable("JOB_DATA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.FieldId).HasColumnName(@"FIELD_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskField).WithMany(b => b.JobDatums).HasForeignKey(c => c.FieldId).WillCascadeOnDelete(false); // FK_JOB_DATA_RISK_FIELDS
            HasRequired(a => a.ShedJob).WithMany(b => b.JobDatums).HasForeignKey(c => c.ShedJobId); // FK_JOB_DATA_SHED_JOB
        }
    }

    // KAO_CERHISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoCerhistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoCerhistory>
    {
        public KaoCerhistoryConfiguration()
            : this("dbo")
        {
        }

        public KaoCerhistoryConfiguration(string schema)
        {
            ToTable("KAO_CERHISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Cid).HasColumnName(@"CID").HasColumnType("int").IsRequired();
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Revocation).HasColumnName(@"REVOCATION").HasColumnType("bit").IsOptional();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.KaoRogueCert).WithMany(b => b.KaoCerhistories).HasForeignKey(c => c.Cid).WillCascadeOnDelete(false); // FK_KAO_CERHISTORY_KAO_ROGUE_CERT
        }
    }

    // KAO_RANHISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRanhistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoRanhistory>
    {
        public KaoRanhistoryConfiguration()
            : this("dbo")
        {
        }

        public KaoRanhistoryConfiguration(string schema)
        {
            ToTable("KAO_RANHISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RogueId).HasColumnName(@"ROGUE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Sname).HasColumnName(@"SNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.AutoRevoke).HasColumnName(@"AUTO_REVOKE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.KaoRogue).WithMany(b => b.KaoRanhistories).HasForeignKey(c => c.RogueId).WillCascadeOnDelete(false); // FK_KAO_RANHISTORY_KAO_ROGUE
        }
    }

    // KAO_RHISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRhistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoRhistory>
    {
        public KaoRhistoryConfiguration()
            : this("dbo")
        {
        }

        public KaoRhistoryConfiguration(string schema)
        {
            ToTable("KAO_RHISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RogueId).HasColumnName(@"ROGUE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.KaoRogue).WithMany(b => b.KaoRhistories).HasForeignKey(c => c.RogueId); // FK_KAO_RHISTORY_KAO_ROGUE
        }
    }

    // KAO_ROGUE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogueConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoRogue>
    {
        public KaoRogueConfiguration()
            : this("dbo")
        {
        }

        public KaoRogueConfiguration(string schema)
        {
            ToTable("KAO_ROGUE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsOptional();
            Property(x => x.AutoRevoke).HasColumnName(@"AUTO_REVOKE").HasColumnType("int").IsRequired();
        }
    }

    // KAO_ROGUE_ABO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogueAboConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoRogueAbo>
    {
        public KaoRogueAboConfiguration()
            : this("dbo")
        {
        }

        public KaoRogueAboConfiguration(string schema)
        {
            ToTable("KAO_ROGUE_ABO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RogueId).HasColumnName(@"ROGUE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsOptional();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Md).HasColumnName(@"MD").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Cld).HasColumnName(@"CLD").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.KaoRogue).WithMany(b => b.KaoRogueAboes).HasForeignKey(c => c.RogueId); // FK_KAO_ROGUE_ABO_KAO_ROGUE
        }
    }

    // KAO_ROGUE_CERT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KaoRogueCertConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KaoRogueCert>
    {
        public KaoRogueCertConfiguration()
            : this("dbo")
        {
        }

        public KaoRogueCertConfiguration(string schema)
        {
            ToTable("KAO_ROGUE_CERT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RogueId).HasColumnName(@"ROGUE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Idcert).HasColumnName(@"IDCERT").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Sha).HasColumnName(@"SHA").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Db).HasColumnName(@"DB").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.De).HasColumnName(@"DE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Issuer).HasColumnName(@"ISSUER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.SigCheck).HasColumnName(@"SIG_CHECK").HasColumnType("bit").IsRequired();
            Property(x => x.ForSign).HasColumnName(@"FOR_SIGN").HasColumnType("bit").IsRequired();
            Property(x => x.ForEncryption).HasColumnName(@"FOR_ENCRYPTION").HasColumnType("bit").IsRequired();
            Property(x => x.Revoked).HasColumnName(@"REVOKED").HasColumnType("bit").IsRequired();
            Property(x => x.Compromised).HasColumnName(@"COMPROMISED").HasColumnType("bit").IsRequired();
            Property(x => x.Owner).HasColumnName(@"OWNER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Rdc).HasColumnName(@"RDC").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Img).HasColumnName(@"IMG").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.KaoRogue).WithMany(b => b.KaoRogueCerts).HasForeignKey(c => c.RogueId); // FK_KAO_ROGUE_CERT_KAO_ROGUE
        }
    }

    // KbkAnaliz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class KbkAnalizConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KbkAnaliz>
    {
        public KbkAnalizConfiguration()
            : this("dbo")
        {
        }

        public KbkAnalizConfiguration(string schema)
        {
            ToTable("KbkAnaliz", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Kbk).HasColumnName(@"Kbk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Statuskbk).HasColumnName(@"Statuskbk").HasColumnType("tinyint").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LD_COURT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LdCourtConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LdCourt>
    {
        public LdCourtConfiguration()
            : this("dbo")
        {
        }

        public LdCourtConfiguration(string schema)
        {
            ToTable("LD_COURT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CourtType).HasColumnName(@"COURT_TYPE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Address).HasColumnName(@"ADDRESS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Tel).HasColumnName(@"TEL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RegionCode).HasColumnName(@"REGION_CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
        }
    }

    // LOCK_NG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LockNgConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LockNg>
    {
        public LockNgConfiguration()
            : this("dbo")
        {
        }

        public LockNgConfiguration(string schema)
        {
            ToTable("LOCK_NG", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Ld).HasColumnName(@"LD").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.HandlerCode).HasColumnName(@"HANDLER_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Kv).HasColumnName(@"KV").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Hst).HasColumnName(@"HST").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Ed).HasColumnName(@"ED").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // LOTUS_DOCS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusDocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusDoc>
    {
        public LotusDocConfiguration()
            : this("dbo")
        {
        }

        public LotusDocConfiguration(string schema)
        {
            ToTable("LOTUS_DOCS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DocumentId).HasColumnName(@"DOCUMENT_ID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Md5).HasColumnName(@"MD5").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D86).HasColumnName(@"D86").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Utp).HasColumnName(@"UTP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Uts).HasColumnName(@"UTS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // LOTUS_FILE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusFileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusFile>
    {
        public LotusFileConfiguration()
            : this("dbo")
        {
        }

        public LotusFileConfiguration(string schema)
        {
            ToTable("LOTUS_FILE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Fileno).HasColumnName(@"FILENO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Numprefix).HasColumnName(@"NUMPREFIX").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Numpostfix).HasColumnName(@"NUMPOSTFIX").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Separator).HasColumnName(@"SEPARATOR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Numindexpl).HasColumnName(@"NUMINDEXPL").HasColumnType("int").IsRequired();
            Property(x => x.Mantissa).HasColumnName(@"MANTISSA").HasColumnType("int").IsRequired();
        }
    }

    // LOTUS_MOVEMENT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusMovementConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusMovement>
    {
        public LotusMovementConfiguration()
            : this("dbo")
        {
        }

        public LotusMovementConfiguration(string schema)
        {
            ToTable("LOTUS_MOVEMENT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Iddocob).HasColumnName(@"IDDOCOB").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.LotusNoteid).HasColumnName(@"LOTUS_NOTEID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.LotusNo).HasColumnName(@"LOTUS_NO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.LotusDate).HasColumnName(@"LOTUS_DATE").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LOTUS_MOVEMENT_HISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusMovementHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusMovementHistory>
    {
        public LotusMovementHistoryConfiguration()
            : this("dbo")
        {
        }

        public LotusMovementHistoryConfiguration(string schema)
        {
            ToTable("LOTUS_MOVEMENT_HISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Mid).HasColumnName(@"MID").HasColumnType("int").IsRequired();
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.LotusMovement).WithMany(b => b.LotusMovementHistories).HasForeignKey(c => c.Mid); // FK_LOTUS_MOVEMENT_HISTORY_LOTUS_MOVEMENT
        }
    }

    // LOTUS_SEQUENCE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusSequenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusSequence>
    {
        public LotusSequenceConfiguration()
            : this("dbo")
        {
        }

        public LotusSequenceConfiguration(string schema)
        {
            ToTable("LOTUS_SEQUENCE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Fileid).HasColumnName(@"FILEID").HasColumnType("int").IsRequired();
            Property(x => x.Strt).HasColumnName(@"STRT").HasColumnType("int").IsRequired();
            Property(x => x.Curval).HasColumnName(@"CURVAL").HasColumnType("int").IsRequired();
            Property(x => x.Maxval).HasColumnName(@"MAXVAL").HasColumnType("int").IsRequired();
            Property(x => x.DtInt).HasColumnName(@"DT_INT").HasColumnType("int").IsOptional().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasRequired(a => a.LotusFile).WithMany(b => b.LotusSequences).HasForeignKey(c => c.Fileid); // FK_LOTUS_SEQUENCE_LOTUS_FILE
        }
    }

    // MessageDate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageDateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MessageDate>
    {
        public MessageDateConfiguration()
            : this("dbo")
        {
        }

        public MessageDateConfiguration(string schema)
        {
            ToTable("MessageDate", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageDate_).HasColumnName(@"MessageDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // MessageStatusUh
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageStatusUhConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MessageStatusUh>
    {
        public MessageStatusUhConfiguration()
            : this("dbo")
        {
        }

        public MessageStatusUhConfiguration(string schema)
        {
            ToTable("MessageStatusUh", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageStatusUh_).HasColumnName(@"MessageStatusUh").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // MessageStrahovieAndOtkaz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageStrahovieAndOtkazConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MessageStrahovieAndOtkaz>
    {
        public MessageStrahovieAndOtkazConfiguration()
            : this("dbo")
        {
        }

        public MessageStrahovieAndOtkazConfiguration(string schema)
        {
            ToTable("MessageStrahovieAndOtkaz", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageStrahovieAndOtkaz_).HasColumnName(@"MessageStrahovieAndOtkaz").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // MessageVivod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MessageVivodConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MessageVivod>
    {
        public MessageVivodConfiguration()
            : this("dbo")
        {
        }

        public MessageVivodConfiguration(string schema)
        {
            ToTable("MessageVivod", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageVivod_).HasColumnName(@"MessageVivod").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // NameDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NameDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameDocument>
    {
        public NameDocumentConfiguration()
            : this("dbo")
        {
        }

        public NameDocumentConfiguration(string schema)
        {
            ToTable("NameDocument", schema);
            HasKey(x => x.IdNamedocument);

            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDocument_).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ManualDoc).HasColumnName(@"ManualDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Template).WithMany(b => b.NameDocuments).HasForeignKey(c => c.IdTemplate).WillCascadeOnDelete(false); // FK_NameDocument_Template
        }
    }

    // NDFL_INV
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NdflInvConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NdflInv>
    {
        public NdflInvConfiguration()
            : this("dbo")
        {
        }

        public NdflInvConfiguration(string schema)
        {
            ToTable("NDFL_INV", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.Inv2203).HasColumnName(@"INV_220_3").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Inv2203Limit).HasColumnName(@"INV_220_3_LIMIT").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Inv2204).HasColumnName(@"INV_220_4").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Inv2204Limit).HasColumnName(@"INV_220_4_LIMIT").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.N315).HasColumnName(@"N315").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3201).HasColumnName(@"D320_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D3202).HasColumnName(@"D320_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D3203).HasColumnName(@"D320_3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D3204).HasColumnName(@"D320_4").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.N316).HasColumnName(@"N316").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.N317).HasColumnName(@"N317").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.N318).HasColumnName(@"N318").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.N319).HasColumnName(@"N319").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.NdflInvs).HasForeignKey(c => c.ShedJobId); // FK_NDFL_INV_SHED_JOB
        }
    }

    // NDOCTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NdoctypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ndoctype>
    {
        public NdoctypeConfiguration()
            : this("dbo")
        {
        }

        public NdoctypeConfiguration(string schema)
        {
            ToTable("NDOCTYPE", schema);
            HasKey(x => x.Ndtypeid);

            Property(x => x.Ndtypeid).HasColumnName(@"NDTYPEID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
        }
    }

    // NORMDOC
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NormdocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Normdoc>
    {
        public NormdocConfiguration()
            : this("dbo")
        {
        }

        public NormdocConfiguration(string schema)
        {
            ToTable("NORMDOC", schema);
            HasKey(x => x.Normdocid);

            Property(x => x.Normdocid).HasColumnName(@"NORMDOCID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Docname).HasColumnName(@"DOCNAME").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.Docdate).HasColumnName(@"DOCDATE").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Docnum).HasColumnName(@"DOCNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Ndtypeid).HasColumnName(@"NDTYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Docimgid).HasColumnName(@"DOCIMGID").HasColumnType("uniqueidentifier").IsOptional();

            // Foreign keys
            HasRequired(a => a.Ndoctype).WithMany(b => b.Normdocs).HasForeignKey(c => c.Ndtypeid).WillCascadeOnDelete(false); // FK_NORMDOC_NORMDOC
        }
    }

    // OPERSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OperstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Operstat>
    {
        public OperstatConfiguration()
            : this("dbo")
        {
        }

        public OperstatConfiguration(string schema)
        {
            ToTable("OPERSTAT", schema);
            HasKey(x => x.Operstatid);

            Property(x => x.Operstatid).HasColumnName(@"OPERSTATID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // POSTAL_DOC2ROLL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDoc2RollConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalDoc2Roll>
    {
        public PostalDoc2RollConfiguration()
            : this("dbo")
        {
        }

        public PostalDoc2RollConfiguration(string schema)
        {
            ToTable("POSTAL_DOC2ROLL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Rollid).HasColumnName(@"ROLLID").HasColumnType("int").IsRequired();
            Property(x => x.Docid).HasColumnName(@"DOCID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.PostalDocument).WithMany(b => b.PostalDoc2Roll).HasForeignKey(c => c.Docid).WillCascadeOnDelete(false); // FK_POSTAL_DOC2ROLL_POSTAL_DOCUMENT
            HasRequired(a => a.PostalRoll).WithMany(b => b.PostalDoc2Roll).HasForeignKey(c => c.Rollid).WillCascadeOnDelete(false); // FK_POSTAL_DOC2ROLL_POSTAL_ROLL
        }
    }

    // POSTAL_DOCTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDoctypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalDoctype>
    {
        public PostalDoctypeConfiguration()
            : this("dbo")
        {
        }

        public PostalDoctypeConfiguration(string schema)
        {
            ToTable("POSTAL_DOCTYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // POSTAL_DOCUMENT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalDocument>
    {
        public PostalDocumentConfiguration()
            : this("dbo")
        {
        }

        public PostalDocumentConfiguration(string schema)
        {
            ToTable("POSTAL_DOCUMENT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Doctypeid).HasColumnName(@"DOCTYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Kv).HasColumnName(@"KV").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // POSTAL_DOCUMENT_FIELD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalDocumentFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalDocumentField>
    {
        public PostalDocumentFieldConfiguration()
            : this("dbo")
        {
        }

        public PostalDocumentFieldConfiguration(string schema)
        {
            ToTable("POSTAL_DOCUMENT_FIELD", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DocumentId).HasColumnName(@"DOCUMENT_ID").HasColumnType("int").IsRequired();
            Property(x => x.FieldId).HasColumnName(@"FIELD_ID").HasColumnType("int").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);

            // Foreign keys
            HasRequired(a => a.PostalDocument).WithMany(b => b.PostalDocumentFields).HasForeignKey(c => c.DocumentId); // FK_POSTAL_DOCUMENT_FIELD_POSTAL_DOCUMENT
        }
    }

    // POSTAL_FIELD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalField>
    {
        public PostalFieldConfiguration()
            : this("dbo")
        {
        }

        public PostalFieldConfiguration(string schema)
        {
            ToTable("POSTAL_FIELD", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.IsRequired).HasColumnName(@"IS_REQUIRED").HasColumnType("int").IsRequired();
            Property(x => x.ChkRe).HasColumnName(@"CHK_RE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.AddrPosition).HasColumnName(@"ADDR_POSITION").HasColumnType("int").IsOptional();
        }
    }

    // POSTAL_ROLL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalRollConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalRoll>
    {
        public PostalRollConfiguration()
            : this("dbo")
        {
        }

        public PostalRollConfiguration(string schema)
        {
            ToTable("POSTAL_ROLL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Typeid).HasColumnName(@"TYPEID").HasColumnType("int").IsRequired();
            Property(x => x.Owner).HasColumnName(@"OWNER").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D86).HasColumnName(@"D86").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.PostalRollType).WithMany(b => b.PostalRolls).HasForeignKey(c => c.Typeid).WillCascadeOnDelete(false); // FK_POSTAL_REESTR_POSTAL_REESTR_TYPE
        }
    }

    // POSTAL_ROLL_TYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PostalRollTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostalRollType>
    {
        public PostalRollTypeConfiguration()
            : this("dbo")
        {
        }

        public PostalRollTypeConfiguration(string schema)
        {
            ToTable("POSTAL_ROLL_TYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // RB_COURT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourtConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbCourt>
    {
        public RbCourtConfiguration()
            : this("dbo")
        {
        }

        public RbCourtConfiguration(string schema)
        {
            ToTable("RB_COURT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TpId).HasColumnName(@"TP_ID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Address).HasColumnName(@"ADDRESS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Tel).HasColumnName(@"TEL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.RegionCode).HasColumnName(@"REGION_CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);

            // Foreign keys
            HasRequired(a => a.RbCourtType).WithMany(b => b.RbCourts).HasForeignKey(c => c.TpId).WillCascadeOnDelete(false); // FK_RB_COURT_RB_COURT
        }
    }

    // RB_COURT_EXCEPTIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourtExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbCourtException>
    {
        public RbCourtExceptionConfiguration()
            : this("dbo")
        {
        }

        public RbCourtExceptionConfiguration(string schema)
        {
            ToTable("RB_COURT_EXCEPTIONS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Addr).HasColumnName(@"ADDR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
            Property(x => x.CourtId).HasColumnName(@"COURT_ID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(3);
        }
    }

    // RB_COURT_TYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbCourtTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbCourtType>
    {
        public RbCourtTypeConfiguration()
            : this("dbo")
        {
        }

        public RbCourtTypeConfiguration(string schema)
        {
            ToTable("RB_COURT_TYPE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // RB_DECL_CODES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbDeclCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbDeclCode>
    {
        public RbDeclCodeConfiguration()
            : this("dbo")
        {
        }

        public RbDeclCodeConfiguration(string schema)
        {
            ToTable("RB_DECL_CODES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Mnt).HasColumnName(@"MNT").HasColumnType("int").IsRequired();
        }
    }

    // RB_HOLIDAYS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbHolidayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbHoliday>
    {
        public RbHolidayConfiguration()
            : this("dbo")
        {
        }

        public RbHolidayConfiguration(string schema)
        {
            ToTable("RB_HOLIDAYS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.IsHoliday).HasColumnName(@"IS_HOLIDAY").HasColumnType("bit").IsRequired();
        }
    }

    // RB_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbReport>
    {
        public RbReportConfiguration()
            : this("dbo")
        {
        }

        public RbReportConfiguration(string schema)
        {
            ToTable("RB_REPORT", schema);
            HasKey(x => x.ReportId);

            Property(x => x.ReportId).HasColumnName(@"REPORT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReportCode).HasColumnName(@"REPORT_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ReportImage).HasColumnName(@"REPORT_IMAGE").HasColumnType("image").IsRequired().HasMaxLength(2147483647);
            Property(x => x.ReportTitle).HasColumnName(@"REPORT_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReportQuery).HasColumnName(@"REPORT_QUERY").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
        }
    }

    // RB_ZG_CLASSES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbZgClassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbZgClass>
    {
        public RbZgClassConfiguration()
            : this("dbo")
        {
        }

        public RbZgClassConfiguration(string schema)
        {
            ToTable("RB_ZG_CLASSES", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // RC_RECORDS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RcRecordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RcRecord>
    {
        public RcRecordConfiguration()
            : this("dbo")
        {
        }

        public RcRecordConfiguration(string schema)
        {
            ToTable("RC_RECORDS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Flag).HasColumnName(@"FLAG").HasColumnType("int").IsRequired();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // REC_REASON
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RecReasonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RecReason>
    {
        public RecReasonConfiguration()
            : this("dbo")
        {
        }

        public RecReasonConfiguration(string schema)
        {
            ToTable("REC_REASON", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
        }
    }

    // REPORT_FILTER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportFilterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReportFilter>
    {
        public ReportFilterConfiguration()
            : this("dbo")
        {
        }

        public ReportFilterConfiguration(string schema)
        {
            ToTable("REPORT_FILTER", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
        }
    }

    // REQ_TYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReqTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReqType>
    {
        public ReqTypeConfiguration()
            : this("dbo")
        {
        }

        public ReqTypeConfiguration(string schema)
        {
            ToTable("REQ_TYPE", schema);
            HasKey(x => x.ReqTypeId);

            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReqTypeTitle).HasColumnName(@"REQ_TYPE_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ReqTtl).HasColumnName(@"REQ_TTL").HasColumnType("int").IsRequired();
            Property(x => x.CutOffDate).HasColumnName(@"CUT_OFF_DATE").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ErrTo).HasColumnName(@"ERR_TO").HasColumnType("int").IsOptional();
            Property(x => x.ErrTtl).HasColumnName(@"ERR_TTL").HasColumnType("int").IsOptional();
            Property(x => x.ErrCnt).HasColumnName(@"ERR_CNT").HasColumnType("int").IsOptional();
            Property(x => x.Xcfg).HasColumnName(@"XCFG").HasColumnType("xml").IsOptional();
            Property(x => x.Dicfg).HasColumnName(@"DICFG").HasColumnType("xml").IsOptional();
        }
    }

    // Reshenie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReshenieConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Reshenie>
    {
        public ReshenieConfiguration()
            : this("dbo")
        {
        }

        public ReshenieConfiguration(string schema)
        {
            ToTable("Reshenie", schema);
            HasKey(x => x.D851Res);

            Property(x => x.D865).HasColumnName(@"D865").HasColumnType("int").IsOptional();
            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired();
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.Summ).HasColumnName(@"Summ").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.N120).HasColumnName(@"N120").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.D850Res).HasColumnName(@"D850Res").HasColumnType("int").IsOptional();
            Property(x => x.D851Res).HasColumnName(@"D851Res").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D865Res).HasColumnName(@"D865Res").HasColumnType("int").IsOptional();
            Property(x => x.D270IshRes).HasColumnName(@"D270IshRes").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TableSysNumReshen).WithOptional(b => b.Reshenie); // FK_Reshenie_TableSysNumReshen
        }
    }

    // RF_BIG_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RfBigDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RfBigDatum>
    {
        public RfBigDatumConfiguration()
            : this("dbo")
        {
        }

        public RfBigDatumConfiguration(string schema)
        {
            ToTable("RF_BIG_DATA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Kv).HasColumnName(@"KV").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsRequired().HasMaxLength(2147483647);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RfBigDatums).HasForeignKey(c => c.CycleId); // FK_RF_BIG_DATA_REQ_TYPE
            HasRequired(a => a.RiskChecker).WithMany(b => b.RfBigDatums).HasForeignKey(c => c.RiskCheckerId); // FK_RF_BIG_DATA_RISK_CHECKER
        }
    }

    // RISK_CHECKER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskChecker>
    {
        public RiskCheckerConfiguration()
            : this("dbo")
        {
        }

        public RiskCheckerConfiguration(string schema)
        {
            ToTable("RISK_CHECKER", schema);
            HasKey(x => x.RiskCheckerId);

            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("int").IsOptional();
        }
    }

    // RISK_CHECKER_HISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCheckerHistory>
    {
        public RiskCheckerHistoryConfiguration()
            : this("dbo")
        {
        }

        public RiskCheckerHistoryConfiguration(string schema)
        {
            ToTable("RISK_CHECKER_HISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Sname).HasColumnName(@"SNAME").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskCheckerHistories).HasForeignKey(c => c.RiskCheckerId).WillCascadeOnDelete(false); // FK_RISK_CHECKER_HISTORY_RISK_CHECKER
        }
    }

    // RISK_CHECKER_TO_212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerTo212Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCheckerTo212>
    {
        public RiskCheckerTo212Configuration()
            : this("dbo")
        {
        }

        public RiskCheckerTo212Configuration(string schema)
        {
            ToTable("RISK_CHECKER_TO_212", schema);
            HasKey(x => x.RiskCheckerTo212Id);

            Property(x => x.RiskCheckerTo212Id).HasColumnName(@"RISK_CHECKER_TO_212_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Flag).HasColumnName(@"FLAG").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.RiskFn212).WithMany(b => b.RiskCheckerTo212).HasForeignKey(c => c.N1); // FK_RISK_CHECKER_TO_212_RISK_FN212
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskCheckerTo212).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_CHECKER_TO_212_RISK_CHECKER
        }
    }

    // RISK_CYCLE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCycleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCycle>
    {
        public RiskCycleConfiguration()
            : this("dbo")
        {
        }

        public RiskCycleConfiguration(string schema)
        {
            ToTable("RISK_CYCLE", schema);
            HasKey(x => x.CycleId);

            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CycleTitle).HasColumnName(@"CYCLE_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
            Property(x => x.PoolSize).HasColumnName(@"POOL_SIZE").HasColumnType("int").IsRequired();
            Property(x => x.Enumerator).HasColumnName(@"ENUMERATOR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Ttl).HasColumnName(@"TTL").HasColumnType("int").IsRequired();
            Property(x => x.HandlerId).HasColumnName(@"HANDLER_ID").HasColumnType("int").IsRequired();
            HasMany(t => t.ReqTypes).WithMany(t => t.RiskCycles).Map(m =>
            {
                m.ToTable("REQ_TO_CYCLE", "dbo");
                m.MapLeftKey("CYCLE_ID");
                m.MapRightKey("REQ_TYPE_ID");
            });
        }
    }

    // RISK_DOSSIER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskDossierConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskDossier>
    {
        public RiskDossierConfiguration()
            : this("dbo")
        {
        }

        public RiskDossierConfiguration(string schema)
        {
            ToTable("RISK_DOSSIER", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReportCode).HasColumnName(@"REPORT_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Num).HasColumnName(@"NUM").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired();
        }
    }

    // RISK_FAILURE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFailure>
    {
        public RiskFailureConfiguration()
            : this("dbo")
        {
        }

        public RiskFailureConfiguration(string schema)
        {
            ToTable("RISK_FAILURE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired();
            Property(x => x.ErrorMessage).HasColumnName(@"ERROR_MESSAGE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.StatusCode).HasColumnName(@"status_code").HasColumnType("int").IsOptional();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("xml").IsOptional();

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RiskFailures).HasForeignKey(c => c.CycleId).WillCascadeOnDelete(false); // FK_RISK_FAILURE_REQ_TYPE
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFailures).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FAILURE_RISK_CHECKER
        }
    }

    // RISK_FAILURE_HISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailureHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFailureHistory>
    {
        public RiskFailureHistoryConfiguration()
            : this("dbo")
        {
        }

        public RiskFailureHistoryConfiguration(string schema)
        {
            ToTable("RISK_FAILURE_HISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.ErrorMessage).HasColumnName(@"ERROR_MESSAGE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired();
            Property(x => x.StatusCode).HasColumnName(@"status_code").HasColumnType("int").IsOptional();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("xml").IsOptional();

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RiskFailureHistories).HasForeignKey(c => c.CycleId); // FK_RISK_FAILURE_HISTORY_REQ_TYPE
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFailureHistories).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FAILURE_HISTORY_RISK_CHECKER
        }
    }

    // RISK_FIELDS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskField>
    {
        public RiskFieldConfiguration()
            : this("dbo")
        {
        }

        public RiskFieldConfiguration(string schema)
        {
            ToTable("RISK_FIELDS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // RISK_FN1048
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1048Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1048>
    {
        public RiskFn1048Configuration()
            : this("dbo")
        {
        }

        public RiskFn1048Configuration(string schema)
        {
            ToTable("RISK_FN1048", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Stage).HasColumnName(@"STAGE").HasColumnType("int").IsRequired();
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.RiskFn1048).HasForeignKey(c => c.ShedJobId); // FK_RISK_FN1048_SHED_JOB
        }
    }

    // RISK_FN1836
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1836Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1836>
    {
        public RiskFn1836Configuration()
            : this("dbo")
        {
        }

        public RiskFn1836Configuration(string schema)
        {
            ToTable("RISK_FN1836", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.RcRecordId).HasColumnName(@"RC_RECORD_ID").HasColumnType("int").IsRequired();
            Property(x => x.Dt).HasColumnName(@"DT").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.RecReasonId).HasColumnName(@"REC_REASON_ID").HasColumnType("int").IsRequired();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Fid).HasColumnName(@"FID").HasColumnType("bigint").IsRequired();
            Property(x => x.Df).HasColumnName(@"DF").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.RcRecord).WithMany(b => b.RiskFn1836).HasForeignKey(c => c.RcRecordId).WillCascadeOnDelete(false); // FK_RISK_FN1836_RC_RECORDS
            HasRequired(a => a.RecReason).WithMany(b => b.RiskFn1836).HasForeignKey(c => c.RecReasonId).WillCascadeOnDelete(false); // FK_RISK_FN1836_REC_REASON
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFn1836).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FN1836_RISK_CHECKER
        }
    }

    // RISK_FN1844
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1844Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1844>
    {
        public RiskFn1844Configuration()
            : this("dbo")
        {
        }

        public RiskFn1844Configuration(string schema)
        {
            ToTable("RISK_FN1844", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N18441).HasColumnName(@"N18441").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn18441).WithMany(b => b.RiskFn1844).HasForeignKey(c => c.N18441).WillCascadeOnDelete(false); // FK_RISK_FN1844_FN184411
        }
    }

    // RISK_FN1903
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1903Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1903>
    {
        public RiskFn1903Configuration()
            : this("dbo")
        {
        }

        public RiskFn1903Configuration(string schema)
        {
            ToTable("RISK_FN1903", schema);
            HasKey(x => x.S2123);

            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.S2126).HasColumnName(@"S2126").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // RISK_FN205
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn205Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn205>
    {
        public RiskFn205Configuration()
            : this("dbo")
        {
        }

        public RiskFn205Configuration(string schema)
        {
            ToTable("RISK_FN205", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N95).HasColumnName(@"N95").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N96).HasColumnName(@"N96").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N111).HasColumnName(@"N111").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N134Fn50).HasColumnName(@"N134Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3Fn50).HasColumnName(@"D3Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N18Fn50).HasColumnName(@"N18Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.D38076).HasColumnName(@"D38076").HasColumnType("int").IsOptional();
            Property(x => x.R248).HasColumnName(@"R248").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Rsource).HasColumnName(@"RSOURCE").HasColumnType("int").IsRequired();
            Property(x => x.D1858).HasColumnName(@"D1858").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFn205).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FN205_RISK_CHECKER
        }
    }

    // RISK_FN206
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn206Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn206>
    {
        public RiskFn206Configuration()
            : this("dbo")
        {
        }

        public RiskFn206Configuration(string schema)
        {
            ToTable("RISK_FN206", schema);
            HasKey(x => x.N257);

            Property(x => x.N257).HasColumnName(@"N257").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.D3480).HasColumnName(@"D3480").HasColumnType("int").IsRequired();
            Property(x => x.N306).HasColumnName(@"N306").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn1341).WithMany(b => b.RiskFn206).HasForeignKey(c => c.D3480).WillCascadeOnDelete(false); // FK_RISK_FN206_fn1341
            HasRequired(a => a.RiskFn212).WithMany(b => b.RiskFn206).HasForeignKey(c => c.N1); // FK_RISK_FN206_RISK_FN212
        }
    }

    // RISK_FN210
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn210Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn210>
    {
        public RiskFn210Configuration()
            : this("dbo")
        {
        }

        public RiskFn210Configuration(string schema)
        {
            ToTable("RISK_FN210", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.N1036).HasColumnName(@"N1036").HasColumnType("numeric").IsOptional().HasPrecision(20,2);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.N135).HasColumnName(@"N135").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Fn1903).WithMany(b => b.RiskFn210).HasForeignKey(c => c.S2123).WillCascadeOnDelete(false); // FK_RISK_FN210_FN1903
            HasRequired(a => a.RiskFn212).WithOptional(b => b.RiskFn210); // FK_RISK_FN210_RISK_FN210
        }
    }

    // RISK_FN211
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn211Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn211>
    {
        public RiskFn211Configuration()
            : this("dbo")
        {
        }

        public RiskFn211Configuration(string schema)
        {
            ToTable("RISK_FN211", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N146).HasColumnName(@"N146").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.N142).HasColumnName(@"N142").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(60);
            Property(x => x.N610).HasColumnName(@"N610").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(60);
            Property(x => x.N147).HasColumnName(@"N147").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N148).HasColumnName(@"N148").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.RiskFn1903).WithMany(b => b.RiskFn211).HasForeignKey(c => c.S2123).WillCascadeOnDelete(false); // FK_RISK_FN211_FN1903
            HasRequired(a => a.RiskFn212).WithOptional(b => b.RiskFn211); // FK_RISK_FN211_RISK_FN212
        }
    }

    // RISK_FN212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn212Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn212>
    {
        public RiskFn212Configuration()
            : this("dbo")
        {
        }

        public RiskFn212Configuration(string schema)
        {
            ToTable("RISK_FN212", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(160);
        }
    }

    // RISK_FN236
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn236Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn236>
    {
        public RiskFn236Configuration()
            : this("dbo")
        {
        }

        public RiskFn236Configuration(string schema)
        {
            ToTable("RISK_FN236", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFn236).HasForeignKey(c => c.RiskCheckerId).WillCascadeOnDelete(false); // FK_RISK_FN236_RISK_CHECKER
            HasRequired(a => a.RiskFn212).WithMany(b => b.RiskFn236).HasForeignKey(c => c.N1).WillCascadeOnDelete(false); // FK_RISK_FN236_RISK_FN212
        }
    }

    // RISK_FN245
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn245Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn245>
    {
        public RiskFn245Configuration()
            : this("dbo")
        {
        }

        public RiskFn245Configuration(string schema)
        {
            ToTable("RISK_FN245", schema);
            HasKey(x => x.RiskFn245Id);

            Property(x => x.RiskFn245Id).HasColumnName(@"RISK_FN245_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.N11).HasColumnName(@"N1_1").HasColumnType("int").IsRequired();
            Property(x => x.N1525).HasColumnName(@"N1525").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn3042).WithMany(b => b.RiskFn245).HasForeignKey(c => c.N1525); // FK_RISK_FN245_FN3042
            HasRequired(a => a.RiskFn212_N1).WithMany(b => b.RiskFn245_N1).HasForeignKey(c => c.N1); // FK_RISK_FN245_RISK_FN212
            HasRequired(a => a.RiskFn212_N11).WithMany(b => b.RiskFn245_N11).HasForeignKey(c => c.N11).WillCascadeOnDelete(false); // FK_RISK_FN245_RISK_FN2121
        }
    }

    // RISK_FN71
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn71Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn71>
    {
        public RiskFn71Configuration()
            : this("dbo")
        {
        }

        public RiskFn71Configuration(string schema)
        {
            ToTable("RISK_FN71", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.DbConfigId).HasColumnName(@"DB_CONFIG_ID").HasColumnType("int").IsRequired();
            Property(x => x.DbSuffix).HasColumnName(@"DB_SUFFIX").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.LinkedServer).HasColumnName(@"LINKED_SERVER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ConnectionString).HasColumnName(@"CONNECTION_STRING").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.DbConfig).WithMany(b => b.RiskFn71).HasForeignKey(c => c.DbConfigId).WillCascadeOnDelete(false); // FK_RISK_FN71_DB_CONFIG
        }
    }

    // RISK_FN72
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn72Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn72>
    {
        public RiskFn72Configuration()
            : this("dbo")
        {
        }

        public RiskFn72Configuration(string schema)
        {
            ToTable("RISK_FN72", schema);
            HasKey(x => x.N274);

            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N276).HasColumnName(@"N276").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.R250).HasColumnName(@"R250").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("int").IsRequired();
            Property(x => x.N250).HasColumnName(@"N250").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D1989).HasColumnName(@"D1989").HasColumnType("bit").IsRequired();
            Property(x => x.D1990).HasColumnName(@"D1990").HasColumnType("bit").IsRequired();
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D306).HasColumnName(@"D306").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D19902).HasColumnName(@"D1990_2").HasColumnType("tinyint").IsRequired();
        }
    }

    // RISK_FN74
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn74Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn74>
    {
        public RiskFn74Configuration()
            : this("dbo")
        {
        }

        public RiskFn74Configuration(string schema)
        {
            ToTable("RISK_FN74", schema);
            HasKey(x => x.N269);

            Property(x => x.N269).HasColumnName(@"N269").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N273).HasColumnName(@"N273").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.D686).HasColumnName(@"D686").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired();
            Property(x => x.N249).HasColumnName(@"N249").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.D2348).HasColumnName(@"D2348").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2349).HasColumnName(@"D2349").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2350).HasColumnName(@"D2350").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2351).HasColumnName(@"D2351").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2352).HasColumnName(@"D2352").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.D2353).HasColumnName(@"D2353").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.D2354).HasColumnName(@"D2354").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D306).HasColumnName(@"D306").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D2355).HasColumnName(@"D2355").HasColumnType("bit").IsRequired();
            Property(x => x.D2356).HasColumnName(@"D2356").HasColumnType("bit").IsRequired();
            Property(x => x.N2731).HasColumnName(@"N273_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.N2491).HasColumnName(@"N249_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.N2492).HasColumnName(@"N249_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.N2732).HasColumnName(@"N273_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D3828).HasColumnName(@"D3828").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.N250).HasColumnName(@"N250").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D23542).HasColumnName(@"D2354_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
        }
    }

    // RISK_INCOME_TAXATION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskIncomeTaxationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskIncomeTaxation>
    {
        public RiskIncomeTaxationConfiguration()
            : this("dbo")
        {
        }

        public RiskIncomeTaxationConfiguration(string schema)
        {
            ToTable("RISK_INCOME_TAXATION", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskYearId).HasColumnName(@"RISK_YEAR_ID").HasColumnType("int").IsRequired();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.TaxRate).HasColumnName(@"TAX_RATE").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Income).HasColumnName(@"INCOME").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.TaxableIncome).HasColumnName(@"TAXABLE_INCOME").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.IncomeTax).HasColumnName(@"INCOME_TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.DeductedTax).HasColumnName(@"DEDUCTED_TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.TransferredTax).HasColumnName(@"TRANSFERRED_TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.RiskYear).WithMany(b => b.RiskIncomeTaxations).HasForeignKey(c => c.RiskYearId); // FK_RISK_INCOME_TAXATION_RISK_YEAR
        }
    }

    // RISK_LOCK
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskLockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskLock>
    {
        public RiskLockConfiguration()
            : this("dbo")
        {
        }

        public RiskLockConfiguration(string schema)
        {
            ToTable("RISK_LOCK", schema);
            HasKey(x => x.RiskLockId);

            Property(x => x.RiskLockId).HasColumnName(@"RISK_LOCK_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.AutoRemove).HasColumnName(@"AUTO_REMOVE").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RiskLocks).HasForeignKey(c => c.CycleId); // FK_RISK_LOCK_REQ_TYPE
        }
    }

    // RISK_MIME
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskMimeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskMime>
    {
        public RiskMimeConfiguration()
            : this("dbo")
        {
        }

        public RiskMimeConfiguration(string schema)
        {
            ToTable("RISK_MIME", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Extension).HasColumnName(@"EXTENSION").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Mime).HasColumnName(@"MIME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // RISK_NDFL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskNdflConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskNdfl>
    {
        public RiskNdflConfiguration()
            : this("dbo")
        {
        }

        public RiskNdflConfiguration(string schema)
        {
            ToTable("RISK_NDFL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.KindCode).HasColumnName(@"KIND_CODE").HasColumnType("int").IsRequired();
            Property(x => x.Qty).HasColumnName(@"QTY").HasColumnType("int").IsRequired();
            Property(x => x.DeductedTax).HasColumnName(@"DEDUCTED_TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.RemaindedTax).HasColumnName(@"REMAINDED_TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskNdfls).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_NDFL_RISK_CHECKER
        }
    }

    // RISK_NDFL2
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskNdfl2Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskNdfl2>
    {
        public RiskNdfl2Configuration()
            : this("dbo")
        {
        }

        public RiskNdfl2Configuration(string schema)
        {
            ToTable("RISK_NDFL2", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RiskN134).HasColumnName(@"RiskN134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.RiskD3).HasColumnName(@"RiskD3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.RiskN18).HasColumnName(@"RiskN18").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.V743).HasColumnName(@"V743").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Income).HasColumnName(@"INCOME").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Tax).HasColumnName(@"TAX").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.TaxRate).HasColumnName(@"TAX_RATE").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.RiskNdfl2).HasForeignKey(c => c.ShedJobId); // FK_RISK_NDFL2_SHED_JOB
        }
    }

    // RISK_PROXY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskProxyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskProxy>
    {
        public RiskProxyConfiguration()
            : this("dbo")
        {
        }

        public RiskProxyConfiguration(string schema)
        {
            ToTable("RISK_PROXY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.CommiterD686).HasColumnName(@"COMMITER_D686").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProxyD686).HasColumnName(@"PROXY_D686").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // RISK_VERSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskVersionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskVersion>
    {
        public RiskVersionConfiguration()
            : this("dbo")
        {
        }

        public RiskVersionConfiguration(string schema)
        {
            ToTable("RISK_VERSION", schema);
            HasKey(x => x.RiskVersionId);

            Property(x => x.RiskVersionId).HasColumnName(@"RISK_VERSION_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DbVersion).HasColumnName(@"DB_VERSION").HasColumnType("bigint").IsRequired();
        }
    }

    // RISK_WEB
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskWebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskWeb>
    {
        public RiskWebConfiguration()
            : this("dbo")
        {
        }

        public RiskWebConfiguration(string schema)
        {
            ToTable("RISK_WEB", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ctl).HasColumnName(@"Ctl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Redir).HasColumnName(@"Redir").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // RISK_YEAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskYearConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskYear>
    {
        public RiskYearConfiguration()
            : this("dbo")
        {
        }

        public RiskYearConfiguration(string schema)
        {
            ToTable("RISK_YEAR", schema);
            HasKey(x => x.RiskYearId);

            Property(x => x.RiskYearId).HasColumnName(@"RISK_YEAR_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.Qty).HasColumnName(@"QTY").HasColumnType("int").IsRequired();
            Property(x => x.QueryId).HasColumnName(@"QUERY_ID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskYears).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_YEAR_RISK_CHECKER
        }
    }

    // ROOM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RoomConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Room>
    {
        public RoomConfiguration()
            : this("dbo")
        {
        }

        public RoomConfiguration(string schema)
        {
            ToTable("ROOM", schema);
            HasKey(x => x.Roomid);

            Property(x => x.Roomid).HasColumnName(@"ROOMID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Roomguid).HasColumnName(@"ROOMGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Flatnumber).HasColumnName(@"FLATNUMBER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Flattype).HasColumnName(@"FLATTYPE").HasColumnType("int").IsRequired();
            Property(x => x.Roomnumber).HasColumnName(@"ROOMNUMBER").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Roomtype).HasColumnName(@"ROOMTYPE").HasColumnType("int").IsOptional();
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Houseguid).HasColumnName(@"HOUSEGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Normdoc).HasColumnName(@"NORMDOC").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Operstatus).HasColumnName(@"OPERSTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Roomcadnum).HasColumnName(@"ROOMCADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

    // ROOMTYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RoomtypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Roomtype>
    {
        public RoomtypeConfiguration()
            : this("dbo")
        {
        }

        public RoomtypeConfiguration(string schema)
        {
            ToTable("ROOMTYPE", schema);
            HasKey(x => x.Rmtypeid);

            Property(x => x.Rmtypeid).HasColumnName(@"RMTYPEID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // ServerIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServerIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServerIfn>
    {
        public ServerIfnConfiguration()
            : this("dbo")
        {
        }

        public ServerIfnConfiguration(string schema)
        {
            ToTable("ServerIfns", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ServerName).HasColumnName(@"ServerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServerDiscription).HasColumnName(@"ServerDiscription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServerIp).HasColumnName(@"ServerIp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ServiceWcfCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceWcfCommandConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceWcfCommand>
    {
        public ServiceWcfCommandConfiguration()
            : this("dbo")
        {
        }

        public ServiceWcfCommandConfiguration(string schema)
        {
            ToTable("ServiceWcfCommand", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdGroup).HasColumnName(@"IdGroup").HasColumnType("int").IsRequired();
            Property(x => x.IdClass).HasColumnName(@"IdClass").HasColumnType("int").IsRequired();
            Property(x => x.IdSobytieSystem).HasColumnName(@"IdSobytieSystem").HasColumnType("int").IsRequired();
            Property(x => x.DescriptionFull).HasColumnName(@"DescriptionFull").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DescriptionParam).HasColumnName(@"DescriptionParam").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Command).HasColumnName(@"Command").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.ClassOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdClass); // FK_ServiceWcfCommand_ClassOtdel
            HasRequired(a => a.GroupOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdGroup); // FK_ServiceWcfCommand_GroupOtdel
            HasRequired(a => a.SobytieOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdSobytieSystem); // FK_ServiceWcfCommand_SobytieOtdel
        }
    }

    // SHED_JOB
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJob>
    {
        public ShedJobConfiguration()
            : this("dbo")
        {
        }

        public ShedJobConfiguration(string schema)
        {
            ToTable("SHED_JOB", schema);
            HasKey(x => x.ShedJobId);

            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.ShedJobs).HasForeignKey(c => c.ReqTypeId); // FK_SHED_JOB_REQ_TYPE
        }
    }

    // SHED_JOB_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJobDatum>
    {
        public ShedJobDatumConfiguration()
            : this("dbo")
        {
        }

        public ShedJobDatumConfiguration(string schema)
        {
            ToTable("SHED_JOB_DATA", schema);
            HasKey(x => x.ShedJobDataId);

            Property(x => x.ShedJobDataId).HasColumnName(@"SHED_JOB_DATA_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.Field).HasColumnName(@"FIELD").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.ShedJobDatums).HasForeignKey(c => c.ShedJobId); // FK_SHED_JOB_DATA_SHED_JOB
        }
    }

    // SHED_JOB_LOG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJobLog>
    {
        public ShedJobLogConfiguration()
            : this("dbo")
        {
        }

        public ShedJobLogConfiguration(string schema)
        {
            ToTable("SHED_JOB_LOG", schema);
            HasKey(x => x.ShedJobLogId);

            Property(x => x.ShedJobLogId).HasColumnName(@"SHED_JOB_LOG_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.Field).HasColumnName(@"FIELD").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.ShedJobLogs).HasForeignKey(c => c.ShedJobId); // FK_SHED_JOB_LOG_SHED_JOB
        }
    }

    // SHED_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedReport>
    {
        public ShedReportConfiguration()
            : this("dbo")
        {
        }

        public ShedReportConfiguration(string schema)
        {
            ToTable("SHED_REPORT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Guide).HasColumnName(@"GUIDE").HasColumnType("xml").IsRequired();
        }
    }

    // SIGNATURE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignatureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Signature>
    {
        public SignatureConfiguration()
            : this("dbo")
        {
        }

        public SignatureConfiguration(string schema)
        {
            ToTable("SIGNATURE", schema);
            HasKey(x => x.SignatureId);

            Property(x => x.SignatureId).HasColumnName(@"SIGNATURE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SignerId).HasColumnName(@"SIGNER_ID").HasColumnType("int").IsRequired();
            Property(x => x.SignatureImage).HasColumnName(@"SIGNATURE_IMAGE").HasColumnType("image").IsRequired().HasMaxLength(2147483647);

            // Foreign keys
            HasRequired(a => a.Signer).WithMany(b => b.Signatures).HasForeignKey(c => c.SignerId); // FK_SIGNATURE_SIGNER
        }
    }

    // SIGNER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Signer>
    {
        public SignerConfiguration()
            : this("dbo")
        {
        }

        public SignerConfiguration(string schema)
        {
            ToTable("SIGNER", schema);
            HasKey(x => x.SignerId);

            Property(x => x.SignerId).HasColumnName(@"SIGNER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SignerExpr).HasColumnName(@"SIGNER_EXPR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.RegEx).HasColumnName(@"REG_EX").HasColumnType("bit").IsRequired();
            Property(x => x.SignerTitle).HasColumnName(@"SIGNER_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SealType).HasColumnName(@"SealType").HasColumnType("int").IsRequired();
            Property(x => x.HoriShift).HasColumnName(@"HoriShift").HasColumnType("float").IsRequired();
            Property(x => x.VertShift).HasColumnName(@"VertShift").HasColumnType("float").IsRequired();
        }
    }

    // SMEV_CAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevCar>
    {
        public SmevCarConfiguration()
            : this("dbo")
        {
        }

        public SmevCarConfiguration(string schema)
        {
            ToTable("SMEV_CAR", schema);
            HasKey(x => new { x.SmevCarId, x.SmevCarExpr, x.N1076, x.D900 });

            Property(x => x.SmevCarId).HasColumnName(@"SMEV_CAR_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevCarExpr).HasColumnName(@"SMEV_CAR_EXPR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N1076).HasColumnName(@"N1076").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D900).HasColumnName(@"D900").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // SMEV_CRED
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCredConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevCred>
    {
        public SmevCredConfiguration()
            : this("dbo")
        {
        }

        public SmevCredConfiguration(string schema)
        {
            ToTable("SMEV_CRED", schema);
            HasKey(x => x.SmevCredId);

            Property(x => x.SmevCredId).HasColumnName(@"SMEV_CRED_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevLogin).HasColumnName(@"SMEV_LOGIN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SmevPass).HasColumnName(@"SMEV_PASS").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Suser).HasColumnName(@"SUSER").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(255);
            Property(x => x.FdcUser).HasColumnName(@"FdcUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.CredChg).HasColumnName(@"CredChg").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion();
            Property(x => x.CredVer).HasColumnName(@"CredVer").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.PasswdValid).HasColumnName(@"PasswdValid").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SMEV_PARAM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevParamConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevParam>
    {
        public SmevParamConfiguration()
            : this("dbo")
        {
        }

        public SmevParamConfiguration(string schema)
        {
            ToTable("SMEV_PARAM", schema);
            HasKey(x => x.SmevParamId);

            Property(x => x.SmevParamId).HasColumnName(@"SMEV_PARAM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevParamCode).HasColumnName(@"SMEV_PARAM_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SmevParamValue).HasColumnName(@"SMEV_PARAM_VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SmevParamDescription).HasColumnName(@"SMEV_PARAM_DESCRIPTION").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // SMEV_REQ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevReqConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevReq>
    {
        public SmevReqConfiguration()
            : this("dbo")
        {
        }

        public SmevReqConfiguration(string schema)
        {
            ToTable("SMEV_REQ", schema);
            HasKey(x => x.SmevReqId);

            Property(x => x.SmevReqId).HasColumnName(@"SMEV_REQ_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.KeyValue).HasColumnName(@"KEY_VALUE").HasColumnType("bigint").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.SmevKey).HasColumnName(@"SMEV_KEY").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.SmevReqs).HasForeignKey(c => c.ReqTypeId); // FK_SMEV_REQ_REQ_TYPE
        }
    }

    // SMEV_RESPONSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevResponse>
    {
        public SmevResponseConfiguration()
            : this("dbo")
        {
        }

        public SmevResponseConfiguration(string schema)
        {
            ToTable("SMEV_RESPONSE", schema);
            HasKey(x => x.SmevResponseId);

            Property(x => x.SmevResponseId).HasColumnName(@"SMEV_RESPONSE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.SmevKey).HasColumnName(@"SMEV_KEY").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.FileName).HasColumnName(@"FILE_NAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.SmevResponses).HasForeignKey(c => c.ReqTypeId).WillCascadeOnDelete(false); // FK_SMEV_RESPONSE_REQ_TYPE
        }
    }

    // SobytieOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SobytieOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SobytieOtdel>
    {
        public SobytieOtdelConfiguration()
            : this("dbo")
        {
        }

        public SobytieOtdelConfiguration(string schema)
        {
            ToTable("SobytieOtdel", schema);
            HasKey(x => x.IdSobytieSystem);

            Property(x => x.IdSobytieSystem).HasColumnName(@"IdSobytieSystem").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DescriptionSobytie).HasColumnName(@"DescriptionSobytie").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SOCRBASE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SocrbaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Socrbase>
    {
        public SocrbaseConfiguration()
            : this("dbo")
        {
        }

        public SocrbaseConfiguration(string schema)
        {
            ToTable("SOCRBASE", schema);
            HasKey(x => x.KodTSt);

            Property(x => x.KodTSt).HasColumnName(@"KOD_T_ST").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SocrbaseLevel).HasColumnName(@"SOCRBASE_LEVEL").HasColumnType("int").IsRequired();
            Property(x => x.Scname).HasColumnName(@"SCNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Socrname).HasColumnName(@"SOCRNAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // StatusAnaliz
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusAnalizConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusAnaliz>
    {
        public StatusAnalizConfiguration()
            : this("dbo")
        {
        }

        public StatusAnalizConfiguration(string schema)
        {
            ToTable("StatusAnaliz", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessageAnaliz).HasColumnName(@"MessageAnaliz").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // StatusPriem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusPriemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusPriem>
    {
        public StatusPriemConfiguration()
            : this("dbo")
        {
        }

        public StatusPriemConfiguration(string schema)
        {
            ToTable("StatusPriem", schema);
            HasKey(x => x.Priznak);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Priznak).HasColumnName(@"Priznak").HasColumnType("tinyint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MessagePriem).HasColumnName(@"MessagePriem").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // StatusTrebOnIcass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusTrebOnIcassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusTrebOnIcass>
    {
        public StatusTrebOnIcassConfiguration()
            : this("dbo")
        {
        }

        public StatusTrebOnIcassConfiguration(string schema)
        {
            ToTable("StatusTrebOnIcass", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusText).HasColumnName(@"StatusText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // STEAD
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SteadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Stead>
    {
        public SteadConfiguration()
            : this("dbo")
        {
        }

        public SteadConfiguration(string schema)
        {
            ToTable("STEAD", schema);
            HasKey(x => x.Steadid);

            Property(x => x.Steadid).HasColumnName(@"STEADID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Steadguid).HasColumnName(@"STEADGUID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Number).HasColumnName(@"NUMBER").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Regioncode).HasColumnName(@"REGIONCODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Postalcode).HasColumnName(@"POSTALCODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.Ifnsfl).HasColumnName(@"IFNSFL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsfl).HasColumnName(@"TERRIFNSFL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Ifnsul).HasColumnName(@"IFNSUL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Terrifnsul).HasColumnName(@"TERRIFNSUL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Okato).HasColumnName(@"OKATO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Oktmo).HasColumnName(@"OKTMO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Updatedate).HasColumnName(@"UPDATEDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Parentguid).HasColumnName(@"PARENTGUID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Previd).HasColumnName(@"PREVID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Nextid).HasColumnName(@"NEXTID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Operstatus).HasColumnName(@"OPERSTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Startdate).HasColumnName(@"STARTDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"ENDDATE").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Normdoc).HasColumnName(@"NORMDOC").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Livestatus).HasColumnName(@"LIVESTATUS").HasColumnType("int").IsRequired();
            Property(x => x.Cadnum).HasColumnName(@"CADNUM").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Divtype).HasColumnName(@"DIVTYPE").HasColumnType("int").IsRequired();
        }
    }

    // Stone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StoneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Stone>
    {
        public StoneConfiguration()
            : this("dbo")
        {
        }

        public StoneConfiguration(string schema)
        {
            ToTable("Stone", schema);
            HasKey(x => x.IdStone);

            Property(x => x.IdStone).HasColumnName(@"IdStone").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Stone1).HasColumnName(@"Stone1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone2).HasColumnName(@"Stone2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone3).HasColumnName(@"Stone3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone4).HasColumnName(@"Stone4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone5).HasColumnName(@"Stone5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone6).HasColumnName(@"Stone6").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone7).HasColumnName(@"Stone7").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // STRSTAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StrstatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Strstat>
    {
        public StrstatConfiguration()
            : this("dbo")
        {
        }

        public StrstatConfiguration(string schema)
        {
            ToTable("STRSTAT", schema);
            HasKey(x => x.Strstatid);

            Property(x => x.Strstatid).HasColumnName(@"STRSTATID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"NAME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Shortname).HasColumnName(@"SHORTNAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
        }
    }

    // TableSysNumReshen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TableSysNumReshenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableSysNumReshen>
    {
        public TableSysNumReshenConfiguration()
            : this("dbo")
        {
        }

        public TableSysNumReshenConfiguration(string schema)
        {
            ToTable("TableSysNumReshen", schema);
            HasKey(x => x.D270);

            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdStatus1).HasColumnName(@"IdStatus_1").HasColumnType("int").IsOptional();
            Property(x => x.ErrorReshenie).HasColumnName(@"ErrorReshenie").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateBlokReshenie).HasColumnName(@"DateBlokReshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IdStatus2).HasColumnName(@"IdStatus_2").HasColumnType("int").IsOptional();
            Property(x => x.ErrorIncass).HasColumnName(@"ErrorIncass").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateBlokIncass).HasColumnName(@"DateBlokIncass").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusTrebOnIcass_IdStatus1).WithMany(b => b.TableSysNumReshens_IdStatus1).HasForeignKey(c => c.IdStatus1); // FK_TableSysNumReshen_StatusTrebOnIcass
            HasOptional(a => a.StatusTrebOnIcass_IdStatus2).WithMany(b => b.TableSysNumReshens_IdStatus2).HasForeignKey(c => c.IdStatus2).WillCascadeOnDelete(false); // FK_TableSysNumReshen_StatusTrebOnIcass_2
        }
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Template>
    {
        public TemplateConfiguration()
            : this("dbo")
        {
        }

        public TemplateConfiguration(string schema)
        {
            ToTable("Template", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdHeaders).HasColumnName(@"IdHeaders").HasColumnType("int").IsRequired();
            Property(x => x.IdBody).HasColumnName(@"IdBody").HasColumnType("int").IsRequired();
            Property(x => x.IdStone).HasColumnName(@"IdStone").HasColumnType("int").IsRequired();
            Property(x => x.DateCreateTemplate).HasColumnName(@"DateCreateTemplate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Body).WithMany(b => b.Templates).HasForeignKey(c => c.IdBody).WillCascadeOnDelete(false); // FK_Template_Body
            HasRequired(a => a.Header).WithMany(b => b.Templates).HasForeignKey(c => c.IdHeaders).WillCascadeOnDelete(false); // FK_Template_Headers
            HasRequired(a => a.Stone).WithMany(b => b.Templates).HasForeignKey(c => c.IdStone).WillCascadeOnDelete(false); // FK_Template_Stone
        }
    }

    // UseTableTemplateBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UseTableTemplateBdkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UseTableTemplateBdk>
    {
        public UseTableTemplateBdkConfiguration()
            : this("dbo")
        {
        }

        public UseTableTemplateBdkConfiguration(string schema)
        {
            ToTable("UseTableTemplateBdk", schema);
            HasKey(x => new { x.Id, x.Numerdocument });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Numerdocument).HasColumnName(@"Numerdocument").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N280).HasColumnName(@"N280").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D981).HasColumnName(@"D981").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Guid).HasColumnName(@"GUID").HasColumnType("uniqueidentifier").IsOptional();

        }
    }

    // VidDelaException
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VidDelaExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VidDelaException>
    {
        public VidDelaExceptionConfiguration()
            : this("dbo")
        {
        }

        public VidDelaExceptionConfiguration(string schema)
        {
            ToTable("VidDelaException", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Vid).HasColumnName(@"vid").HasColumnType("int").IsOptional();
        }
    }

    // WHD_DECL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdDeclConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhdDecl>
    {
        public WhdDeclConfiguration()
            : this("dbo")
        {
        }

        public WhdDeclConfiguration(string schema)
        {
            ToTable("WHD_DECL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RisksN134).HasColumnName(@"RisksN134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
        }
    }

    // WHD_FN212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdFn212Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhdFn212>
    {
        public WhdFn212Configuration()
            : this("dbo")
        {
        }

        public WhdFn212Configuration(string schema)
        {
            ToTable("WHD_FN212", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(160);
        }
    }

    // WHD_GAUGE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdGaugeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhdGauge>
    {
        public WhdGaugeConfiguration()
            : this("dbo")
        {
        }

        public WhdGaugeConfiguration(string schema)
        {
            ToTable("WHD_GAUGE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Parentid).HasColumnName(@"PARENTID").HasColumnType("int").IsOptional();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
        }
    }

    // WHD_VNP
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhdVnpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhdVnp>
    {
        public WhdVnpConfiguration()
            : this("dbo")
        {
        }

        public WhdVnpConfiguration(string schema)
        {
            ToTable("WHD_VNP", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N8491).HasColumnName(@"N849__1").HasColumnType("int").IsRequired();
            Property(x => x.N8496).HasColumnName(@"N849__6").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.N8495).HasColumnName(@"N849__5").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N84910).HasColumnName(@"N849__10").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N84911).HasColumnName(@"N849__11").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // WHF_ACCREQ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfAccreqConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhfAccreq>
    {
        public WhfAccreqConfiguration()
            : this("dbo")
        {
        }

        public WhfAccreqConfiguration(string schema)
        {
            ToTable("WHF_ACCREQ", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired();
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D440).HasColumnName(@"D440").HasColumnType("int").IsRequired();
            Property(x => x.D38076).HasColumnName(@"D3807_6").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Er).HasColumnName(@"ER").HasColumnType("bit").IsRequired();
            Property(x => x.N111).HasColumnName(@"N111").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Bankn134).HasColumnName(@"BANKN134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
        }
    }

    // WHF_GAPS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfGapConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhfGap>
    {
        public WhfGapConfiguration()
            : this("dbo")
        {
        }

        public WhfGapConfiguration(string schema)
        {
            ToTable("WHF_GAPS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.GaugeId).HasColumnName(@"GAUGE_ID").HasColumnType("int").IsRequired();
            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D40).HasColumnName(@"d40").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D41).HasColumnName(@"d41").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // WHF_VAT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhfVatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhfVat>
    {
        public WhfVatConfiguration()
            : this("dbo")
        {
        }

        public WhfVatConfiguration(string schema)
        {
            ToTable("WHF_VAT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.Declid).HasColumnName(@"DECLID").HasColumnType("int").IsRequired();
            Property(x => x.Gaugeid).HasColumnName(@"GAUGEID").HasColumnType("int").IsRequired();
            Property(x => x.Amount).HasColumnName(@"AMOUNT").HasColumnType("money").IsRequired().HasPrecision(19,4);
        }
    }

    // WHT_OPERATIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhtOperationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhtOperation>
    {
        public WhtOperationConfiguration()
            : this("dbo")
        {
        }

        public WhtOperationConfiguration(string schema)
        {
            ToTable("WHT_OPERATIONS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RisksN134).HasColumnName(@"RisksN134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D80).HasColumnName(@"D80").HasColumnType("int").IsRequired();
            Property(x => x.D40541).HasColumnName(@"D4054_1").HasColumnType("int").IsRequired();
            Property(x => x.D2702).HasColumnName(@"D270_2").HasColumnType("int").IsOptional();
            Property(x => x.D2701).HasColumnName(@"D270_1").HasColumnType("int").IsOptional();
            Property(x => x.N105).HasColumnName(@"N105").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(160);
            Property(x => x.N111).HasColumnName(@"N111").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.D883).HasColumnName(@"D88_3").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D884).HasColumnName(@"D88_4").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsOptional();
            Property(x => x.D882).HasColumnName(@"d88_2").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.R096).HasColumnName(@"R096").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.R097).HasColumnName(@"R097").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.N1232).HasColumnName(@"N123_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.D832).HasColumnName(@"D83_2").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.D833).HasColumnName(@"D83_3").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.R099).HasColumnName(@"R099").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.R105).HasColumnName(@"R105").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2500);
            Property(x => x.R098).HasColumnName(@"R098").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.D4232).HasColumnName(@"D4232").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
        }
    }

    // WHT_THRESHOLDS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WhtThresholdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WhtThreshold>
    {
        public WhtThresholdConfiguration()
            : this("dbo")
        {
        }

        public WhtThresholdConfiguration(string schema)
        {
            ToTable("WHT_THRESHOLDS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MinValue).HasColumnName(@"MinValue").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.MaxValue).HasColumnName(@"MaxValue").HasColumnType("money").IsRequired().HasPrecision(19,4);
        }
    }

    // WordDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WordDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WordDocument>
    {
        public WordDocumentConfiguration()
            : this("dbo")
        {
        }

        public WordDocumentConfiguration(string schema)
        {
            ToTable("WordDocument", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Numerdocument).HasColumnName(@"Numerdocument").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired();
            Property(x => x.Namefile).HasColumnName(@"Namefile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.NameDocument).WithMany(b => b.WordDocuments).HasForeignKey(c => c.IdNamedocument).WillCascadeOnDelete(false); // FK_WordDocument_NameDocument
        }
    }

    // XLCOLOR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlcolorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Xlcolor>
    {
        public XlcolorConfiguration()
            : this("dbo")
        {
        }

        public XlcolorConfiguration(string schema)
        {
            ToTable("XLCOLOR", schema);
            HasKey(x => x.Argb);

            Property(x => x.Argb).HasColumnName(@"ARGB").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Priority).HasColumnName(@"PRIORITY").HasColumnType("int").IsRequired();
            Property(x => x.Comment).HasColumnName(@"COMMENT").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
        }
    }

    // XL_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XlReport>
    {
        public XlReportConfiguration()
            : this("dbo")
        {
        }

        public XlReportConfiguration(string schema)
        {
            ToTable("XL_REPORT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1500);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsRequired().HasMaxLength(2147483647);
            Property(x => x.RiskMimeId).HasColumnName(@"RISK_MIME_ID").HasColumnType("int").IsRequired();
            Property(x => x.Ttl).HasColumnName(@"TTL").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskMime).WithMany(b => b.XlReports).HasForeignKey(c => c.RiskMimeId).WillCascadeOnDelete(false); // FK_XL_REPORT_RISK_MIME
        }
    }

    // XL_REPORT_ACL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportAclConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XlReportAcl>
    {
        public XlReportAclConfiguration()
            : this("dbo")
        {
        }

        public XlReportAclConfiguration(string schema)
        {
            ToTable("XL_REPORT_ACL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.XlReportId).HasColumnName(@"XL_REPORT_ID").HasColumnType("int").IsRequired();
            Property(x => x.ReportFilterId).HasColumnName(@"REPORT_FILTER_ID").HasColumnType("int").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.ReportFilter).WithMany(b => b.XlReportAcls).HasForeignKey(c => c.ReportFilterId).WillCascadeOnDelete(false); // FK_XL_REPORT_ACL_REPORT_FILTER
            HasRequired(a => a.XlReport).WithMany(b => b.XlReportAcls).HasForeignKey(c => c.XlReportId); // FK_XL_REPORT_ACL_XL_REPORT
        }
    }

    // XML_PARAMS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XmlParamConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XmlParam>
    {
        public XmlParamConfiguration()
            : this("dbo")
        {
        }

        public XmlParamConfiguration(string schema)
        {
            ToTable("XML_PARAMS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("xml").IsRequired();
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    #endregion

}
// </auto-generated>
