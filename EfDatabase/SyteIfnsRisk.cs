

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "EfDatabase\App.config"
//     Connection String Name: "RiskSyte"
//     Connection String:      "Data Source=i7751-app001;Initial Catalog=BDK77737751000070020000019757;Integrated Security=True;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Enterprise Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 10.50.6560.0

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ifns51.Risk
{

    #region Unit of work

    public interface IRisksContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AhalisBdk> AhalisBdks { get; set; } // AhalisBdk
        System.Data.Entity.DbSet<BankAccExclusion> BankAccExclusions { get; set; } // BANK_ACC_EXCLUSION
        System.Data.Entity.DbSet<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN
        System.Data.Entity.DbSet<BankDocument> BankDocuments { get; set; } // BANK_DOCUMENT
        System.Data.Entity.DbSet<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS
        System.Data.Entity.DbSet<Body> Bodies { get; set; } // Body
        System.Data.Entity.DbSet<CbrBank> CbrBanks { get; set; } // CBR_BANKS
        System.Data.Entity.DbSet<CbrBankRelevance> CbrBankRelevances { get; set; } // CBR_BANK_RELEVANCE
        System.Data.Entity.DbSet<ClassOtdel> ClassOtdels { get; set; } // ClassOtdel
        System.Data.Entity.DbSet<ConfigCode> ConfigCodes { get; set; } // CONFIG_CODE
        System.Data.Entity.DbSet<DbConfig> DbConfigs { get; set; } // DB_CONFIG
        System.Data.Entity.DbSet<Face> Faces { get; set; } // Face
        System.Data.Entity.DbSet<Fn1341> Fn1341 { get; set; } // fn1341
        System.Data.Entity.DbSet<Fn1341Trust> Fn1341Trust { get; set; } // FN1341_TRUST
        System.Data.Entity.DbSet<Fn18441> Fn18441 { get; set; } // FN18441
        System.Data.Entity.DbSet<Fn1903> Fn1903 { get; set; } // FN1903
        System.Data.Entity.DbSet<Fn3042> Fn3042 { get; set; } // FN3042
        System.Data.Entity.DbSet<Fn72Web> Fn72Web { get; set; } // FN72_WEB
        System.Data.Entity.DbSet<GroupOtdel> GroupOtdels { get; set; } // GroupOtdel
        System.Data.Entity.DbSet<Header> Headers { get; set; } // Headers
        System.Data.Entity.DbSet<Incass> Incasses { get; set; } // Incass
        System.Data.Entity.DbSet<JobDataDt> JobDataDts { get; set; } // JOB_DATA_DT
        System.Data.Entity.DbSet<JobDataInt> JobDataInts { get; set; } // JOB_DATA_INT
        System.Data.Entity.DbSet<JobDataStr> JobDataStrs { get; set; } // JOB_DATA_STR
        System.Data.Entity.DbSet<JobDatum> JobDatums { get; set; } // JOB_DATA
        System.Data.Entity.DbSet<LotusDoc> LotusDocs { get; set; } // LOTUS_DOCS
        System.Data.Entity.DbSet<LotusFile> LotusFiles { get; set; } // LOTUS_FILE
        System.Data.Entity.DbSet<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE
        System.Data.Entity.DbSet<NameDocument> NameDocuments { get; set; } // NameDocument
        System.Data.Entity.DbSet<RbReport> RbReports { get; set; } // RB_REPORT
        System.Data.Entity.DbSet<ReportFilter> ReportFilters { get; set; } // REPORT_FILTER
        System.Data.Entity.DbSet<ReqType> ReqTypes { get; set; } // REQ_TYPE
        System.Data.Entity.DbSet<Reshenie> Reshenies { get; set; } // Reshenie
        System.Data.Entity.DbSet<RiskChecker> RiskCheckers { get; set; } // RISK_CHECKER
        System.Data.Entity.DbSet<RiskCheckerAcc> RiskCheckerAccs { get; set; } // RISK_CHECKER_ACC
        System.Data.Entity.DbSet<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY
        System.Data.Entity.DbSet<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212
        System.Data.Entity.DbSet<RiskCycle> RiskCycles { get; set; } // RISK_CYCLE
        System.Data.Entity.DbSet<RiskDossier> RiskDossiers { get; set; } // RISK_DOSSIER
        System.Data.Entity.DbSet<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE
        System.Data.Entity.DbSet<RiskField> RiskFields { get; set; } // RISK_FIELDS
        System.Data.Entity.DbSet<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836
        System.Data.Entity.DbSet<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844
        System.Data.Entity.DbSet<RiskFn1903> RiskFn1903 { get; set; } // RISK_FN1903
        System.Data.Entity.DbSet<RiskFn205> RiskFn205 { get; set; } // RISK_FN205
        System.Data.Entity.DbSet<RiskFn206> RiskFn206 { get; set; } // RISK_FN206
        System.Data.Entity.DbSet<RiskFn210> RiskFn210 { get; set; } // RISK_FN210
        System.Data.Entity.DbSet<RiskFn211> RiskFn211 { get; set; } // RISK_FN211
        System.Data.Entity.DbSet<RiskFn212> RiskFn212 { get; set; } // RISK_FN212
        System.Data.Entity.DbSet<RiskFn236> RiskFn236 { get; set; } // RISK_FN236
        System.Data.Entity.DbSet<RiskFn245> RiskFn245 { get; set; } // RISK_FN245
        System.Data.Entity.DbSet<RiskFn71> RiskFn71 { get; set; } // RISK_FN71
        System.Data.Entity.DbSet<RiskFn72> RiskFn72 { get; set; } // RISK_FN72
        System.Data.Entity.DbSet<RiskFn74> RiskFn74 { get; set; } // RISK_FN74
        System.Data.Entity.DbSet<RiskLock> RiskLocks { get; set; } // RISK_LOCK
        System.Data.Entity.DbSet<RiskMime> RiskMimes { get; set; } // RISK_MIME
        System.Data.Entity.DbSet<RiskVersion> RiskVersions { get; set; } // RISK_VERSION
        System.Data.Entity.DbSet<RiskWeb> RiskWebs { get; set; } // RISK_WEB
        System.Data.Entity.DbSet<RiskYear> RiskYears { get; set; } // RISK_YEAR
        System.Data.Entity.DbSet<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand
        System.Data.Entity.DbSet<ShedJob> ShedJobs { get; set; } // SHED_JOB
        System.Data.Entity.DbSet<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA
        System.Data.Entity.DbSet<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG
        System.Data.Entity.DbSet<ShedReport> ShedReports { get; set; } // SHED_REPORT
        System.Data.Entity.DbSet<Signature> Signatures { get; set; } // SIGNATURE
        System.Data.Entity.DbSet<Signer> Signers { get; set; } // SIGNER
        System.Data.Entity.DbSet<SmevCar> SmevCars { get; set; } // SMEV_CAR
        System.Data.Entity.DbSet<SmevCred> SmevCreds { get; set; } // SMEV_CRED
        System.Data.Entity.DbSet<SmevParam> SmevParams { get; set; } // SMEV_PARAM
        System.Data.Entity.DbSet<SmevReq> SmevReqs { get; set; } // SMEV_REQ
        System.Data.Entity.DbSet<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE
        System.Data.Entity.DbSet<SobytieOtdel> SobytieOtdels { get; set; } // SobytieOtdel
        System.Data.Entity.DbSet<StatusTrebOnIcass> StatusTrebOnIcasses { get; set; } // StatusTrebOnIcass
        System.Data.Entity.DbSet<Stone> Stones { get; set; } // Stone
        System.Data.Entity.DbSet<TableSysNumReshen> TableSysNumReshens { get; set; } // TableSysNumReshen
        System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        System.Data.Entity.DbSet<UseTableTemplateBdk> UseTableTemplateBdks { get; set; } // UseTableTemplateBdk
        System.Data.Entity.DbSet<VatDatum> VatDatums { get; set; } // VAT_DATA
        System.Data.Entity.DbSet<VidDelaException> VidDelaExceptions { get; set; } // VidDelaException
        System.Data.Entity.DbSet<WordDocument> WordDocuments { get; set; } // WordDocument
        System.Data.Entity.DbSet<XlReport> XlReports { get; set; } // XL_REPORT
        System.Data.Entity.DbSet<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RisksContext : System.Data.Entity.DbContext, IRisksContext
    {
        public System.Data.Entity.DbSet<AhalisBdk> AhalisBdks { get; set; } // AhalisBdk
        public System.Data.Entity.DbSet<BankAccExclusion> BankAccExclusions { get; set; } // BANK_ACC_EXCLUSION
        public System.Data.Entity.DbSet<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN
        public System.Data.Entity.DbSet<BankDocument> BankDocuments { get; set; } // BANK_DOCUMENT
        public System.Data.Entity.DbSet<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS
        public System.Data.Entity.DbSet<Body> Bodies { get; set; } // Body
        public System.Data.Entity.DbSet<CbrBank> CbrBanks { get; set; } // CBR_BANKS
        public System.Data.Entity.DbSet<CbrBankRelevance> CbrBankRelevances { get; set; } // CBR_BANK_RELEVANCE
        public System.Data.Entity.DbSet<ClassOtdel> ClassOtdels { get; set; } // ClassOtdel
        public System.Data.Entity.DbSet<ConfigCode> ConfigCodes { get; set; } // CONFIG_CODE
        public System.Data.Entity.DbSet<DbConfig> DbConfigs { get; set; } // DB_CONFIG
        public System.Data.Entity.DbSet<Face> Faces { get; set; } // Face
        public System.Data.Entity.DbSet<Fn1341> Fn1341 { get; set; } // fn1341
        public System.Data.Entity.DbSet<Fn1341Trust> Fn1341Trust { get; set; } // FN1341_TRUST
        public System.Data.Entity.DbSet<Fn18441> Fn18441 { get; set; } // FN18441
        public System.Data.Entity.DbSet<Fn1903> Fn1903 { get; set; } // FN1903
        public System.Data.Entity.DbSet<Fn3042> Fn3042 { get; set; } // FN3042
        public System.Data.Entity.DbSet<Fn72Web> Fn72Web { get; set; } // FN72_WEB
        public System.Data.Entity.DbSet<GroupOtdel> GroupOtdels { get; set; } // GroupOtdel
        public System.Data.Entity.DbSet<Header> Headers { get; set; } // Headers
        public System.Data.Entity.DbSet<Incass> Incasses { get; set; } // Incass
        public System.Data.Entity.DbSet<JobDataDt> JobDataDts { get; set; } // JOB_DATA_DT
        public System.Data.Entity.DbSet<JobDataInt> JobDataInts { get; set; } // JOB_DATA_INT
        public System.Data.Entity.DbSet<JobDataStr> JobDataStrs { get; set; } // JOB_DATA_STR
        public System.Data.Entity.DbSet<JobDatum> JobDatums { get; set; } // JOB_DATA
        public System.Data.Entity.DbSet<LotusDoc> LotusDocs { get; set; } // LOTUS_DOCS
        public System.Data.Entity.DbSet<LotusFile> LotusFiles { get; set; } // LOTUS_FILE
        public System.Data.Entity.DbSet<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE
        public System.Data.Entity.DbSet<NameDocument> NameDocuments { get; set; } // NameDocument
        public System.Data.Entity.DbSet<RbReport> RbReports { get; set; } // RB_REPORT
        public System.Data.Entity.DbSet<ReportFilter> ReportFilters { get; set; } // REPORT_FILTER
        public System.Data.Entity.DbSet<ReqType> ReqTypes { get; set; } // REQ_TYPE
        public System.Data.Entity.DbSet<Reshenie> Reshenies { get; set; } // Reshenie
        public System.Data.Entity.DbSet<RiskChecker> RiskCheckers { get; set; } // RISK_CHECKER
        public System.Data.Entity.DbSet<RiskCheckerAcc> RiskCheckerAccs { get; set; } // RISK_CHECKER_ACC
        public System.Data.Entity.DbSet<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY
        public System.Data.Entity.DbSet<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212
        public System.Data.Entity.DbSet<RiskCycle> RiskCycles { get; set; } // RISK_CYCLE
        public System.Data.Entity.DbSet<RiskDossier> RiskDossiers { get; set; } // RISK_DOSSIER
        public System.Data.Entity.DbSet<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE
        public System.Data.Entity.DbSet<RiskField> RiskFields { get; set; } // RISK_FIELDS
        public System.Data.Entity.DbSet<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836
        public System.Data.Entity.DbSet<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844
        public System.Data.Entity.DbSet<RiskFn1903> RiskFn1903 { get; set; } // RISK_FN1903
        public System.Data.Entity.DbSet<RiskFn205> RiskFn205 { get; set; } // RISK_FN205
        public System.Data.Entity.DbSet<RiskFn206> RiskFn206 { get; set; } // RISK_FN206
        public System.Data.Entity.DbSet<RiskFn210> RiskFn210 { get; set; } // RISK_FN210
        public System.Data.Entity.DbSet<RiskFn211> RiskFn211 { get; set; } // RISK_FN211
        public System.Data.Entity.DbSet<RiskFn212> RiskFn212 { get; set; } // RISK_FN212
        public System.Data.Entity.DbSet<RiskFn236> RiskFn236 { get; set; } // RISK_FN236
        public System.Data.Entity.DbSet<RiskFn245> RiskFn245 { get; set; } // RISK_FN245
        public System.Data.Entity.DbSet<RiskFn71> RiskFn71 { get; set; } // RISK_FN71
        public System.Data.Entity.DbSet<RiskFn72> RiskFn72 { get; set; } // RISK_FN72
        public System.Data.Entity.DbSet<RiskFn74> RiskFn74 { get; set; } // RISK_FN74
        public System.Data.Entity.DbSet<RiskLock> RiskLocks { get; set; } // RISK_LOCK
        public System.Data.Entity.DbSet<RiskMime> RiskMimes { get; set; } // RISK_MIME
        public System.Data.Entity.DbSet<RiskVersion> RiskVersions { get; set; } // RISK_VERSION
        public System.Data.Entity.DbSet<RiskWeb> RiskWebs { get; set; } // RISK_WEB
        public System.Data.Entity.DbSet<RiskYear> RiskYears { get; set; } // RISK_YEAR
        public System.Data.Entity.DbSet<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand
        public System.Data.Entity.DbSet<ShedJob> ShedJobs { get; set; } // SHED_JOB
        public System.Data.Entity.DbSet<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA
        public System.Data.Entity.DbSet<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG
        public System.Data.Entity.DbSet<ShedReport> ShedReports { get; set; } // SHED_REPORT
        public System.Data.Entity.DbSet<Signature> Signatures { get; set; } // SIGNATURE
        public System.Data.Entity.DbSet<Signer> Signers { get; set; } // SIGNER
        public System.Data.Entity.DbSet<SmevCar> SmevCars { get; set; } // SMEV_CAR
        public System.Data.Entity.DbSet<SmevCred> SmevCreds { get; set; } // SMEV_CRED
        public System.Data.Entity.DbSet<SmevParam> SmevParams { get; set; } // SMEV_PARAM
        public System.Data.Entity.DbSet<SmevReq> SmevReqs { get; set; } // SMEV_REQ
        public System.Data.Entity.DbSet<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE
        public System.Data.Entity.DbSet<SobytieOtdel> SobytieOtdels { get; set; } // SobytieOtdel
        public System.Data.Entity.DbSet<StatusTrebOnIcass> StatusTrebOnIcasses { get; set; } // StatusTrebOnIcass
        public System.Data.Entity.DbSet<Stone> Stones { get; set; } // Stone
        public System.Data.Entity.DbSet<TableSysNumReshen> TableSysNumReshens { get; set; } // TableSysNumReshen
        public System.Data.Entity.DbSet<Template> Templates { get; set; } // Template
        public System.Data.Entity.DbSet<UseTableTemplateBdk> UseTableTemplateBdks { get; set; } // UseTableTemplateBdk
        public System.Data.Entity.DbSet<VatDatum> VatDatums { get; set; } // VAT_DATA
        public System.Data.Entity.DbSet<VidDelaException> VidDelaExceptions { get; set; } // VidDelaException
        public System.Data.Entity.DbSet<WordDocument> WordDocuments { get; set; } // WordDocument
        public System.Data.Entity.DbSet<XlReport> XlReports { get; set; } // XL_REPORT
        public System.Data.Entity.DbSet<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL

        static RisksContext()
        {
            System.Data.Entity.Database.SetInitializer<RisksContext>(null);
        }

        public RisksContext()
            : base("Name=RiskSyte")
        {
        }

        public RisksContext(string connectionString)
            : base(connectionString)
        {
        }

        public RisksContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public RisksContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public RisksContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AhalisBdkConfiguration());
            modelBuilder.Configurations.Add(new BankAccExclusionConfiguration());
            modelBuilder.Configurations.Add(new BankAccPlanConfiguration());
            modelBuilder.Configurations.Add(new BankDocumentConfiguration());
            modelBuilder.Configurations.Add(new BankOperationConfiguration());
            modelBuilder.Configurations.Add(new BodyConfiguration());
            modelBuilder.Configurations.Add(new CbrBankConfiguration());
            modelBuilder.Configurations.Add(new CbrBankRelevanceConfiguration());
            modelBuilder.Configurations.Add(new ClassOtdelConfiguration());
            modelBuilder.Configurations.Add(new ConfigCodeConfiguration());
            modelBuilder.Configurations.Add(new DbConfigConfiguration());
            modelBuilder.Configurations.Add(new FaceConfiguration());
            modelBuilder.Configurations.Add(new Fn1341Configuration());
            modelBuilder.Configurations.Add(new Fn1341TrustConfiguration());
            modelBuilder.Configurations.Add(new Fn18441Configuration());
            modelBuilder.Configurations.Add(new Fn1903Configuration());
            modelBuilder.Configurations.Add(new Fn3042Configuration());
            modelBuilder.Configurations.Add(new Fn72WebConfiguration());
            modelBuilder.Configurations.Add(new GroupOtdelConfiguration());
            modelBuilder.Configurations.Add(new HeaderConfiguration());
            modelBuilder.Configurations.Add(new IncassConfiguration());
            modelBuilder.Configurations.Add(new JobDataDtConfiguration());
            modelBuilder.Configurations.Add(new JobDataIntConfiguration());
            modelBuilder.Configurations.Add(new JobDataStrConfiguration());
            modelBuilder.Configurations.Add(new JobDatumConfiguration());
            modelBuilder.Configurations.Add(new LotusDocConfiguration());
            modelBuilder.Configurations.Add(new LotusFileConfiguration());
            modelBuilder.Configurations.Add(new LotusSequenceConfiguration());
            modelBuilder.Configurations.Add(new NameDocumentConfiguration());
            modelBuilder.Configurations.Add(new RbReportConfiguration());
            modelBuilder.Configurations.Add(new ReportFilterConfiguration());
            modelBuilder.Configurations.Add(new ReqTypeConfiguration());
            modelBuilder.Configurations.Add(new ReshenieConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerAccConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerHistoryConfiguration());
            modelBuilder.Configurations.Add(new RiskCheckerTo212Configuration());
            modelBuilder.Configurations.Add(new RiskCycleConfiguration());
            modelBuilder.Configurations.Add(new RiskDossierConfiguration());
            modelBuilder.Configurations.Add(new RiskFailureConfiguration());
            modelBuilder.Configurations.Add(new RiskFieldConfiguration());
            modelBuilder.Configurations.Add(new RiskFn1836Configuration());
            modelBuilder.Configurations.Add(new RiskFn1844Configuration());
            modelBuilder.Configurations.Add(new RiskFn1903Configuration());
            modelBuilder.Configurations.Add(new RiskFn205Configuration());
            modelBuilder.Configurations.Add(new RiskFn206Configuration());
            modelBuilder.Configurations.Add(new RiskFn210Configuration());
            modelBuilder.Configurations.Add(new RiskFn211Configuration());
            modelBuilder.Configurations.Add(new RiskFn212Configuration());
            modelBuilder.Configurations.Add(new RiskFn236Configuration());
            modelBuilder.Configurations.Add(new RiskFn245Configuration());
            modelBuilder.Configurations.Add(new RiskFn71Configuration());
            modelBuilder.Configurations.Add(new RiskFn72Configuration());
            modelBuilder.Configurations.Add(new RiskFn74Configuration());
            modelBuilder.Configurations.Add(new RiskLockConfiguration());
            modelBuilder.Configurations.Add(new RiskMimeConfiguration());
            modelBuilder.Configurations.Add(new RiskVersionConfiguration());
            modelBuilder.Configurations.Add(new RiskWebConfiguration());
            modelBuilder.Configurations.Add(new RiskYearConfiguration());
            modelBuilder.Configurations.Add(new ServiceWcfCommandConfiguration());
            modelBuilder.Configurations.Add(new ShedJobConfiguration());
            modelBuilder.Configurations.Add(new ShedJobDatumConfiguration());
            modelBuilder.Configurations.Add(new ShedJobLogConfiguration());
            modelBuilder.Configurations.Add(new ShedReportConfiguration());
            modelBuilder.Configurations.Add(new SignatureConfiguration());
            modelBuilder.Configurations.Add(new SignerConfiguration());
            modelBuilder.Configurations.Add(new SmevCarConfiguration());
            modelBuilder.Configurations.Add(new SmevCredConfiguration());
            modelBuilder.Configurations.Add(new SmevParamConfiguration());
            modelBuilder.Configurations.Add(new SmevReqConfiguration());
            modelBuilder.Configurations.Add(new SmevResponseConfiguration());
            modelBuilder.Configurations.Add(new SobytieOtdelConfiguration());
            modelBuilder.Configurations.Add(new StatusTrebOnIcassConfiguration());
            modelBuilder.Configurations.Add(new StoneConfiguration());
            modelBuilder.Configurations.Add(new TableSysNumReshenConfiguration());
            modelBuilder.Configurations.Add(new TemplateConfiguration());
            modelBuilder.Configurations.Add(new UseTableTemplateBdkConfiguration());
            modelBuilder.Configurations.Add(new VatDatumConfiguration());
            modelBuilder.Configurations.Add(new VidDelaExceptionConfiguration());
            modelBuilder.Configurations.Add(new WordDocumentConfiguration());
            modelBuilder.Configurations.Add(new XlReportConfiguration());
            modelBuilder.Configurations.Add(new XlReportAclConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AhalisBdkConfiguration(schema));
            modelBuilder.Configurations.Add(new BankAccExclusionConfiguration(schema));
            modelBuilder.Configurations.Add(new BankAccPlanConfiguration(schema));
            modelBuilder.Configurations.Add(new BankDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new BankOperationConfiguration(schema));
            modelBuilder.Configurations.Add(new BodyConfiguration(schema));
            modelBuilder.Configurations.Add(new CbrBankConfiguration(schema));
            modelBuilder.Configurations.Add(new CbrBankRelevanceConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new ConfigCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new DbConfigConfiguration(schema));
            modelBuilder.Configurations.Add(new FaceConfiguration(schema));
            modelBuilder.Configurations.Add(new Fn1341Configuration(schema));
            modelBuilder.Configurations.Add(new Fn1341TrustConfiguration(schema));
            modelBuilder.Configurations.Add(new Fn18441Configuration(schema));
            modelBuilder.Configurations.Add(new Fn1903Configuration(schema));
            modelBuilder.Configurations.Add(new Fn3042Configuration(schema));
            modelBuilder.Configurations.Add(new Fn72WebConfiguration(schema));
            modelBuilder.Configurations.Add(new GroupOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new HeaderConfiguration(schema));
            modelBuilder.Configurations.Add(new IncassConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataDtConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataIntConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDataStrConfiguration(schema));
            modelBuilder.Configurations.Add(new JobDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusDocConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusFileConfiguration(schema));
            modelBuilder.Configurations.Add(new LotusSequenceConfiguration(schema));
            modelBuilder.Configurations.Add(new NameDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new RbReportConfiguration(schema));
            modelBuilder.Configurations.Add(new ReportFilterConfiguration(schema));
            modelBuilder.Configurations.Add(new ReqTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReshenieConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerAccConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerHistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskCheckerTo212Configuration(schema));
            modelBuilder.Configurations.Add(new RiskCycleConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskDossierConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFailureConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFieldConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskFn1836Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn1844Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn1903Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn205Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn206Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn210Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn211Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn212Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn236Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn245Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn71Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn72Configuration(schema));
            modelBuilder.Configurations.Add(new RiskFn74Configuration(schema));
            modelBuilder.Configurations.Add(new RiskLockConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskMimeConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskVersionConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskWebConfiguration(schema));
            modelBuilder.Configurations.Add(new RiskYearConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiceWcfCommandConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedJobLogConfiguration(schema));
            modelBuilder.Configurations.Add(new ShedReportConfiguration(schema));
            modelBuilder.Configurations.Add(new SignatureConfiguration(schema));
            modelBuilder.Configurations.Add(new SignerConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevCarConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevCredConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevParamConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevReqConfiguration(schema));
            modelBuilder.Configurations.Add(new SmevResponseConfiguration(schema));
            modelBuilder.Configurations.Add(new SobytieOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusTrebOnIcassConfiguration(schema));
            modelBuilder.Configurations.Add(new StoneConfiguration(schema));
            modelBuilder.Configurations.Add(new TableSysNumReshenConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new UseTableTemplateBdkConfiguration(schema));
            modelBuilder.Configurations.Add(new VatDatumConfiguration(schema));
            modelBuilder.Configurations.Add(new VidDelaExceptionConfiguration(schema));
            modelBuilder.Configurations.Add(new WordDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new XlReportConfiguration(schema));
            modelBuilder.Configurations.Add(new XlReportAclConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class RisksContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<RisksContext>
    {
        public RisksContext Create()
        {
            return new RisksContext();
        }
    }

    #endregion

    #region POCO classes

    // AhalisBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AhalisBdk
    {
        public int Idtable { get; set; } // Idtable (Primary key)
        public string DbName1 { get; set; } // DbName_1 (length: 128)
        public string VerConteiner1 { get; set; } // VerConteiner_1 (length: 11)
        public string Rus1 { get; set; } // RUS_1 (length: 128)
        public string N2791 { get; set; } // N279_1 (length: 4)
        public string D27021 { get; set; } // D2702_1 (length: 1024)
        public int? Viddela1 { get; set; } // Viddela_1
        public int? D3970 { get; set; } // D3970
        public byte? D09 { get; set; } // D09
        public System.DateTime? D41 { get; set; } // D41
        public string N2792 { get; set; } // N279_2 (length: 4)
        public int? N1 { get; set; } // N1
        public string N134 { get; set; } // N134 (length: 12)
        public string D3 { get; set; } // D3 (length: 9)
        public string N1002 { get; set; } // N1002 (length: 15)
        public string N18 { get; set; } // N18 (length: 128)
        public int? Idanalis { get; set; } // idanalis
        public string MessageError { get; set; } // MessageError
        public System.DateTime? DataError { get; set; } // DataError
        public int? Idok { get; set; } // idok
        public string MessageOk { get; set; } // MessageOk
        public System.DateTime? DataOk { get; set; } // DataOk
        public int? NumDelo { get; set; } // NumDelo

        // Foreign keys

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [AhalisBdk].([Idanalis]) (FK_AhalisBdk_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Idanalis { get; set; } // FK_AhalisBdk_StatusTrebOnIcass

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [AhalisBdk].([Idok]) (FK_AhalisBdk1_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_Idok { get; set; } // FK_AhalisBdk1_StatusTrebOnIcass
    }

    // The table 'AnalizDuble' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // AnalizDuble
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AnalizDuble
    {
        public int? O1 { get; set; } // O1
        public int? O2 { get; set; } // O2
        public string N134 { get; set; } // n134 (length: 12)
        public int? D3971 { get; set; } // D3971
        public byte? D09 { get; set; } // D09
        public int? N13 { get; set; } // N1_3
        public int? N12 { get; set; } // N1_2
        public int? N11 { get; set; } // N1_1
        public System.DateTime? D40 { get; set; } // D40
        public string N279 { get; set; } // N279 (length: 4)
        public string D05 { get; set; } // D05 (length: 300)
        public short? D428 { get; set; } // D428
        public short? N269 { get; set; } // N269
        public System.DateTime? D85 { get; set; } // D85
        public string N2792 { get; set; } // N279_2 (length: 4)
        public int? D39712 { get; set; } // D3971_2
        public int? D270 { get; set; } // D270
        public string S06 { get; set; } // S06 (length: 35)
        public string D4127 { get; set; } // D4127 (length: 35)
        public int? D2702 { get; set; } // D270_2
        public int? D39711 { get; set; } // D3971_1
        public string D3 { get; set; } // D3 (length: 9)
        public int? D1810 { get; set; } // D1810
        public System.DateTime? D41 { get; set; } // D41
        public string S875 { get; set; } // S875 (length: 300)
        public int? D3970 { get; set; } // D3970
    }

    // BANK_ACC_EXCLUSION
    ///<summary>
    /// Причина исключения счета из ППА анализа (депозиты и т.д)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccExclusion
    {

        ///<summary>
        /// УН причины
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Описание причины исключения счета из анализа
        ///</summary>
        public string Title { get; set; } // TITLE (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child BankAccPlans where [BANK_ACC_PLAN].[BANK_ACC_EXCLUSION_ID] point to this entity (FK_BANK_ACC_PLAN_BANK_ACC_PLAN)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BankAccPlan> BankAccPlans { get; set; } // BANK_ACC_PLAN.FK_BANK_ACC_PLAN_BANK_ACC_PLAN

        public BankAccExclusion()
        {
            BankAccPlans = new System.Collections.Generic.List<BankAccPlan>();
        }
    }

    // BANK_ACC_PLAN
    ///<summary>
    /// План счетов банка. С ссылками на особенности анализа счета
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccPlan
    {

        ///<summary>
        /// Номер счета
        ///</summary>
        public string N89 { get; set; } // N89 (Primary key) (length: 5)

        ///<summary>
        /// Описание
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1024)

        ///<summary>
        /// УН причины особенностей обработки
        ///</summary>
        public int? BankAccExclusionId { get; set; } // BANK_ACC_EXCLUSION_ID

        // Foreign keys

        /// <summary>
        /// Parent BankAccExclusion pointed by [BANK_ACC_PLAN].([BankAccExclusionId]) (FK_BANK_ACC_PLAN_BANK_ACC_PLAN)
        /// </summary>
        public virtual BankAccExclusion BankAccExclusion { get; set; } // FK_BANK_ACC_PLAN_BANK_ACC_PLAN
    }

    // BANK_DOCUMENT
    ///<summary>
    /// Перечень условных обозначений (шифров) документов,
    /// проводимых по счетам в кредитных организациях
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankDocument
    {

        ///<summary>
        /// Условные цифровые обозначения документов
        ///</summary>
        public string D4232 { get; set; } // D4232 (Primary key) (length: 2)

        ///<summary>
        /// Наименование документов, по которым отражены операции
        ///</summary>
        public string Title { get; set; } // TITLE (length: 512)
    }

    // BANK_OPERATIONS
    ///<summary>
    /// Суммарные обороты по банку по годам
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankOperation
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН контрагента для анализа
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Год совершения операции
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// Расход
        ///</summary>
        public decimal D832 { get; set; } // D83_2

        ///<summary>
        /// Приход
        ///</summary>
        public decimal D833 { get; set; } // D83_3

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [BANK_OPERATIONS].([RiskCheckerId]) (FK_BANK_OPERATIONS_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_BANK_OPERATIONS_RISK_CHECKER
    }

    // Body
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Body
    {
        public int IdBody { get; set; } // IdBody (Primary key)
        public string BodyGl1 { get; set; } // BodyGl1
        public string BodyGl2 { get; set; } // BodyGl2
        public string BodyGl3 { get; set; } // BodyGl3
        public string BodyGl4 { get; set; } // BodyGl4
        public string BodyGl5 { get; set; } // BodyGl5
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdBody] point to this entity (FK_Template_Body)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Body

        public Body()
        {
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // CBR_BANKS
    ///<summary>
    /// Справочник соответствия регистрационных номеров банка по КГРКО внутренним кодам кредитных организаций
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBank
    {

        ///<summary>
        /// Регистрационный номер банка по КГРКО
        ///</summary>
        public int D38076 { get; set; } // D3807_6 (Primary key)

        ///<summary>
        /// Внутренний код банка ЦБ РФ
        ///</summary>
        public decimal InternalCode { get; set; } // INTERNAL_CODE
    }

    // CBR_BANK_RELEVANCE
    ///<summary>
    /// Дата актуальности справочника ЦБ РФ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankRelevance
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int CbrBankRelevanceId { get; set; } // CBR_BANK_RELEVANCE_ID (Primary key)

        ///<summary>
        /// Дата запроса на web-сервис ЦБ РФ
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Дата актуальности справочника по данным ЦБ РФ.
        ///</summary>
        public System.DateTime D851 { get; set; } // D85_1
    }

    // ClassOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassOtdel
    {
        public int IdClass { get; set; } // IdClass (Primary key)
        public string ClassLanguage { get; set; } // ClassLanguage (length: 128)
        public string ClassDescription { get; set; } // ClassDescription
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdClass] point to this entity (FK_ServiceWcfCommand_ClassOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_ClassOtdel

        public ClassOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // CONFIG_CODE
    ///<summary>
    /// Конфигурация системы (пути к каталогам для вывода и т.д.)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConfigCode
    {

        ///<summary>
        /// УН кода конфигурации
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название кода
        ///</summary>
        public string Title { get; set; } // TITLE (length: 50)

        ///<summary>
        /// Описание кода
        ///</summary>
        public string Description { get; set; } // DESCRIPTION (length: 512)

        ///<summary>
        /// Скрыть из интерфейса
        ///</summary>
        public bool Hide { get; set; } // HIDE

        ///<summary>
        /// Значение параметра
        ///</summary>
        public string Value { get; set; } // VALUE (length: 512)

        public ConfigCode()
        {
            Hide = false;
        }
    }

    // DB_CONFIG
    ///<summary>
    /// Конфигурация способа соединения с базой Taxes (тестовый
    /// или рабочий набор баз)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DbConfig
    {

        ///<summary>
        /// УН конфигурации
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код конфигурации
        ///</summary>
        public string Code { get; set; } // CODE (length: 15)

        ///<summary>
        /// Описание конфигурации
        ///</summary>
        public string Title { get; set; } // TITLE (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn71 where [RISK_FN71].[DB_CONFIG_ID] point to this entity (FK_RISK_FN71_DB_CONFIG)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn71> RiskFn71 { get; set; } // RISK_FN71.FK_RISK_FN71_DB_CONFIG

        public DbConfig()
        {
            RiskFn71 = new System.Collections.Generic.List<RiskFn71>();
        }
    }

    // Face
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Face
    {
        public int Id { get; set; } // Id (Primary key)
        public int? N1Old { get; set; } // N1old
        public int? N1New { get; set; } // N1new
        public string Messagee { get; set; } // Messagee
        public System.DateTime? DateFace { get; set; } // DateFace
    }

    // fn1341
    ///<summary>
    /// Коды ВЭД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341
    {

        ///<summary>
        /// УН ВЭД
        ///</summary>
        public int D3480 { get; set; } // D3480 (Primary key)

        ///<summary>
        /// Код ВЭД
        ///</summary>
        public string D3481 { get; set; } // D3481 (length: 20)

        ///<summary>
        /// Название вида деятельности
        ///</summary>
        public string D3482 { get; set; } // D3482 (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn206 where [RISK_FN206].[D3480] point to this entity (FK_RISK_FN206_fn1341)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn206> RiskFn206 { get; set; } // RISK_FN206.FK_RISK_FN206_fn1341

        public Fn1341()
        {
            RiskFn206 = new System.Collections.Generic.List<RiskFn206>();
        }
    }

    // FN1341_TRUST
    ///<summary>
    /// Перечень &quot;доверенных&quot; кодов ОК ВЭД. Отменяет ППА организаций с кодами ВЭД, начинающихся на перечисленные в D3481 этой таблицы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341Trust
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Fn1341TrustId { get; set; } // FN1341_TRUST_ID (Primary key)

        ///<summary>
        /// Доверенный код ВЭД
        ///</summary>
        public string D3481 { get; set; } // D3481 (length: 20)

        ///<summary>
        /// Сообщение, выводимое вместо установочных данных на эту организацию
        ///</summary>
        public string Reason { get; set; } // REASON (length: 100)
    }

    // FN18441
    ///<summary>
    /// Причины прекращения деятельности
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn18441
    {

        ///<summary>
        /// УН причины прекращения деятельности
        ///</summary>
        public int N18441 { get; set; } // N18441 (Primary key)

        ///<summary>
        /// Наименование причины прекращения деятельности
        ///</summary>
        public string N18442 { get; set; } // N18442 (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn1844 where [RISK_FN1844].[N18441] point to this entity (FK_RISK_FN1844_FN184411)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1844> RiskFn1844 { get; set; } // RISK_FN1844.FK_RISK_FN1844_FN184411

        public Fn18441()
        {
            RiskFn1844 = new System.Collections.Generic.List<RiskFn1844>();
        }
    }

    // FN1903
    ///<summary>
    /// Статус юридических лиц
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1903
    {

        ///<summary>
        /// УН записи о статусе лица
        ///</summary>
        public int S2123 { get; set; } // S2123 (Primary key)

        ///<summary>
        /// Код статуса
        ///</summary>
        public string S2125 { get; set; } // S2125 (length: 10)

        ///<summary>
        /// Полное наименование статуса
        ///</summary>
        public string S2126 { get; set; } // S2126 (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn210 where [RISK_FN210].[S2123] point to this entity (FK_RISK_FN210_FN1903)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn210> RiskFn210 { get; set; } // RISK_FN210.FK_RISK_FN210_FN1903

        public Fn1903()
        {
            RiskFn210 = new System.Collections.Generic.List<RiskFn210>();
        }
    }

    // FN3042
    ///<summary>
    /// Справочник категорий ФЛ-представителей ЮЛ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn3042
    {

        ///<summary>
        /// УН записи о категориях ФЛ
        ///</summary>
        public int N1525 { get; set; } // N1525 (Primary key)

        ///<summary>
        /// Код категорий ФЛ
        ///</summary>
        public string N1526 { get; set; } // N1526 (length: 2)

        ///<summary>
        /// Наименование категории
        ///</summary>
        public string N1527 { get; set; } // N1527 (length: 100)

        ///<summary>
        /// Дата начала
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// Дата окончания
        ///</summary>
        public System.DateTime? D41 { get; set; } // D41

        ///<summary>
        /// Признак автоматической синхронизации
        ///</summary>
        public byte? Synch { get; set; } // Synch

        ///<summary>
        /// федеральный код
        ///</summary>
        public int? SystemId { get; set; } // system_id

        ///<summary>
        /// примечание
        ///</summary>
        public string Prim { get; set; } // Prim (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1525] point to this entity (FK_RISK_FN245_FN3042)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245 { get; set; } // RISK_FN245.FK_RISK_FN245_FN3042

        public Fn3042()
        {
            RiskFn245 = new System.Collections.Generic.List<RiskFn245>();
        }
    }

    // FN72_WEB
    ///<summary>
    /// Связка между таблицами FN72 и RISK_WEB
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn72Web
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН отдела
        ///</summary>
        public int N274 { get; set; } // N274

        ///<summary>
        /// УН доступного View
        ///</summary>
        public int RiskWebId { get; set; } // RISK_WEB_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskFn72 pointed by [FN72_WEB].([N274]) (FK_FN72_WEB_RISK_FN72)
        /// </summary>
        public virtual RiskFn72 RiskFn72 { get; set; } // FK_FN72_WEB_RISK_FN72

        /// <summary>
        /// Parent RiskWeb pointed by [FN72_WEB].([RiskWebId]) (FK_FN72_WEB_RISK_WEB)
        /// </summary>
        public virtual RiskWeb RiskWeb { get; set; } // FK_FN72_WEB_RISK_WEB
    }

    // GroupOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupOtdel
    {
        public int IdGroup { get; set; } // IdGroup (Primary key)
        public string GroupDescription { get; set; } // GroupDescription
        public string NameGroup { get; set; } // NameGroup (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdGroup] point to this entity (FK_ServiceWcfCommand_GroupOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_GroupOtdel

        public GroupOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // Headers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Header
    {
        public int IdHeaders { get; set; } // IdHeaders (Primary key)
        public string TextHeade1 { get; set; } // TextHeade1
        public string TextHeade2 { get; set; } // TextHeade2
        public string TextHeade3 { get; set; } // TextHeade3
        public string TextHeade4 { get; set; } // TextHeade4
        public string TextHeade5 { get; set; } // TextHeade5
        public string TextHeade6 { get; set; } // TextHeade6
        public string TextHeade7 { get; set; } // TextHeade7
        public string TextHeade8 { get; set; } // TextHeade8
        public string TextHeade9 { get; set; } // TextHeade9
        public string TextHeade10 { get; set; } // TextHeade10
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdHeaders] point to this entity (FK_Template_Headers)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Headers

        public Header()
        {
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // Incass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Incass
    {
        public int? D851Res1 { get; set; } // D851Res_1
        public int? D850Incass { get; set; } // D850Incass
        public int D851Incass { get; set; } // D851Incass (Primary key)
        public decimal? Summ { get; set; } // Summ
        public int? D270IshIncass { get; set; } // D270IshIncass
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Reshenie pointed by [Incass].([D851Res1]) (FK_Incass_Reshenie)
        /// </summary>
        public virtual Reshenie Reshenie { get; set; } // FK_Incass_Reshenie
    }

    // JOB_DATA_DT
    ///<summary>
    /// Данные для отложенных заданий типа &quot;дата-время&quot;
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataDt
    {

        ///<summary>
        /// УН данного
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public System.DateTime Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_DT].([Id]) (FK_JOB_DATA_DT_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_DT_JOB_DATA
    }

    // JOB_DATA_INT
    ///<summary>
    /// Числовые данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataInt
    {

        ///<summary>
        /// УН значения в таблице JOB_DATA
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public int Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_INT].([Id]) (FK_JOB_DATA_INT_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_INT_JOB_DATA
    }

    // JOB_DATA_STR
    ///<summary>
    /// Строковые данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataStr
    {

        ///<summary>
        /// УН в таблице JOB_DATA
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Значение
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent JobDatum pointed by [JOB_DATA_STR].([Id]) (FK_JOB_DATA_STR_JOB_DATA)
        /// </summary>
        public virtual JobDatum JobDatum { get; set; } // FK_JOB_DATA_STR_JOB_DATA
    }

    // JOB_DATA
    ///<summary>
    /// Данные для shed_job - родительская таблица
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// УН поля
        ///</summary>
        public int FieldId { get; set; } // FIELD_ID

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_DT].[ID] (FK_JOB_DATA_DT_JOB_DATA)
        /// </summary>
        public virtual JobDataDt JobDataDt { get; set; } // JOB_DATA_DT.FK_JOB_DATA_DT_JOB_DATA
        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_INT].[ID] (FK_JOB_DATA_INT_JOB_DATA)
        /// </summary>
        public virtual JobDataInt JobDataInt { get; set; } // JOB_DATA_INT.FK_JOB_DATA_INT_JOB_DATA
        /// <summary>
        /// Parent (One-to-One) JobDatum pointed by [JOB_DATA_STR].[ID] (FK_JOB_DATA_STR_JOB_DATA)
        /// </summary>
        public virtual JobDataStr JobDataStr { get; set; } // JOB_DATA_STR.FK_JOB_DATA_STR_JOB_DATA

        // Foreign keys

        /// <summary>
        /// Parent RiskField pointed by [JOB_DATA].([FieldId]) (FK_JOB_DATA_RISK_FIELDS)
        /// </summary>
        public virtual RiskField RiskField { get; set; } // FK_JOB_DATA_RISK_FIELDS

        /// <summary>
        /// Parent ShedJob pointed by [JOB_DATA].([ShedJobId]) (FK_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_JOB_DATA_SHED_JOB
    }

    // LOTUS_DOCS
    ///<summary>
    /// Документы Lotus (штрих-коды)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusDoc
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН документа в базе Lotus (NotesDocument.GetDocumentByUnid)
        ///</summary>
        public System.Guid DocumentId { get; set; } // DOCUMENT_ID

        ///<summary>
        /// MD5 хэш документа
        ///</summary>
        public System.Guid Md5 { get; set; } // MD5

        ///<summary>
        /// Время печати документа
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Время отсылки документа
        ///</summary>
        public System.DateTime? D86 { get; set; } // D86

        ///<summary>
        /// Пользователь, напечатавший документ
        ///</summary>
        public string Utp { get; set; } // UTP (length: 512)

        ///<summary>
        /// Пользователь, отославший документ
        ///</summary>
        public string Uts { get; set; } // UTS (length: 512)

        public LotusDoc()
        {
            D85 = System.DateTime.Now;
        }
    }

    // LOTUS_FILE
    ///<summary>
    /// Дела Лотус, правила нумерации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusFile
    {

        ///<summary>
        /// УН дела
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Номер дела
        ///</summary>
        public string Fileno { get; set; } // FILENO (length: 500)

        ///<summary>
        /// Префикс нумератора
        ///</summary>
        public string Numprefix { get; set; } // NUMPREFIX (length: 50)

        ///<summary>
        /// Суффикс нумератора
        ///</summary>
        public string Numpostfix { get; set; } // NUMPOSTFIX (length: 50)

        ///<summary>
        /// Разделитель нумератора
        ///</summary>
        public string Separator { get; set; } // SEPARATOR (length: 10)

        ///<summary>
        /// Положение разделителя
        ///</summary>
        public int Numindexpl { get; set; } // NUMINDEXPL
        public int Mantissa { get; set; } // MANTISSA

        // Reverse navigation

        /// <summary>
        /// Child LotusSequences where [LOTUS_SEQUENCE].[FILEID] point to this entity (FK_LOTUS_SEQUENCE_LOTUS_FILE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LotusSequence> LotusSequences { get; set; } // LOTUS_SEQUENCE.FK_LOTUS_SEQUENCE_LOTUS_FILE

        public LotusFile()
        {
            Mantissa = 5;
            LotusSequences = new System.Collections.Generic.List<LotusSequence>();
        }
    }

    // LOTUS_SEQUENCE
    ///<summary>
    /// Поля нумерации (для того, чтобы брать нумератор не по одному, а скопом)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusSequence
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Номер дела
        ///</summary>
        public int Fileid { get; set; } // FILEID

        ///<summary>
        /// Стартовое значение
        ///</summary>
        public int Strt { get; set; } // STRT

        ///<summary>
        /// Текущее значение
        ///</summary>
        public int Curval { get; set; } // CURVAL

        ///<summary>
        /// Максимальное значение
        ///</summary>
        public int Maxval { get; set; } // MAXVAL
        public int? DtInt { get; private set; } // DT_INT

        // Foreign keys

        /// <summary>
        /// Parent LotusFile pointed by [LOTUS_SEQUENCE].([Fileid]) (FK_LOTUS_SEQUENCE_LOTUS_FILE)
        /// </summary>
        public virtual LotusFile LotusFile { get; set; } // FK_LOTUS_SEQUENCE_LOTUS_FILE

        public LotusSequence()
        {
            D85 = System.DateTime.Now;
            Fileid = 0;
        }
    }

    // NameDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NameDocument
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdNamedocument { get; set; } // IdNamedocument
        public string NameDocument_ { get; set; } // NameDocument (length: 128)
        public string ManualDoc { get; set; } // ManualDoc (length: 128)
        public int IdTemplate { get; set; } // IdTemplate
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child WordDocuments where [WordDocument].[IdNamedocument] point to this entity (FK_WordDocument_NameDocument)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<WordDocument> WordDocuments { get; set; } // WordDocument.FK_WordDocument_NameDocument

        // Foreign keys

        /// <summary>
        /// Parent Template pointed by [NameDocument].([IdTemplate]) (FK_NameDocument_Template)
        /// </summary>
        public virtual Template Template { get; set; } // FK_NameDocument_Template

        public NameDocument()
        {
            WordDocuments = new System.Collections.Generic.List<WordDocument>();
        }
    }

    // RB_REPORT
    ///<summary>
    /// Образы отчетов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbReport
    {

        ///<summary>
        /// УН отчета
        ///</summary>
        public int ReportId { get; set; } // REPORT_ID (Primary key)

        ///<summary>
        /// Код отчета
        ///</summary>
        public string ReportCode { get; set; } // REPORT_CODE (length: 50)

        ///<summary>
        /// Образ шаблона
        ///</summary>
        public byte[] ReportImage { get; set; } // REPORT_IMAGE (length: 2147483647)

        ///<summary>
        /// Название отчета
        ///</summary>
        public string ReportTitle { get; set; } // REPORT_TITLE (length: 255)

        ///<summary>
        /// Запрос для подготовки отчета.
        ///</summary>
        public byte[] ReportQuery { get; set; } // REPORT_QUERY (length: 2147483647)
    }

    // REPORT_FILTER
    ///<summary>
    /// Описание фильтров для вывода списка подготовленных отчетов (по пользователю, отделу или для всех)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportFilter
    {

        ///<summary>
        /// УН записи ACL
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код фильтра
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Название фильтра
        ///</summary>
        public string Title { get; set; } // TITLE (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child XlReportAcls where [XL_REPORT_ACL].[REPORT_FILTER_ID] point to this entity (FK_XL_REPORT_ACL_REPORT_FILTER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL.FK_XL_REPORT_ACL_REPORT_FILTER

        public ReportFilter()
        {
            XlReportAcls = new System.Collections.Generic.List<XlReportAcl>();
        }
    }

    // REQ_TYPE
    ///<summary>
    /// Типы запроса к внешнему источнику
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReqType
    {

        ///<summary>
        /// УН типа запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID (Primary key)

        ///<summary>
        /// Название запроса
        ///</summary>
        public string ReqTypeTitle { get; set; } // REQ_TYPE_TITLE (length: 256)

        ///<summary>
        /// Ключевое поле в таблице
        ///</summary>
        public string KeyField { get; set; } // KEY_FIELD (length: 256)

        ///<summary>
        /// Время жизни запроса в сутках
        ///</summary>
        public int ReqTtl { get; set; } // REQ_TTL

        ///<summary>
        /// Точка отсечения запросов. Применяется при изменениии алгоритма разбора. Запросы, сделанные ранее этой точки отсечения, считаются устаревшими и делаются повторно.
        ///</summary>
        public System.DateTime? CutOffDate { get; set; } // CUT_OFF_DATE

        ///<summary>
        /// Код запроса
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child RiskCycles (Many-to-Many) mapped by table [REQ_TO_CYCLE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCycle> RiskCycles { get; set; } // Many to many mapping
        /// <summary>
        /// Child RiskFailures where [RISK_FAILURE].[CYCLE_ID] point to this entity (FK_RISK_FAILURE_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE.FK_RISK_FAILURE_REQ_TYPE
        /// <summary>
        /// Child RiskLocks where [RISK_LOCK].[CYCLE_ID] point to this entity (FK_RISK_LOCK_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskLock> RiskLocks { get; set; } // RISK_LOCK.FK_RISK_LOCK_REQ_TYPE
        /// <summary>
        /// Child ShedJobs where [SHED_JOB].[REQ_TYPE_ID] point to this entity (FK_SHED_JOB_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJob> ShedJobs { get; set; } // SHED_JOB.FK_SHED_JOB_REQ_TYPE
        /// <summary>
        /// Child SmevReqs where [SMEV_REQ].[REQ_TYPE_ID] point to this entity (FK_SMEV_REQ_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SmevReq> SmevReqs { get; set; } // SMEV_REQ.FK_SMEV_REQ_REQ_TYPE
        /// <summary>
        /// Child SmevResponses where [SMEV_RESPONSE].[REQ_TYPE_ID] point to this entity (FK_SMEV_RESPONSE_REQ_TYPE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SmevResponse> SmevResponses { get; set; } // SMEV_RESPONSE.FK_SMEV_RESPONSE_REQ_TYPE

        public ReqType()
        {
            ReqTtl = 0;
            Code = "NO CODE";
            RiskFailures = new System.Collections.Generic.List<RiskFailure>();
            RiskLocks = new System.Collections.Generic.List<RiskLock>();
            ShedJobs = new System.Collections.Generic.List<ShedJob>();
            SmevReqs = new System.Collections.Generic.List<SmevReq>();
            SmevResponses = new System.Collections.Generic.List<SmevResponse>();
            RiskCycles = new System.Collections.Generic.List<RiskCycle>();
        }
    }

    // Reshenie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Reshenie
    {
        public int? D865 { get; set; } // D865
        public int D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public decimal? N120 { get; set; } // N120
        public int? D850Res { get; set; } // D850Res
        public int D851Res { get; set; } // D851Res (Primary key)
        public int? D865Res { get; set; } // D865Res
        public int? D270IshRes { get; set; } // D270IshRes
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Incasses where [Incass].[D851Res_1] point to this entity (FK_Incass_Reshenie)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Incass> Incasses { get; set; } // Incass.FK_Incass_Reshenie

        // Foreign keys

        /// <summary>
        /// Parent TableSysNumReshen pointed by [Reshenie].([D270]) (FK_Reshenie_TableSysNumReshen)
        /// </summary>
        public virtual TableSysNumReshen TableSysNumReshen { get; set; } // FK_Reshenie_TableSysNumReshen

        public Reshenie()
        {
            Incasses = new System.Collections.Generic.List<Incass>();
        }
    }

    // RISK_CHECKER
    ///<summary>
    /// Запросы в ФБД (массовые учредители, отсутствие сотрудников и др.)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskChecker
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID (Primary key)

        ///<summary>
        /// ИНН контрегента
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Дата проверки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат запроса
        ///</summary>
        public int? Status { get; set; } // STATUS

        // Reverse navigation

        /// <summary>
        /// Child BankOperations where [BANK_OPERATIONS].[RISK_CHECKER_ID] point to this entity (FK_BANK_OPERATIONS_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BankOperation> BankOperations { get; set; } // BANK_OPERATIONS.FK_BANK_OPERATIONS_RISK_CHECKER
        /// <summary>
        /// Child RiskCheckerAccs where [RISK_CHECKER_ACC].[RISK_CHECKER_ID] point to this entity (FK_RISK_CHECKER_ACC_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerAcc> RiskCheckerAccs { get; set; } // RISK_CHECKER_ACC.FK_RISK_CHECKER_ACC_RISK_CHECKER
        /// <summary>
        /// Child RiskCheckerHistories where [RISK_CHECKER_HISTORY].[RISK_CHECKER_ID] point to this entity (FK_RISK_CHECKER_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerHistory> RiskCheckerHistories { get; set; } // RISK_CHECKER_HISTORY.FK_RISK_CHECKER_HISTORY_RISK_CHECKER
        /// <summary>
        /// Child RiskCheckerTo212 where [RISK_CHECKER_TO_212].[RISK_CHECKER_ID] point to this entity (FK_RISK_CHECKER_TO_212_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212.FK_RISK_CHECKER_TO_212_RISK_CHECKER
        /// <summary>
        /// Child RiskFailures where [RISK_FAILURE].[RISK_CHECKER_ID] point to this entity (FK_RISK_FAILURE_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFailure> RiskFailures { get; set; } // RISK_FAILURE.FK_RISK_FAILURE_RISK_CHECKER
        /// <summary>
        /// Child RiskFn205 where [RISK_FN205].[RISK_CHECKER_ID] point to this entity (FK_RISK_FN205_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn205> RiskFn205 { get; set; } // RISK_FN205.FK_RISK_FN205_RISK_CHECKER
        /// <summary>
        /// Child RiskFn236 where [RISK_FN236].[RISK_CHECKER_ID] point to this entity (FK_RISK_FN236_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn236> RiskFn236 { get; set; } // RISK_FN236.FK_RISK_FN236_RISK_CHECKER
        /// <summary>
        /// Child RiskYears where [RISK_YEAR].[RISK_CHECKER_ID] point to this entity (FK_RISK_YEAR_RISK_CHECKER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskYear> RiskYears { get; set; } // RISK_YEAR.FK_RISK_YEAR_RISK_CHECKER

        public RiskChecker()
        {
            D85 = System.DateTime.Now;
            BankOperations = new System.Collections.Generic.List<BankOperation>();
            RiskCheckerAccs = new System.Collections.Generic.List<RiskCheckerAcc>();
            RiskCheckerHistories = new System.Collections.Generic.List<RiskCheckerHistory>();
            RiskCheckerTo212 = new System.Collections.Generic.List<RiskCheckerTo212>();
            RiskFailures = new System.Collections.Generic.List<RiskFailure>();
            RiskFn205 = new System.Collections.Generic.List<RiskFn205>();
            RiskFn236 = new System.Collections.Generic.List<RiskFn236>();
            RiskYears = new System.Collections.Generic.List<RiskYear>();
        }
    }

    // RISK_CHECKER_ACC
    ///<summary>
    /// Запросы в ЦОД о счетах организаций в банках
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerAcc
    {

        ///<summary>
        /// УН запроса выписки
        ///</summary>
        public int RiskCheckerAccId { get; set; } // RISK_CHECKER_ACC_ID (Primary key)

        ///<summary>
        /// УН запроса в ЦОД
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Начало отчетного периода
        ///</summary>
        public System.DateTime D40 { get; set; } // D40

        ///<summary>
        /// Окончание отчетного периода
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// УН пользователя, запросившего сведения о движениях по счету
        ///</summary>
        public int N269 { get; set; } // N269

        ///<summary>
        /// Дата создания запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Количество попыток выполнения запроса. 
        /// Положительное число - количество попыток.
        /// Ноль - запрос успешно выполнен.
        /// -1 - Невозможно выполнить запрос из-за фатальной ошибки.
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Текстовое описание последней ошибки, возникшей при выполнении запроса (null если ошибки не было).
        ///</summary>
        public string Err { get; set; } // ERR (length: 1500)

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_CHECKER_ACC].([RiskCheckerId]) (FK_RISK_CHECKER_ACC_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_CHECKER_ACC_RISK_CHECKER

        public RiskCheckerAcc()
        {
            D85 = System.DateTime.Now;
            Re = 1;
        }
    }

    // RISK_CHECKER_HISTORY
    ///<summary>
    /// Список пользователей, сформировавших запрос к RISK_CHECKER
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerHistory
    {

        ///<summary>
        /// УН записи сведения об истории создания запросов
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Дата создания запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Имя пользователя, создавшего запрос
        ///</summary>
        public string Sname { get; set; } // SNAME (length: 128)

        ///<summary>
        /// УН записи в RISK_CHECKER (есть ИНН организации, сведения о которой запрашиваются).
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_CHECKER_HISTORY].([RiskCheckerId]) (FK_RISK_CHECKER_HISTORY_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_CHECKER_HISTORY_RISK_CHECKER

        public RiskCheckerHistory()
        {
            D85 = System.DateTime.Now;
            Sname = "suser_sname()";
        }
    }

    // RISK_CHECKER_TO_212
    ///<summary>
    /// Связка между RISK_CHECKER и RISK_FN212
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerTo212
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskCheckerTo212Id { get; set; } // RISK_CHECKER_TO_212_ID (Primary key)

        ///<summary>
        /// УН запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// УН лица
        ///</summary>
        public int? N1 { get; set; } // N1

        ///<summary>
        /// Дата запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Тип сведений
        /// 0 - сведения об организации
        /// 1 - сведения об учредителе.
        /// 2 - сведения о руководителе.
        ///</summary>
        public int Flag { get; set; } // FLAG

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_CHECKER_TO_212].([RiskCheckerId]) (FK_RISK_CHECKER_TO_212_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_CHECKER_TO_212_RISK_CHECKER

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_CHECKER_TO_212].([N1]) (FK_RISK_CHECKER_TO_212_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_CHECKER_TO_212_RISK_FN212

        public RiskCheckerTo212()
        {
            D85 = System.DateTime.Now;
        }
    }

    // RISK_CYCLE
    ///<summary>
    /// Название обработчиков для ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCycle
    {

        ///<summary>
        /// УН обработчика
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID (Primary key)

        ///<summary>
        /// Название обработчика
        ///</summary>
        public string CycleTitle { get; set; } // CYCLE_TITLE (length: 150)

        ///<summary>
        /// Число потоков при одновременной работе
        ///</summary>
        public int PoolSize { get; set; } // POOL_SIZE

        ///<summary>
        /// Класс - enumerator при потоковой работе
        ///</summary>
        public string Enumerator { get; set; } // ENUMERATOR (length: 100)

        ///<summary>
        /// Не используется (ранее было время жизни запроса)
        ///</summary>
        public int Ttl { get; set; } // TTL

        ///<summary>
        /// Активность цикла опроса
        /// 1 - цикл активен
        /// 0 - цикл выключен.
        ///</summary>
        public int HandlerId { get; set; } // HANDLER_ID

        // Reverse navigation

        /// <summary>
        /// Child ReqTypes (Many-to-Many) mapped by table [REQ_TO_CYCLE]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ReqType> ReqTypes { get; set; } // Many to many mapping

        public RiskCycle()
        {
            PoolSize = 1;
            Enumerator = "N'Unknown'";
            HandlerId = 1;
            ReqTypes = new System.Collections.Generic.List<ReqType>();
        }
    }

    // RISK_DOSSIER
    ///<summary>
    /// Номенклатура дел
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskDossier
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код документа по КНД
        ///</summary>
        public string ReportCode { get; set; } // REPORT_CODE (length: 50)

        ///<summary>
        /// Номер дела (младший разряд), старший разряд берется из RISK_FN72
        ///</summary>
        public string Num { get; set; } // NUM (length: 10)

        ///<summary>
        /// УН отдела
        ///</summary>
        public int N274 { get; set; } // N274
    }

    // RISK_FAILURE
    ///<summary>
    /// Результаты запроса установочных сведений на организацию.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailure
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID (Primary key)

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string ErrorMessage { get; set; } // ERROR_MESSAGE (length: 512)

        ///<summary>
        /// Время установки ошибки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// УН цикла (REQ_TYPE)
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID (Primary key)

        ///<summary>
        /// Код завершения операции 
        /// Больше 0 - операция не завершена, отображается количество сделанных запросов - 1.
        /// 0 - Успешное завершение операции.
        /// -1 - Фатальная ошибка при совершении операции.
        ///</summary>
        public int? StatusCode { get; set; } // status_code

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RISK_FAILURE].([CycleId]) (FK_RISK_FAILURE_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RISK_FAILURE_REQ_TYPE

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FAILURE].([RiskCheckerId]) (FK_RISK_FAILURE_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FAILURE_RISK_CHECKER

        public RiskFailure()
        {
            D85 = System.DateTime.Now;
            StatusCode = -1;
        }
    }

    // RISK_FIELDS
    ///<summary>
    /// Поля для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskField
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код поля
        ///</summary>
        public string Code { get; set; } // CODE (length: 50)

        ///<summary>
        /// Название поля
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child JobDatums where [JOB_DATA].[FIELD_ID] point to this entity (FK_JOB_DATA_RISK_FIELDS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<JobDatum> JobDatums { get; set; } // JOB_DATA.FK_JOB_DATA_RISK_FIELDS

        public RiskField()
        {
            JobDatums = new System.Collections.Generic.List<JobDatum>();
        }
    }

    // RISK_FN1836
    ///<summary>
    /// Сведения о постановке на учет в налоговом органе
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1836
    {

        ///<summary>
        /// УН записи о постановке на учет
        ///</summary>
        public int N1308 { get; set; } // N1308 (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// ИНН
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// КПП
        ///</summary>
        public string D3 { get; set; } // D3 (length: 9)

        ///<summary>
        /// Дата постановки на учет
        ///</summary>
        public System.DateTime N49 { get; set; } // N49

        ///<summary>
        /// Дата снятия с учета
        ///</summary>
        public System.DateTime? N322 { get; set; } // N322

        ///<summary>
        /// ГРН записи о постановке на учет
        ///</summary>
        public string N5461 { get; set; } // N546_1 (length: 25)

        ///<summary>
        /// Код НО учета
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// Дата внесения записи в ЕГРН
        ///</summary>
        public System.DateTime? N1510 { get; set; } // N1510

        ///<summary>
        /// Код причины налогового учета ГНС
        ///</summary>
        public string D1772 { get; set; } // D1772 (length: 3)

        ///<summary>
        /// Код МНС причины снятия с налогового учета
        ///</summary>
        public string N617 { get; set; } // N617 (length: 2)
        public string K320 { get; set; } // K320 (length: 1024)
        public string N320 { get; set; } // N320 (length: 1024)

        // Foreign keys

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN1836].([N1]) (FK_RISK_FN1836_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN1836_RISK_FN212
    }

    // RISK_FN1844
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1844
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// Дата прекращения деятельности
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// УН причины прекращения деятельности
        ///</summary>
        public int N18441 { get; set; } // N18441

        // Foreign keys

        /// <summary>
        /// Parent Fn18441 pointed by [RISK_FN1844].([N18441]) (FK_RISK_FN1844_FN184411)
        /// </summary>
        public virtual Fn18441 Fn18441 { get; set; } // FK_RISK_FN1844_FN184411
    }

    // RISK_FN1903
    ///<summary>
    /// Статус индивидуальных предпринимателей (без кода).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1903
    {
        public int S2123 { get; set; } // S2123 (Primary key)
        public string S2126 { get; set; } // S2126 (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child RiskFn211 where [RISK_FN211].[S2123] point to this entity (FK_RISK_FN211_FN1903)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn211> RiskFn211 { get; set; } // RISK_FN211.FK_RISK_FN211_FN1903

        public RiskFn1903()
        {
            RiskFn211 = new System.Collections.Generic.List<RiskFn211>();
        }
    }

    // RISK_FN205
    ///<summary>
    /// Ответы от ЦОД на запросы сведений о счетах (в эту таблицу разбирается JSON-ответ от ЦОД)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn205
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН запроса о плательщике
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Номер счета
        ///</summary>
        public string N89 { get; set; } // N89 (length: 50)

        ///<summary>
        /// Дата открытия счета/возникновения права на КЭСП
        ///</summary>
        public System.DateTime? N95 { get; set; } // N95

        ///<summary>
        /// Дата закрытия счета/прекращения права на КЭСП
        ///</summary>
        public System.DateTime? N96 { get; set; } // N96

        ///<summary>
        /// БИК
        ///</summary>
        public string N111 { get; set; } // N111 (length: 50)

        ///<summary>
        /// КПП налоголательщика
        ///</summary>
        public string D3 { get; set; } // D3 (length: 12)

        ///<summary>
        /// ИНН налогоплательщика
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// ИНН банка
        ///</summary>
        public string N134Fn50 { get; set; } // N134Fn50 (length: 12)

        ///<summary>
        /// КПП банка
        ///</summary>
        public string D3Fn50 { get; set; } // D3Fn50 (length: 12)

        ///<summary>
        /// Название банка
        ///</summary>
        public string N18Fn50 { get; set; } // N18Fn50 (length: 1000)

        ///<summary>
        /// Регистрационный код банка по данным ЦБ РФ. FN50.D3807_6
        ///</summary>
        public int? D38076 { get; set; } // D38076

        ///<summary>
        /// Номер сообщения банка об открытии счета
        ///</summary>
        public string R248 { get; set; } // R248 (length: 200)

        ///<summary>
        /// Источник сведений о счете. 0 - &quot;Банк-счет-плательщик&quot; в ЦОД. 1 - &quot;История банк-счет-плательщик&quot; в ЦОД 2- ЭОД
        ///</summary>
        public int Rsource { get; set; } // RSOURCE

        ///<summary>
        /// Дата сообщения
        ///</summary>
        public System.DateTime? D1858 { get; set; } // D1858

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FN205].([RiskCheckerId]) (FK_RISK_FN205_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FN205_RISK_CHECKER

        public RiskFn205()
        {
            Rsource = 0;
        }
    }

    // RISK_FN206
    ///<summary>
    /// Виды деятельности налогоплательщика
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn206
    {

        ///<summary>
        /// УН вида деятельности лица
        ///</summary>
        public int N257 { get; set; } // N257 (Primary key)

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН кода ВЭД
        ///</summary>
        public int D3480 { get; set; } // D3480

        ///<summary>
        /// Признак основного вида деятельности
        ///</summary>
        public bool N306 { get; set; } // N306

        // Foreign keys

        /// <summary>
        /// Parent Fn1341 pointed by [RISK_FN206].([D3480]) (FK_RISK_FN206_fn1341)
        /// </summary>
        public virtual Fn1341 Fn1341 { get; set; } // FK_RISK_FN206_fn1341

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN206].([N1]) (FK_RISK_FN206_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN206_RISK_FN212

        public RiskFn206()
        {
            N306 = false;
        }
    }

    // RISK_FN210
    ///<summary>
    /// Организации (юр. лица) для загрузки сведений из ФБД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn210
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// ОГРН
        ///</summary>
        public string N1002 { get; set; } // N1002 (length: 13)

        ///<summary>
        /// Адрес
        ///</summary>
        public string N320 { get; set; } // N320 (length: 255)

        ///<summary>
        /// Уставной капитал
        ///</summary>
        public decimal? N1036 { get; set; } // N1036

        ///<summary>
        /// КПП
        ///</summary>
        public string D3 { get; set; } // D3 (length: 9)

        ///<summary>
        /// Полное наименование
        ///</summary>
        public string N135 { get; set; } // N135 (length: 1000)

        ///<summary>
        /// Дата образования
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// УН состояния лица
        ///</summary>
        public int? S2123 { get; set; } // S2123

        // Foreign keys

        /// <summary>
        /// Parent Fn1903 pointed by [RISK_FN210].([S2123]) (FK_RISK_FN210_FN1903)
        /// </summary>
        public virtual Fn1903 Fn1903 { get; set; } // FK_RISK_FN210_FN1903

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN210].([N1]) (FK_RISK_FN210_RISK_FN210)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN210_RISK_FN210
    }

    // RISK_FN211
    ///<summary>
    /// Физические лица - загрузка из ФБД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn211
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// Фамилия
        ///</summary>
        public string N146 { get; set; } // N146 (length: 64)

        ///<summary>
        /// Имя
        ///</summary>
        public string N142 { get; set; } // N142 (length: 60)

        ///<summary>
        /// Отчество
        ///</summary>
        public string N610 { get; set; } // N610 (length: 60)

        ///<summary>
        /// Номер документа
        ///</summary>
        public string N147 { get; set; } // N147 (length: 50)

        ///<summary>
        /// Серия документа
        ///</summary>
        public string N148 { get; set; } // N148 (length: 50)

        ///<summary>
        /// Адрес физического лица
        ///</summary>
        public string N320 { get; set; } // N320 (length: 255)

        ///<summary>
        /// ОГРНИП - регистрационный номер лица в качестве ИП.
        ///</summary>
        public string N1002 { get; set; } // N1002 (length: 20)

        ///<summary>
        /// УН записи о статусе ИП
        ///</summary>
        public int? S2123 { get; set; } // S2123

        // Foreign keys

        /// <summary>
        /// Parent RiskFn1903 pointed by [RISK_FN211].([S2123]) (FK_RISK_FN211_FN1903)
        /// </summary>
        public virtual RiskFn1903 RiskFn1903 { get; set; } // FK_RISK_FN211_FN1903

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN211].([N1]) (FK_RISK_FN211_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN211_RISK_FN212
    }

    // RISK_FN212
    ///<summary>
    /// Загрузка сведений - данные о лице
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn212
    {

        ///<summary>
        /// УН лица
        ///</summary>
        public int N1 { get; set; } // N1 (Primary key)

        ///<summary>
        /// ИНН
        ///</summary>
        public string N134 { get; set; } // N134 (length: 12)

        ///<summary>
        /// Название
        ///</summary>
        public string N18 { get; set; } // N18 (length: 160)

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) RiskFn212 pointed by [RISK_FN210].[N1] (FK_RISK_FN210_RISK_FN210)
        /// </summary>
        public virtual RiskFn210 RiskFn210 { get; set; } // RISK_FN210.FK_RISK_FN210_RISK_FN210
        /// <summary>
        /// Parent (One-to-One) RiskFn212 pointed by [RISK_FN211].[N1] (FK_RISK_FN211_RISK_FN212)
        /// </summary>
        public virtual RiskFn211 RiskFn211 { get; set; } // RISK_FN211.FK_RISK_FN211_RISK_FN212
        /// <summary>
        /// Child RiskCheckerTo212 where [RISK_CHECKER_TO_212].[N1] point to this entity (FK_RISK_CHECKER_TO_212_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskCheckerTo212> RiskCheckerTo212 { get; set; } // RISK_CHECKER_TO_212.FK_RISK_CHECKER_TO_212_RISK_FN212
        /// <summary>
        /// Child RiskFn1836 where [RISK_FN1836].[N1] point to this entity (FK_RISK_FN1836_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn1836> RiskFn1836 { get; set; } // RISK_FN1836.FK_RISK_FN1836_RISK_FN212
        /// <summary>
        /// Child RiskFn206 where [RISK_FN206].[N1] point to this entity (FK_RISK_FN206_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn206> RiskFn206 { get; set; } // RISK_FN206.FK_RISK_FN206_RISK_FN212
        /// <summary>
        /// Child RiskFn236 where [RISK_FN236].[N1] point to this entity (FK_RISK_FN236_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn236> RiskFn236 { get; set; } // RISK_FN236.FK_RISK_FN236_RISK_FN212
        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1] point to this entity (FK_RISK_FN245_RISK_FN212)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245_N1 { get; set; } // RISK_FN245.FK_RISK_FN245_RISK_FN212
        /// <summary>
        /// Child RiskFn245 where [RISK_FN245].[N1_1] point to this entity (FK_RISK_FN245_RISK_FN2121)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RiskFn245> RiskFn245_N11 { get; set; } // RISK_FN245.FK_RISK_FN245_RISK_FN2121

        public RiskFn212()
        {
            RiskCheckerTo212 = new System.Collections.Generic.List<RiskCheckerTo212>();
            RiskFn1836 = new System.Collections.Generic.List<RiskFn1836>();
            RiskFn206 = new System.Collections.Generic.List<RiskFn206>();
            RiskFn236 = new System.Collections.Generic.List<RiskFn236>();
            RiskFn245_N1 = new System.Collections.Generic.List<RiskFn245>();
            RiskFn245_N11 = new System.Collections.Generic.List<RiskFn245>();
        }
    }

    // RISK_FN236
    ///<summary>
    /// Лица-правопреемники при реорганизации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn236
    {
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН лица-предшественника
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН запроса сведений о лице-правопреемнике
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_FN236].([RiskCheckerId]) (FK_RISK_FN236_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_FN236_RISK_CHECKER

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN236].([N1]) (FK_RISK_FN236_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212 { get; set; } // FK_RISK_FN236_RISK_FN212
    }

    // RISK_FN245
    ///<summary>
    /// Сведения об учредителях - руководителях юр.лица
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn245
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskFn245Id { get; set; } // RISK_FN245_ID (Primary key)

        ///<summary>
        /// УН фирмы
        ///</summary>
        public int N1 { get; set; } // N1

        ///<summary>
        /// УН лица
        ///</summary>
        public int N11 { get; set; } // N1_1

        ///<summary>
        /// УН записи о категориях ФЛ
        ///</summary>
        public int N1525 { get; set; } // N1525

        ///<summary>
        /// Дата последней проверки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        // Foreign keys

        /// <summary>
        /// Parent Fn3042 pointed by [RISK_FN245].([N1525]) (FK_RISK_FN245_FN3042)
        /// </summary>
        public virtual Fn3042 Fn3042 { get; set; } // FK_RISK_FN245_FN3042

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN245].([N1]) (FK_RISK_FN245_RISK_FN212)
        /// </summary>
        public virtual RiskFn212 RiskFn212_N1 { get; set; } // FK_RISK_FN245_RISK_FN212

        /// <summary>
        /// Parent RiskFn212 pointed by [RISK_FN245].([N11]) (FK_RISK_FN245_RISK_FN2121)
        /// </summary>
        public virtual RiskFn212 RiskFn212_N11 { get; set; } // FK_RISK_FN245_RISK_FN2121

        public RiskFn245()
        {
            D85 = System.DateTime.Now;
        }
    }

    // RISK_FN71
    ///<summary>
    /// Список строк соединения с базами инспекций
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn71
    {

        ///<summary>
        /// УН инспекции
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код инспекции
        ///</summary>
        public string N279 { get; set; } // N279 (length: 4)

        ///<summary>
        /// УН конфигурации (тест / бой)
        ///</summary>
        public int DbConfigId { get; set; } // DB_CONFIG_ID

        ///<summary>
        /// Суффикс базы Taxes
        ///</summary>
        public string DbSuffix { get; set; } // DB_SUFFIX (length: 2)

        ///<summary>
        /// Server link, к машине, где установлена БД Taxes.
        ///</summary>
        public string LinkedServer { get; set; } // LINKED_SERVER (length: 50)

        ///<summary>
        /// Connection string для базы Taxes (не содержит Catalog)
        ///</summary>
        public string ConnectionString { get; set; } // CONNECTION_STRING (length: 100)

        // Foreign keys

        /// <summary>
        /// Parent DbConfig pointed by [RISK_FN71].([DbConfigId]) (FK_RISK_FN71_DB_CONFIG)
        /// </summary>
        public virtual DbConfig DbConfig { get; set; } // FK_RISK_FN71_DB_CONFIG
    }

    // RISK_FN72
    ///<summary>
    /// Справочник отделов.
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn72
    {

        ///<summary>
        /// УН подразделения
        ///</summary>
        public int N274 { get; set; } // N274 (Primary key)

        ///<summary>
        /// Название подразделения
        ///</summary>
        public string N276 { get; set; } // N276 (length: 150)

        ///<summary>
        /// Номер дела (старшая цифра)
        ///</summary>
        public string R250 { get; set; } // R250 (length: 10)

        ///<summary>
        /// УН зама, подписывающего документы отдела
        ///</summary>
        public int N279 { get; set; } // N279
        public string N250 { get; set; } // N250 (length: 100)

        ///<summary>
        /// Признак основной деятельности
        ///</summary>
        public bool D1989 { get; set; } // D1989

        ///<summary>
        /// Направление деятельности - выездные проверки
        ///</summary>
        public bool D1990 { get; set; } // D1990

        ///<summary>
        /// Начало действия
        ///</summary>
        public System.DateTime D40 { get; set; } // D40

        ///<summary>
        /// Конец действия
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Дата модификации/удаления
        ///</summary>
        public System.DateTime? D306 { get; set; } // D306

        ///<summary>
        /// Признак: 1- юридическая служба, 0-нет
        ///</summary>
        public byte D19902 { get; set; } // D1990_2

        // Reverse navigation

        /// <summary>
        /// Child Fn72Web where [FN72_WEB].[N274] point to this entity (FK_FN72_WEB_RISK_FN72)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Fn72Web> Fn72Web { get; set; } // FN72_WEB.FK_FN72_WEB_RISK_FN72

        public RiskFn72()
        {
            D1989 = true;
            D1990 = false;
            D85 = System.DateTime.Now;
            D19902 = 0;
            Fn72Web = new System.Collections.Generic.List<Fn72Web>();
        }
    }

    // RISK_FN74
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn74
    {

        ///<summary>
        /// УН пользователя. Совпадает с TAXES.RISK_FN74.N269
        ///</summary>
        public int N269 { get; set; } // N269 (Primary key)

        ///<summary>
        /// ФИО пользователя
        ///</summary>
        public string N273 { get; set; } // N273 (length: 64)

        ///<summary>
        /// NT LOGIN
        ///</summary>
        public string D686 { get; set; } // D686 (length: 20)

        ///<summary>
        /// Код подразделения ГНИ
        ///</summary>
        public int N274 { get; set; } // N274

        ///<summary>
        /// Телефон, номер
        ///</summary>
        public string N249 { get; set; } // N249 (length: 20)

        ///<summary>
        /// Признак Имеет Право Подписи Документов ОБУ
        ///</summary>
        public byte? D2348 { get; set; } // D2348

        ///<summary>
        /// Признак Имеет Право Подписи Документов ЕГРН
        ///</summary>
        public byte? D2349 { get; set; } // D2349

        ///<summary>
        /// Признак Использовать по Умолчанию на Документах ОБУ
        ///</summary>
        public byte? D2350 { get; set; } // D2350

        ///<summary>
        /// Признак Использовать по Умолчанию на Документах ЕГРН
        ///</summary>
        public byte? D2351 { get; set; } // D2351

        ///<summary>
        /// ФИО к подписи на документе
        ///</summary>
        public string D2352 { get; set; } // D2352 (length: 40)

        ///<summary>
        /// Звание к подписи на документе
        ///</summary>
        public string D2353 { get; set; } // D2353 (length: 200)

        ///<summary>
        /// Должность к подписи на документе, кратко 45с
        ///</summary>
        public string D2354 { get; set; } // D2354 (length: 200)

        ///<summary>
        /// Дата начала действия
        ///</summary>
        public System.DateTime? D40 { get; set; } // D40

        ///<summary>
        /// Дата окончания действия
        ///</summary>
        public System.DateTime? D41 { get; set; } // D41

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? D85 { get; set; } // D85

        ///<summary>
        /// Дата модификации/удаления
        ///</summary>
        public System.DateTime? D306 { get; set; } // D306

        ///<summary>
        /// ПризнакПравоПодписиДокументовВыездныхПроверок
        ///</summary>
        public bool D2355 { get; set; } // D2355

        ///<summary>
        /// ИспользоватьПоУмолчаниюНаДокументахВыездныхПроверок
        ///</summary>
        public bool D2356 { get; set; } // D2356

        ///<summary>
        /// ФИО должностного лица в творительном падеже, КЕМ
        ///</summary>
        public string N2731 { get; set; } // N273_1 (length: 64)

        ///<summary>
        /// Телефон, код м/г связи
        ///</summary>
        public string N2491 { get; set; } // N249_1 (length: 5)

        ///<summary>
        /// Телефон, внутренний номер
        ///</summary>
        public string N2492 { get; set; } // N249_2 (length: 5)

        ///<summary>
        /// ФИО должностного лица в дательном падеже, КОМУ
        ///</summary>
        public string N2732 { get; set; } // N273_2 (length: 100)

        ///<summary>
        /// Адрес электронной почты
        ///</summary>
        public string D3828 { get; set; } // D3828 (length: 100)

        ///<summary>
        /// Адрес электронной почты, E-mail
        ///</summary>
        public string N250 { get; set; } // N250 (length: 100)

        ///<summary>
        /// Должность к подписи на документе, полно
        ///</summary>
        public string D23542 { get; set; } // D2354_2 (length: 200)

        public RiskFn74()
        {
            N274 = 0;
            D2355 = false;
            D2356 = false;
        }
    }

    // RISK_LOCK
    ///<summary>
    /// Блокировка для запросов в ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskLock
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskLockId { get; set; } // RISK_LOCK_ID (Primary key)

        ///<summary>
        /// ID запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// ID вида запроса (численность, сведения)
        ///</summary>
        public int CycleId { get; set; } // CYCLE_ID

        ///<summary>
        /// Время установки блокировки
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Снимать блокировку в автоматическом режиме
        ///</summary>
        public bool AutoRemove { get; set; } // AUTO_REMOVE

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [RISK_LOCK].([CycleId]) (FK_RISK_LOCK_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_RISK_LOCK_REQ_TYPE

        public RiskLock()
        {
            D85 = System.DateTime.Now;
            AutoRemove = true;
        }
    }

    // RISK_MIME
    ///<summary>
    /// Типы mime (используется при вызове процедуры загрузки через Web-интерфейс)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskMime
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Расширение файла
        ///</summary>
        public string Extension { get; set; } // EXTENSION (length: 16)

        ///<summary>
        /// Тип Mime
        ///</summary>
        public string Mime { get; set; } // MIME (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child XlReports where [XL_REPORT].[RISK_MIME_ID] point to this entity (FK_XL_REPORT_RISK_MIME)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReport> XlReports { get; set; } // XL_REPORT.FK_XL_REPORT_RISK_MIME

        public RiskMime()
        {
            XlReports = new System.Collections.Generic.List<XlReport>();
        }
    }

    // RISK_VERSION
    ///<summary>
    /// Сведения о версии БД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskVersion
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int RiskVersionId { get; set; } // RISK_VERSION_ID (Primary key)

        ///<summary>
        /// Версия базы
        ///</summary>
        public long DbVersion { get; set; } // DB_VERSION
    }

    // RISK_WEB
    ///<summary>
    /// Функции внутреннего web-сервиса (например, настройки, сверки с физлицом, печать документов и т.д.).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskWeb
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название контроллера
        ///</summary>
        public string Ctl { get; set; } // Ctl (length: 50)

        ///<summary>
        /// Url для RedirectTo
        ///</summary>
        public string Redir { get; set; } // Redir (length: 255)

        ///<summary>
        /// Название группы
        ///</summary>
        public string Title { get; set; } // Title (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Fn72Web where [FN72_WEB].[RISK_WEB_ID] point to this entity (FK_FN72_WEB_RISK_WEB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Fn72Web> Fn72Web { get; set; } // FN72_WEB.FK_FN72_WEB_RISK_WEB

        public RiskWeb()
        {
            Fn72Web = new System.Collections.Generic.List<Fn72Web>();
        }
    }

    // RISK_YEAR
    ///<summary>
    /// Численность работников (количество справок 2-НДФЛ) по данным ЦОД
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskYear
    {

        ///<summary>
        /// ID записи
        ///</summary>
        public int RiskYearId { get; set; } // RISK_YEAR_ID (Primary key)

        ///<summary>
        /// ID запроса
        ///</summary>
        public int RiskCheckerId { get; set; } // RISK_CHECKER_ID

        ///<summary>
        /// Год, за который запрошена численность работников
        ///</summary>
        public int D250 { get; set; } // D250

        ///<summary>
        /// Количество справок 2-НДФЛ
        ///</summary>
        public int Qty { get; set; } // QTY

        ///<summary>
        /// ID запроса. Для предотвращения повторного запуска.
        ///</summary>
        public int? QueryId { get; set; } // QUERY_ID

        // Foreign keys

        /// <summary>
        /// Parent RiskChecker pointed by [RISK_YEAR].([RiskCheckerId]) (FK_RISK_YEAR_RISK_CHECKER)
        /// </summary>
        public virtual RiskChecker RiskChecker { get; set; } // FK_RISK_YEAR_RISK_CHECKER
    }

    // The table 'SashaErrorTreb' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // SashaErrorTreb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SashaErrorTreb
    {
        public int? D865 { get; set; } // D865
        public int? D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public string ErrorTreb { get; set; } // ErrorTreb
        public int? D850Treb { get; set; } // D850Treb
        public int? D865Treb { get; set; } // D865Treb
        public int? D851Treb { get; set; } // D851Treb
        public int? D270Treb { get; set; } // D270Treb
        public string ErrorIncas { get; set; } // ErrorIncas
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // The table 'SashaOkTreb' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // SashaOkTreb
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SashaOkTreb
    {
        public int? D865 { get; set; } // D865
        public int? D270 { get; set; } // D270
        public int? N1 { get; set; } // N1
        public decimal? Summ { get; set; } // Summ
        public string OkTr { get; set; } // OkTr
        public int? D850Treb { get; set; } // D850Treb
        public int? D851Treb { get; set; } // D851Treb
        public int? D865Treb { get; set; } // D865Treb
        public int? D270IshTreb { get; set; } // D270IshTreb
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // ServiceWcfCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceWcfCommand
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdGroup { get; set; } // IdGroup
        public int IdClass { get; set; } // IdClass
        public int IdSobytieSystem { get; set; } // IdSobytieSystem
        public string DescriptionFull { get; set; } // DescriptionFull
        public string DescriptionParam { get; set; } // DescriptionParam
        public string Command { get; set; } // Command
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent ClassOtdel pointed by [ServiceWcfCommand].([IdClass]) (FK_ServiceWcfCommand_ClassOtdel)
        /// </summary>
        public virtual ClassOtdel ClassOtdel { get; set; } // FK_ServiceWcfCommand_ClassOtdel

        /// <summary>
        /// Parent GroupOtdel pointed by [ServiceWcfCommand].([IdGroup]) (FK_ServiceWcfCommand_GroupOtdel)
        /// </summary>
        public virtual GroupOtdel GroupOtdel { get; set; } // FK_ServiceWcfCommand_GroupOtdel

        /// <summary>
        /// Parent SobytieOtdel pointed by [ServiceWcfCommand].([IdSobytieSystem]) (FK_ServiceWcfCommand_SobytieOtdel)
        /// </summary>
        public virtual SobytieOtdel SobytieOtdel { get; set; } // FK_ServiceWcfCommand_SobytieOtdel
    }

    // SHED_JOB
    ///<summary>
    /// Отложенные задания. Ресурсоемкие задачи для выполнения в фоновом режиме (например, подготовка tiff-документов).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJob
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID (Primary key)

        ///<summary>
        /// Тип задания
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Время помещения задания в очередь
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Результат выполнения задания
        /// Больше 0 - не выполнено (указано количество попыток  + 1)
        /// 0 - успешно выполнено
        /// -1 - завершено с ошибкой
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Время последнего изменения
        ///</summary>
        public System.DateTime D41 { get; set; } // D41

        ///<summary>
        /// Сообщение об ошибке выполнения.
        ///</summary>
        public string Err { get; set; } // ERR (length: 1000)

        // Reverse navigation

        /// <summary>
        /// Child JobDatums where [JOB_DATA].[SHED_JOB_ID] point to this entity (FK_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<JobDatum> JobDatums { get; set; } // JOB_DATA.FK_JOB_DATA_SHED_JOB
        /// <summary>
        /// Child ShedJobDatums where [SHED_JOB_DATA].[SHED_JOB_ID] point to this entity (FK_SHED_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJobDatum> ShedJobDatums { get; set; } // SHED_JOB_DATA.FK_SHED_JOB_DATA_SHED_JOB
        /// <summary>
        /// Child ShedJobLogs where [SHED_JOB_LOG].[SHED_JOB_ID] point to this entity (FK_SHED_JOB_LOG_SHED_JOB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShedJobLog> ShedJobLogs { get; set; } // SHED_JOB_LOG.FK_SHED_JOB_LOG_SHED_JOB

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SHED_JOB].([ReqTypeId]) (FK_SHED_JOB_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SHED_JOB_REQ_TYPE

        public ShedJob()
        {
            D85 = System.DateTime.Now;
            JobDatums = new System.Collections.Generic.List<JobDatum>();
            ShedJobDatums = new System.Collections.Generic.List<ShedJobDatum>();
            ShedJobLogs = new System.Collections.Generic.List<ShedJobLog>();
        }
    }

    // SHED_JOB_DATA
    ///<summary>
    /// Данные для отложенных заданий
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobDataId { get; set; } // SHED_JOB_DATA_ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Поле
        ///</summary>
        public string Field { get; set; } // FIELD (length: 100)

        ///<summary>
        /// Значение
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [SHED_JOB_DATA].([ShedJobId]) (FK_SHED_JOB_DATA_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_SHED_JOB_DATA_SHED_JOB
    }

    // SHED_JOB_LOG
    ///<summary>
    /// Результаты работы обработчика Shed_job (подробности).
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobLog
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int ShedJobLogId { get; set; } // SHED_JOB_LOG_ID (Primary key)

        ///<summary>
        /// УН задания
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Поле
        ///</summary>
        public string Field { get; set; } // FIELD (length: 100)

        ///<summary>
        /// Значение (например, значение ключа документа)
        ///</summary>
        public string Value { get; set; } // VALUE (length: 1000)

        ///<summary>
        /// Результат обработки
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Сообщение об ошибке
        ///</summary>
        public string Err { get; set; } // ERR (length: 1000)

        // Foreign keys

        /// <summary>
        /// Parent ShedJob pointed by [SHED_JOB_LOG].([ShedJobId]) (FK_SHED_JOB_LOG_SHED_JOB)
        /// </summary>
        public virtual ShedJob ShedJob { get; set; } // FK_SHED_JOB_LOG_SHED_JOB
    }

    // SHED_REPORT
    ///<summary>
    /// Периодически выполняемые запросы к базе
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedReport
    {

        ///<summary>
        /// УН запроса
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Код запроса
        ///</summary>
        public string Code { get; set; } // CODE (length: 15)

        ///<summary>
        /// Данные для совершения запроса
        ///</summary>
        public string Guide { get; set; } // GUIDE
    }

    // SIGNATURE
    ///<summary>
    /// Подписи, наносимые на документы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Signature
    {

        ///<summary>
        /// УН подписи
        ///</summary>
        public int SignatureId { get; set; } // SIGNATURE_ID (Primary key)

        ///<summary>
        /// УН владельца
        ///</summary>
        public int SignerId { get; set; } // SIGNER_ID

        ///<summary>
        /// Изображение подписи
        ///</summary>
        public byte[] SignatureImage { get; set; } // SIGNATURE_IMAGE (length: 2147483647)

        // Foreign keys

        /// <summary>
        /// Parent Signer pointed by [SIGNATURE].([SignerId]) (FK_SIGNATURE_SIGNER)
        /// </summary>
        public virtual Signer Signer { get; set; } // FK_SIGNATURE_SIGNER
    }

    // SIGNER
    ///<summary>
    /// Авторы подписи
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Signer
    {

        ///<summary>
        /// УН автора подписи
        ///</summary>
        public int SignerId { get; set; } // SIGNER_ID (Primary key)

        ///<summary>
        /// Выражение для поиска автора в тексте
        ///</summary>
        public string SignerExpr { get; set; } // SIGNER_EXPR (length: 100)

        ///<summary>
        /// Является ли выражение SIGNER_EXP регулярным выражением
        ///</summary>
        public bool RegEx { get; set; } // REG_EX
        public string SignerTitle { get; set; } // SIGNER_TITLE (length: 100)

        ///<summary>
        /// Разновидность подписи и печати (0 - без печати, 1 - с печатью). RISKS..SIGNER.SealType
        ///</summary>
        public int SealType { get; set; } // SealType

        ///<summary>
        /// Сдвиг печати по горизонтали. Подбирайте под каждую разновидность печати. Подпись без печати -0.7, печать и подпись -0.4.
        ///</summary>
        public double HoriShift { get; set; } // HoriShift

        ///<summary>
        /// Сдвиг печати по вертикали. RISKS..SIGNER.VertShift
        ///</summary>
        public double VertShift { get; set; } // VertShift

        // Reverse navigation

        /// <summary>
        /// Child Signatures where [SIGNATURE].[SIGNER_ID] point to this entity (FK_SIGNATURE_SIGNER)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Signature> Signatures { get; set; } // SIGNATURE.FK_SIGNATURE_SIGNER

        public Signer()
        {
            RegEx = false;
            SealType = 0;
            HoriShift = -0.7;
            VertShift = -0.5;
            Signatures = new System.Collections.Generic.List<Signature>();
        }
    }

    // SMEV_CAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCar
    {
        public int SmevCarId { get; set; } // SMEV_CAR_ID (Primary key)
        public string SmevCarExpr { get; set; } // SMEV_CAR_EXPR (Primary key) (length: 1024)
        public string N1076 { get; set; } // N1076 (Primary key) (length: 512)
        public string D900 { get; set; } // D900 (Primary key) (length: 512)
    }

    // SMEV_CRED
    ///<summary>
    /// Учетные данные для входа в СМЭВ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCred
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int SmevCredId { get; set; } // SMEV_CRED_ID (Primary key)

        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string SmevLogin { get; set; } // SMEV_LOGIN (length: 50)

        ///<summary>
        /// Пароль
        ///</summary>
        public string SmevPass { get; set; } // SMEV_PASS (length: 50)

        ///<summary>
        /// Имя пользователя в домене Windows
        ///</summary>
        public string Suser { get; set; } // SUSER (length: 255)

        ///<summary>
        /// Имя пользователя ЦОД
        ///</summary>
        public string FdcUser { get; set; } // FdcUser (length: 500)

        ///<summary>
        /// Дата изменения имени пользователя / пароля
        ///</summary>
        public byte[] CredChg { get; set; } // CredChg (length: 8)

        ///<summary>
        /// Дата проверки доступа к ЦОД
        ///</summary>
        public System.DateTime? CredVer { get; set; } // CredVer

        ///<summary>
        /// Дата окончания срока действия пароля ЦОД
        ///</summary>
        public System.DateTime? PasswdValid { get; set; } // PasswdValid

        public SmevCred()
        {
            Suser = "suser_sname()";
        }
    }

    // SMEV_PARAM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevParam
    {
        public int SmevParamId { get; set; } // SMEV_PARAM_ID (Primary key)
        public string SmevParamCode { get; set; } // SMEV_PARAM_CODE (length: 50)
        public string SmevParamValue { get; set; } // SMEV_PARAM_VALUE (length: 255)
        public string SmevParamDescription { get; set; } // SMEV_PARAM_DESCRIPTION (length: 255)
    }

    // SMEV_REQ
    ///<summary>
    /// Запросы к внешнему серверу
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevReq
    {

        ///<summary>
        /// УН запроса
        ///</summary>
        public int SmevReqId { get; set; } // SMEV_REQ_ID (Primary key)

        ///<summary>
        /// Время отправки запроса
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Вид запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Значение ключа
        ///</summary>
        public long KeyValue { get; set; } // KEY_VALUE

        ///<summary>
        /// Результат выполнения запроса
        /// Больше 0 - не выполнено (указано количество попыток  + 1)
        /// 0 - успешно выполнено
        /// -1 - завершено с ошибкой
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Данные, полученные из ЦОД (или из другого внешнего источника)
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)

        ///<summary>
        /// Ключ запроса, для последующей обработки, если запрос асинхронный.
        /// При запросе сведений о машинах пишется УН запроса в ЦОД, затем по этому запросу загружается ответ.
        ///</summary>
        public string SmevKey { get; set; } // SMEV_KEY (length: 512)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SMEV_REQ].([ReqTypeId]) (FK_SMEV_REQ_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SMEV_REQ_REQ_TYPE
    }

    // SMEV_RESPONSE
    ///<summary>
    /// Ответы от СМЭВ, результаты подготовки отложенных запросов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevResponse
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int SmevResponseId { get; set; } // SMEV_RESPONSE_ID (Primary key)

        ///<summary>
        /// Дата создания записи
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// УН типа запроса
        ///</summary>
        public int ReqTypeId { get; set; } // REQ_TYPE_ID

        ///<summary>
        /// Результат выполнения команды на загрузку / подготовку ответа
        ///</summary>
        public int Re { get; set; } // RE

        ///<summary>
        /// Данные
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)

        ///<summary>
        /// УН запроса на сервере поставщика информации
        ///</summary>
        public string SmevKey { get; set; } // SMEV_KEY (length: 512)

        ///<summary>
        /// Локальный ключ. EventID на сайте Росреестра
        ///</summary>
        public string FileName { get; set; } // FILE_NAME (length: 512)

        // Foreign keys

        /// <summary>
        /// Parent ReqType pointed by [SMEV_RESPONSE].([ReqTypeId]) (FK_SMEV_RESPONSE_REQ_TYPE)
        /// </summary>
        public virtual ReqType ReqType { get; set; } // FK_SMEV_RESPONSE_REQ_TYPE

        public SmevResponse()
        {
            D85 = System.DateTime.Now;
        }
    }

    // SobytieOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SobytieOtdel
    {
        public int IdSobytieSystem { get; set; } // IdSobytieSystem (Primary key)
        public string DescriptionSobytie { get; set; } // DescriptionSobytie (length: 256)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ServiceWcfCommands where [ServiceWcfCommand].[IdSobytieSystem] point to this entity (FK_ServiceWcfCommand_SobytieOtdel)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ServiceWcfCommand> ServiceWcfCommands { get; set; } // ServiceWcfCommand.FK_ServiceWcfCommand_SobytieOtdel

        public SobytieOtdel()
        {
            ServiceWcfCommands = new System.Collections.Generic.List<ServiceWcfCommand>();
        }
    }

    // StatusTrebOnIcass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusTrebOnIcass
    {
        public int IdStatus { get; set; } // IdStatus (Primary key)
        public string StatusText { get; set; } // StatusText (length: 128)

        // Reverse navigation

        /// <summary>
        /// Child AhalisBdks where [AhalisBdk].[idanalis] point to this entity (FK_AhalisBdk_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AhalisBdk> AhalisBdks_Idanalis { get; set; } // AhalisBdk.FK_AhalisBdk_StatusTrebOnIcass
        /// <summary>
        /// Child AhalisBdks where [AhalisBdk].[idok] point to this entity (FK_AhalisBdk1_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AhalisBdk> AhalisBdks_Idok { get; set; } // AhalisBdk.FK_AhalisBdk1_StatusTrebOnIcass
        /// <summary>
        /// Child TableSysNumReshens where [TableSysNumReshen].[IdStatus_1] point to this entity (FK_TableSysNumReshen_StatusTrebOnIcass)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TableSysNumReshen> TableSysNumReshens_IdStatus1 { get; set; } // TableSysNumReshen.FK_TableSysNumReshen_StatusTrebOnIcass
        /// <summary>
        /// Child TableSysNumReshens where [TableSysNumReshen].[IdStatus_2] point to this entity (FK_TableSysNumReshen_StatusTrebOnIcass_2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TableSysNumReshen> TableSysNumReshens_IdStatus2 { get; set; } // TableSysNumReshen.FK_TableSysNumReshen_StatusTrebOnIcass_2

        public StatusTrebOnIcass()
        {
            AhalisBdks_Idanalis = new System.Collections.Generic.List<AhalisBdk>();
            AhalisBdks_Idok = new System.Collections.Generic.List<AhalisBdk>();
            TableSysNumReshens_IdStatus1 = new System.Collections.Generic.List<TableSysNumReshen>();
            TableSysNumReshens_IdStatus2 = new System.Collections.Generic.List<TableSysNumReshen>();
        }
    }

    // Stone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Stone
    {
        public int IdStone { get; set; } // IdStone (Primary key)
        public string Stone1 { get; set; } // Stone1
        public string Stone2 { get; set; } // Stone2
        public string Stone3 { get; set; } // Stone3
        public string Stone4 { get; set; } // Stone4
        public string Stone5 { get; set; } // Stone5
        public string Stone6 { get; set; } // Stone6
        public string Stone7 { get; set; } // Stone7
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Templates where [Template].[IdStone] point to this entity (FK_Template_Stone)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Template> Templates { get; set; } // Template.FK_Template_Stone

        public Stone()
        {
            Templates = new System.Collections.Generic.List<Template>();
        }
    }

    // TableSysNumReshen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TableSysNumReshen
    {
        public int D270 { get; set; } // D270 (Primary key)
        public int? IdStatus1 { get; set; } // IdStatus_1
        public string ErrorReshenie { get; set; } // ErrorReshenie
        public System.DateTime? DateBlokReshenie { get; set; } // DateBlokReshenie
        public int? IdStatus2 { get; set; } // IdStatus_2
        public string ErrorIncass { get; set; } // ErrorIncass
        public System.DateTime? DateBlokIncass { get; set; } // DateBlokIncass
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) TableSysNumReshen pointed by [Reshenie].[D270] (FK_Reshenie_TableSysNumReshen)
        /// </summary>
        public virtual Reshenie Reshenie { get; set; } // Reshenie.FK_Reshenie_TableSysNumReshen

        // Foreign keys

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [TableSysNumReshen].([IdStatus1]) (FK_TableSysNumReshen_StatusTrebOnIcass)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_IdStatus1 { get; set; } // FK_TableSysNumReshen_StatusTrebOnIcass

        /// <summary>
        /// Parent StatusTrebOnIcass pointed by [TableSysNumReshen].([IdStatus2]) (FK_TableSysNumReshen_StatusTrebOnIcass_2)
        /// </summary>
        public virtual StatusTrebOnIcass StatusTrebOnIcass_IdStatus2 { get; set; } // FK_TableSysNumReshen_StatusTrebOnIcass_2
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Template
    {
        public int IdTemplate { get; set; } // IdTemplate (Primary key)
        public int IdHeaders { get; set; } // IdHeaders
        public int IdBody { get; set; } // IdBody
        public int IdStone { get; set; } // IdStone
        public System.DateTime? DateCreateTemplate { get; set; } // DateCreateTemplate

        // Reverse navigation

        /// <summary>
        /// Child NameDocuments where [NameDocument].[IdTemplate] point to this entity (FK_NameDocument_Template)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NameDocument> NameDocuments { get; set; } // NameDocument.FK_NameDocument_Template

        // Foreign keys

        /// <summary>
        /// Parent Body pointed by [Template].([IdBody]) (FK_Template_Body)
        /// </summary>
        public virtual Body Body { get; set; } // FK_Template_Body

        /// <summary>
        /// Parent Header pointed by [Template].([IdHeaders]) (FK_Template_Headers)
        /// </summary>
        public virtual Header Header { get; set; } // FK_Template_Headers

        /// <summary>
        /// Parent Stone pointed by [Template].([IdStone]) (FK_Template_Stone)
        /// </summary>
        public virtual Stone Stone { get; set; } // FK_Template_Stone

        public Template()
        {
            NameDocuments = new System.Collections.Generic.List<NameDocument>();
        }
    }

    // UseTableTemplateBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UseTableTemplateBdk
    {
        public int Id { get; set; } // Id (Primary key)
        public System.Guid Numerdocument { get; set; } // Numerdocument (Primary key)
        public string N279 { get; set; } // N279 (length: 4)
        public string N280 { get; set; } // N280 (length: 256)
        public System.DateTime? D85 { get; set; } // D85
        public string D981 { get; set; } // D981 (length: 128)

    }

    // VAT_DATA
    ///<summary>
    /// Таблица для анализа деклараций НДС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VatDatum
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН задания для анализа
        ///</summary>
        public int ShedJobId { get; set; } // SHED_JOB_ID

        ///<summary>
        /// Код инспекции с данными
        ///</summary>
        public int N279 { get; set; } // N279

        ///<summary>
        /// УН декларации
        ///</summary>
        public int D270 { get; set; } // D270

        ///<summary>
        /// Код показателя
        ///</summary>
        public string RCode { get; set; } // R_CODE (length: 100)

        ///<summary>
        /// Порядок сортировки показателя
        ///</summary>
        public int Ord { get; set; } // ORD

        ///<summary>
        /// Название показателя
        ///</summary>
        public string RTitle { get; set; } // R_TITLE (length: 100)

        ///<summary>
        /// Значение показателя
        ///</summary>
        public string Amount { get; set; } // AMOUNT (length: 100)
    }

    // VidDelaException
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VidDelaException
    {
        public int Id { get; set; } // id (Primary key)
        public int? Vid { get; set; } // vid
    }

    // WordDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WordDocument
    {
        public int Id { get; set; } // Id (Primary key)
        public System.Guid Numerdocument { get; set; } // Numerdocument
        public int IdNamedocument { get; set; } // IdNamedocument
        public string Namefile { get; set; } // Namefile (length: 128)
        public byte[] Document { get; set; } // Document
        public string TypeFile { get; set; } // TypeFile (length: 5)
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent NameDocument pointed by [WordDocument].([IdNamedocument]) (FK_WordDocument_NameDocument)
        /// </summary>
        public virtual NameDocument NameDocument { get; set; } // FK_WordDocument_NameDocument

        public WordDocument()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // XL_REPORT
    ///<summary>
    /// Отчеты в Excel для дальнейшей обработки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReport
    {

        ///<summary>
        /// УН отчета
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// Название отчета
        ///</summary>
        public string Title { get; set; } // TITLE (length: 1500)

        ///<summary>
        /// Дата формирования отчета
        ///</summary>
        public System.DateTime D85 { get; set; } // D85

        ///<summary>
        /// Файл с отчетом
        ///</summary>
        public byte[] Data { get; set; } // DATA (length: 2147483647)
        public int RiskMimeId { get; set; } // RISK_MIME_ID

        ///<summary>
        /// Время жизни отчета в днях. По истечение времени жизни отчет удаляется из базы техпроцессом.
        ///</summary>
        public int Ttl { get; set; } // TTL

        // Reverse navigation

        /// <summary>
        /// Child XlReportAcls where [XL_REPORT_ACL].[XL_REPORT_ID] point to this entity (FK_XL_REPORT_ACL_XL_REPORT)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<XlReportAcl> XlReportAcls { get; set; } // XL_REPORT_ACL.FK_XL_REPORT_ACL_XL_REPORT

        // Foreign keys

        /// <summary>
        /// Parent RiskMime pointed by [XL_REPORT].([RiskMimeId]) (FK_XL_REPORT_RISK_MIME)
        /// </summary>
        public virtual RiskMime RiskMime { get; set; } // FK_XL_REPORT_RISK_MIME

        public XlReport()
        {
            D85 = System.DateTime.Now;
            Ttl = 5;
            XlReportAcls = new System.Collections.Generic.List<XlReportAcl>();
        }
    }

    // XL_REPORT_ACL
    ///<summary>
    /// Разрешения на доступ к отчету
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportAcl
    {

        ///<summary>
        /// УН записи
        ///</summary>
        public int Id { get; set; } // ID (Primary key)

        ///<summary>
        /// УН отчета
        ///</summary>
        public int XlReportId { get; set; } // XL_REPORT_ID

        ///<summary>
        /// УН доступа
        ///</summary>
        public int ReportFilterId { get; set; } // REPORT_FILTER_ID

        ///<summary>
        /// Значение списка разрешений. Например, УН группы, если разрешения на группу.
        ///</summary>
        public int Value { get; set; } // VALUE

        // Foreign keys

        /// <summary>
        /// Parent ReportFilter pointed by [XL_REPORT_ACL].([ReportFilterId]) (FK_XL_REPORT_ACL_REPORT_FILTER)
        /// </summary>
        public virtual ReportFilter ReportFilter { get; set; } // FK_XL_REPORT_ACL_REPORT_FILTER

        /// <summary>
        /// Parent XlReport pointed by [XL_REPORT_ACL].([XlReportId]) (FK_XL_REPORT_ACL_XL_REPORT)
        /// </summary>
        public virtual XlReport XlReport { get; set; } // FK_XL_REPORT_ACL_XL_REPORT
    }

    #endregion

    #region POCO Configuration

    // AhalisBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AhalisBdkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AhalisBdk>
    {
        public AhalisBdkConfiguration()
            : this("dbo")
        {
        }

        public AhalisBdkConfiguration(string schema)
        {
            ToTable("AhalisBdk", schema);
            HasKey(x => x.Idtable);

            Property(x => x.Idtable).HasColumnName(@"Idtable").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DbName1).HasColumnName(@"DbName_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VerConteiner1).HasColumnName(@"VerConteiner_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Rus1).HasColumnName(@"RUS_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.N2791).HasColumnName(@"N279_1").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.D27021).HasColumnName(@"D2702_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Viddela1).HasColumnName(@"Viddela_1").HasColumnType("int").IsOptional();
            Property(x => x.D3970).HasColumnName(@"D3970").HasColumnType("int").IsOptional();
            Property(x => x.D09).HasColumnName(@"D09").HasColumnType("tinyint").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N2792).HasColumnName(@"N279_2").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Idanalis).HasColumnName(@"idanalis").HasColumnType("int").IsOptional();
            Property(x => x.MessageError).HasColumnName(@"MessageError").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataError).HasColumnName(@"DataError").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Idok).HasColumnName(@"idok").HasColumnType("int").IsOptional();
            Property(x => x.MessageOk).HasColumnName(@"MessageOk").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataOk).HasColumnName(@"DataOk").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.NumDelo).HasColumnName(@"NumDelo").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusTrebOnIcass_Idanalis).WithMany(b => b.AhalisBdks_Idanalis).HasForeignKey(c => c.Idanalis).WillCascadeOnDelete(false); // FK_AhalisBdk_StatusTrebOnIcass
            HasOptional(a => a.StatusTrebOnIcass_Idok).WithMany(b => b.AhalisBdks_Idok).HasForeignKey(c => c.Idok).WillCascadeOnDelete(false); // FK_AhalisBdk1_StatusTrebOnIcass
        }
    }

    // BANK_ACC_EXCLUSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccExclusionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankAccExclusion>
    {
        public BankAccExclusionConfiguration()
            : this("dbo")
        {
        }

        public BankAccExclusionConfiguration(string schema)
        {
            ToTable("BANK_ACC_EXCLUSION", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
        }
    }

    // BANK_ACC_PLAN
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankAccPlanConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankAccPlan>
    {
        public BankAccPlanConfiguration()
            : this("dbo")
        {
        }

        public BankAccPlanConfiguration(string schema)
        {
            ToTable("BANK_ACC_PLAN", schema);
            HasKey(x => x.N89);

            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.BankAccExclusionId).HasColumnName(@"BANK_ACC_EXCLUSION_ID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.BankAccExclusion).WithMany(b => b.BankAccPlans).HasForeignKey(c => c.BankAccExclusionId).WillCascadeOnDelete(false); // FK_BANK_ACC_PLAN_BANK_ACC_PLAN
        }
    }

    // BANK_DOCUMENT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankDocument>
    {
        public BankDocumentConfiguration()
            : this("dbo")
        {
        }

        public BankDocumentConfiguration(string schema)
        {
            ToTable("BANK_DOCUMENT", schema);
            HasKey(x => x.D4232);

            Property(x => x.D4232).HasColumnName(@"D4232").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // BANK_OPERATIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BankOperationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BankOperation>
    {
        public BankOperationConfiguration()
            : this("dbo")
        {
        }

        public BankOperationConfiguration(string schema)
        {
            ToTable("BANK_OPERATIONS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.D832).HasColumnName(@"D83_2").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.D833).HasColumnName(@"D83_3").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.BankOperations).HasForeignKey(c => c.RiskCheckerId); // FK_BANK_OPERATIONS_RISK_CHECKER
        }
    }

    // Body
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class BodyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Body>
    {
        public BodyConfiguration()
            : this("dbo")
        {
        }

        public BodyConfiguration(string schema)
        {
            ToTable("Body", schema);
            HasKey(x => x.IdBody);

            Property(x => x.IdBody).HasColumnName(@"IdBody").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.BodyGl1).HasColumnName(@"BodyGl1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl2).HasColumnName(@"BodyGl2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl3).HasColumnName(@"BodyGl3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl4).HasColumnName(@"BodyGl4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.BodyGl5).HasColumnName(@"BodyGl5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CBR_BANKS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrBank>
    {
        public CbrBankConfiguration()
            : this("dbo")
        {
        }

        public CbrBankConfiguration(string schema)
        {
            ToTable("CBR_BANKS", schema);
            HasKey(x => x.D38076);

            Property(x => x.D38076).HasColumnName(@"D3807_6").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InternalCode).HasColumnName(@"INTERNAL_CODE").HasColumnType("numeric").IsRequired().HasPrecision(18,2);
        }
    }

    // CBR_BANK_RELEVANCE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CbrBankRelevanceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrBankRelevance>
    {
        public CbrBankRelevanceConfiguration()
            : this("dbo")
        {
        }

        public CbrBankRelevanceConfiguration(string schema)
        {
            ToTable("CBR_BANK_RELEVANCE", schema);
            HasKey(x => x.CbrBankRelevanceId);

            Property(x => x.CbrBankRelevanceId).HasColumnName(@"CBR_BANK_RELEVANCE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D851).HasColumnName(@"D85_1").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // ClassOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClassOtdel>
    {
        public ClassOtdelConfiguration()
            : this("dbo")
        {
        }

        public ClassOtdelConfiguration(string schema)
        {
            ToTable("ClassOtdel", schema);
            HasKey(x => x.IdClass);

            Property(x => x.IdClass).HasColumnName(@"IdClass").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClassLanguage).HasColumnName(@"ClassLanguage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ClassDescription).HasColumnName(@"ClassDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CONFIG_CODE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConfigCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ConfigCode>
    {
        public ConfigCodeConfiguration()
            : this("dbo")
        {
        }

        public ConfigCodeConfiguration(string schema)
        {
            ToTable("CONFIG_CODE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"DESCRIPTION").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Hide).HasColumnName(@"HIDE").HasColumnType("bit").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // DB_CONFIG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class DbConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DbConfig>
    {
        public DbConfigConfiguration()
            : this("dbo")
        {
        }

        public DbConfigConfiguration(string schema)
        {
            ToTable("DB_CONFIG", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // Face
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FaceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Face>
    {
        public FaceConfiguration()
            : this("dbo")
        {
        }

        public FaceConfiguration(string schema)
        {
            ToTable("Face", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1Old).HasColumnName(@"N1old").HasColumnType("int").IsOptional();
            Property(x => x.N1New).HasColumnName(@"N1new").HasColumnType("int").IsOptional();
            Property(x => x.Messagee).HasColumnName(@"Messagee").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateFace).HasColumnName(@"DateFace").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // fn1341
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1341>
    {
        public Fn1341Configuration()
            : this("dbo")
        {
        }

        public Fn1341Configuration(string schema)
        {
            ToTable("fn1341", schema);
            HasKey(x => x.D3480);

            Property(x => x.D3480).HasColumnName(@"D3480").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3481).HasColumnName(@"D3481").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.D3482).HasColumnName(@"D3482").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
        }
    }

    // FN1341_TRUST
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1341TrustConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1341Trust>
    {
        public Fn1341TrustConfiguration()
            : this("dbo")
        {
        }

        public Fn1341TrustConfiguration(string schema)
        {
            ToTable("FN1341_TRUST", schema);
            HasKey(x => x.Fn1341TrustId);

            Property(x => x.Fn1341TrustId).HasColumnName(@"FN1341_TRUST_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D3481).HasColumnName(@"D3481").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Reason).HasColumnName(@"REASON").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // FN18441
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn18441Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn18441>
    {
        public Fn18441Configuration()
            : this("dbo")
        {
        }

        public Fn18441Configuration(string schema)
        {
            ToTable("FN18441", schema);
            HasKey(x => x.N18441);

            Property(x => x.N18441).HasColumnName(@"N18441").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N18442).HasColumnName(@"N18442").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // FN1903
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn1903Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn1903>
    {
        public Fn1903Configuration()
            : this("dbo")
        {
        }

        public Fn1903Configuration(string schema)
        {
            ToTable("FN1903", schema);
            HasKey(x => x.S2123);

            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.S2125).HasColumnName(@"S2125").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.S2126).HasColumnName(@"S2126").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // FN3042
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn3042Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn3042>
    {
        public Fn3042Configuration()
            : this("dbo")
        {
        }

        public Fn3042Configuration(string schema)
        {
            ToTable("FN3042", schema);
            HasKey(x => x.N1525);

            Property(x => x.N1525).HasColumnName(@"N1525").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1526).HasColumnName(@"N1526").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.N1527).HasColumnName(@"N1527").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Synch).HasColumnName(@"Synch").HasColumnType("tinyint").IsOptional();
            Property(x => x.SystemId).HasColumnName(@"system_id").HasColumnType("int").IsOptional();
            Property(x => x.Prim).HasColumnName(@"Prim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

    // FN72_WEB
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Fn72WebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fn72Web>
    {
        public Fn72WebConfiguration()
            : this("dbo")
        {
        }

        public Fn72WebConfiguration(string schema)
        {
            ToTable("FN72_WEB", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired();
            Property(x => x.RiskWebId).HasColumnName(@"RISK_WEB_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskFn72).WithMany(b => b.Fn72Web).HasForeignKey(c => c.N274); // FK_FN72_WEB_RISK_FN72
            HasRequired(a => a.RiskWeb).WithMany(b => b.Fn72Web).HasForeignKey(c => c.RiskWebId); // FK_FN72_WEB_RISK_WEB
        }
    }

    // GroupOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class GroupOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GroupOtdel>
    {
        public GroupOtdelConfiguration()
            : this("dbo")
        {
        }

        public GroupOtdelConfiguration(string schema)
        {
            ToTable("GroupOtdel", schema);
            HasKey(x => x.IdGroup);

            Property(x => x.IdGroup).HasColumnName(@"IdGroup").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GroupDescription).HasColumnName(@"GroupDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NameGroup).HasColumnName(@"NameGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Headers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class HeaderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Header>
    {
        public HeaderConfiguration()
            : this("dbo")
        {
        }

        public HeaderConfiguration(string schema)
        {
            ToTable("Headers", schema);
            HasKey(x => x.IdHeaders);

            Property(x => x.IdHeaders).HasColumnName(@"IdHeaders").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TextHeade1).HasColumnName(@"TextHeade1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade2).HasColumnName(@"TextHeade2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade3).HasColumnName(@"TextHeade3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade4).HasColumnName(@"TextHeade4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade5).HasColumnName(@"TextHeade5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade6).HasColumnName(@"TextHeade6").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade7).HasColumnName(@"TextHeade7").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade8).HasColumnName(@"TextHeade8").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade9).HasColumnName(@"TextHeade9").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TextHeade10).HasColumnName(@"TextHeade10").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Incass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class IncassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Incass>
    {
        public IncassConfiguration()
            : this("dbo")
        {
        }

        public IncassConfiguration(string schema)
        {
            ToTable("Incass", schema);
            HasKey(x => x.D851Incass);

            Property(x => x.D851Res1).HasColumnName(@"D851Res_1").HasColumnType("int").IsOptional();
            Property(x => x.D850Incass).HasColumnName(@"D850Incass").HasColumnType("int").IsOptional();
            Property(x => x.D851Incass).HasColumnName(@"D851Incass").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Summ).HasColumnName(@"Summ").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.D270IshIncass).HasColumnName(@"D270IshIncass").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Reshenie).WithMany(b => b.Incasses).HasForeignKey(c => c.D851Res1); // FK_Incass_Reshenie
        }
    }

    // JOB_DATA_DT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataDtConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataDt>
    {
        public JobDataDtConfiguration()
            : this("dbo")
        {
        }

        public JobDataDtConfiguration(string schema)
        {
            ToTable("JOB_DATA_DT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataDt); // FK_JOB_DATA_DT_JOB_DATA
        }
    }

    // JOB_DATA_INT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataIntConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataInt>
    {
        public JobDataIntConfiguration()
            : this("dbo")
        {
        }

        public JobDataIntConfiguration(string schema)
        {
            ToTable("JOB_DATA_INT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataInt); // FK_JOB_DATA_INT_JOB_DATA
        }
    }

    // JOB_DATA_STR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDataStrConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDataStr>
    {
        public JobDataStrConfiguration()
            : this("dbo")
        {
        }

        public JobDataStrConfiguration(string schema)
        {
            ToTable("JOB_DATA_STR", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.JobDatum).WithOptional(b => b.JobDataStr); // FK_JOB_DATA_STR_JOB_DATA
        }
    }

    // JOB_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class JobDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobDatum>
    {
        public JobDatumConfiguration()
            : this("dbo")
        {
        }

        public JobDatumConfiguration(string schema)
        {
            ToTable("JOB_DATA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.FieldId).HasColumnName(@"FIELD_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskField).WithMany(b => b.JobDatums).HasForeignKey(c => c.FieldId).WillCascadeOnDelete(false); // FK_JOB_DATA_RISK_FIELDS
            HasRequired(a => a.ShedJob).WithMany(b => b.JobDatums).HasForeignKey(c => c.ShedJobId); // FK_JOB_DATA_SHED_JOB
        }
    }

    // LOTUS_DOCS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusDocConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusDoc>
    {
        public LotusDocConfiguration()
            : this("dbo")
        {
        }

        public LotusDocConfiguration(string schema)
        {
            ToTable("LOTUS_DOCS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DocumentId).HasColumnName(@"DOCUMENT_ID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Md5).HasColumnName(@"MD5").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D86).HasColumnName(@"D86").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Utp).HasColumnName(@"UTP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Uts).HasColumnName(@"UTS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // LOTUS_FILE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusFileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusFile>
    {
        public LotusFileConfiguration()
            : this("dbo")
        {
        }

        public LotusFileConfiguration(string schema)
        {
            ToTable("LOTUS_FILE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Fileno).HasColumnName(@"FILENO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Numprefix).HasColumnName(@"NUMPREFIX").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Numpostfix).HasColumnName(@"NUMPOSTFIX").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Separator).HasColumnName(@"SEPARATOR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Numindexpl).HasColumnName(@"NUMINDEXPL").HasColumnType("int").IsRequired();
            Property(x => x.Mantissa).HasColumnName(@"MANTISSA").HasColumnType("int").IsRequired();
        }
    }

    // LOTUS_SEQUENCE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LotusSequenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LotusSequence>
    {
        public LotusSequenceConfiguration()
            : this("dbo")
        {
        }

        public LotusSequenceConfiguration(string schema)
        {
            ToTable("LOTUS_SEQUENCE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Fileid).HasColumnName(@"FILEID").HasColumnType("int").IsRequired();
            Property(x => x.Strt).HasColumnName(@"STRT").HasColumnType("int").IsRequired();
            Property(x => x.Curval).HasColumnName(@"CURVAL").HasColumnType("int").IsRequired();
            Property(x => x.Maxval).HasColumnName(@"MAXVAL").HasColumnType("int").IsRequired();
            Property(x => x.DtInt).HasColumnName(@"DT_INT").HasColumnType("int").IsOptional().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasRequired(a => a.LotusFile).WithMany(b => b.LotusSequences).HasForeignKey(c => c.Fileid); // FK_LOTUS_SEQUENCE_LOTUS_FILE
        }
    }

    // NameDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class NameDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameDocument>
    {
        public NameDocumentConfiguration()
            : this("dbo")
        {
        }

        public NameDocumentConfiguration(string schema)
        {
            ToTable("NameDocument", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired();
            Property(x => x.NameDocument_).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ManualDoc).HasColumnName(@"ManualDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Template).WithMany(b => b.NameDocuments).HasForeignKey(c => c.IdTemplate).WillCascadeOnDelete(false); // FK_NameDocument_Template
        }
    }

    // RB_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RbReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RbReport>
    {
        public RbReportConfiguration()
            : this("dbo")
        {
        }

        public RbReportConfiguration(string schema)
        {
            ToTable("RB_REPORT", schema);
            HasKey(x => x.ReportId);

            Property(x => x.ReportId).HasColumnName(@"REPORT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReportCode).HasColumnName(@"REPORT_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ReportImage).HasColumnName(@"REPORT_IMAGE").HasColumnType("image").IsRequired().HasMaxLength(2147483647);
            Property(x => x.ReportTitle).HasColumnName(@"REPORT_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReportQuery).HasColumnName(@"REPORT_QUERY").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
        }
    }

    // REPORT_FILTER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReportFilterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReportFilter>
    {
        public ReportFilterConfiguration()
            : this("dbo")
        {
        }

        public ReportFilterConfiguration(string schema)
        {
            ToTable("REPORT_FILTER", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
        }
    }

    // REQ_TYPE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReqTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReqType>
    {
        public ReqTypeConfiguration()
            : this("dbo")
        {
        }

        public ReqTypeConfiguration(string schema)
        {
            ToTable("REQ_TYPE", schema);
            HasKey(x => x.ReqTypeId);

            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReqTypeTitle).HasColumnName(@"REQ_TYPE_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.KeyField).HasColumnName(@"KEY_FIELD").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ReqTtl).HasColumnName(@"REQ_TTL").HasColumnType("int").IsRequired();
            Property(x => x.CutOffDate).HasColumnName(@"CUT_OFF_DATE").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // Reshenie
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReshenieConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Reshenie>
    {
        public ReshenieConfiguration()
            : this("dbo")
        {
        }

        public ReshenieConfiguration(string schema)
        {
            ToTable("Reshenie", schema);
            HasKey(x => x.D851Res);

            Property(x => x.D865).HasColumnName(@"D865").HasColumnType("int").IsOptional();
            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired();
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.Summ).HasColumnName(@"Summ").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.N120).HasColumnName(@"N120").HasColumnType("decimal").IsOptional().HasPrecision(19,2);
            Property(x => x.D850Res).HasColumnName(@"D850Res").HasColumnType("int").IsOptional();
            Property(x => x.D851Res).HasColumnName(@"D851Res").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D865Res).HasColumnName(@"D865Res").HasColumnType("int").IsOptional();
            Property(x => x.D270IshRes).HasColumnName(@"D270IshRes").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.TableSysNumReshen).WithOptional(b => b.Reshenie); // FK_Reshenie_TableSysNumReshen
        }
    }

    // RISK_CHECKER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskChecker>
    {
        public RiskCheckerConfiguration()
            : this("dbo")
        {
        }

        public RiskCheckerConfiguration(string schema)
        {
            ToTable("RISK_CHECKER", schema);
            HasKey(x => x.RiskCheckerId);

            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("int").IsOptional();
        }
    }

    // RISK_CHECKER_ACC
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerAccConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCheckerAcc>
    {
        public RiskCheckerAccConfiguration()
            : this("dbo")
        {
        }

        public RiskCheckerAccConfiguration(string schema)
        {
            ToTable("RISK_CHECKER_ACC", schema);
            HasKey(x => x.RiskCheckerAccId);

            Property(x => x.RiskCheckerAccId).HasColumnName(@"RISK_CHECKER_ACC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N269).HasColumnName(@"N269").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1500);

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskCheckerAccs).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_CHECKER_ACC_RISK_CHECKER
        }
    }

    // RISK_CHECKER_HISTORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerHistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCheckerHistory>
    {
        public RiskCheckerHistoryConfiguration()
            : this("dbo")
        {
        }

        public RiskCheckerHistoryConfiguration(string schema)
        {
            ToTable("RISK_CHECKER_HISTORY", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Sname).HasColumnName(@"SNAME").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskCheckerHistories).HasForeignKey(c => c.RiskCheckerId).WillCascadeOnDelete(false); // FK_RISK_CHECKER_HISTORY_RISK_CHECKER
        }
    }

    // RISK_CHECKER_TO_212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCheckerTo212Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCheckerTo212>
    {
        public RiskCheckerTo212Configuration()
            : this("dbo")
        {
        }

        public RiskCheckerTo212Configuration(string schema)
        {
            ToTable("RISK_CHECKER_TO_212", schema);
            HasKey(x => x.RiskCheckerTo212Id);

            Property(x => x.RiskCheckerTo212Id).HasColumnName(@"RISK_CHECKER_TO_212_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Flag).HasColumnName(@"FLAG").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.RiskFn212).WithMany(b => b.RiskCheckerTo212).HasForeignKey(c => c.N1); // FK_RISK_CHECKER_TO_212_RISK_FN212
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskCheckerTo212).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_CHECKER_TO_212_RISK_CHECKER
        }
    }

    // RISK_CYCLE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskCycleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskCycle>
    {
        public RiskCycleConfiguration()
            : this("dbo")
        {
        }

        public RiskCycleConfiguration(string schema)
        {
            ToTable("RISK_CYCLE", schema);
            HasKey(x => x.CycleId);

            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CycleTitle).HasColumnName(@"CYCLE_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
            Property(x => x.PoolSize).HasColumnName(@"POOL_SIZE").HasColumnType("int").IsRequired();
            Property(x => x.Enumerator).HasColumnName(@"ENUMERATOR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Ttl).HasColumnName(@"TTL").HasColumnType("int").IsRequired();
            Property(x => x.HandlerId).HasColumnName(@"HANDLER_ID").HasColumnType("int").IsRequired();
            HasMany(t => t.ReqTypes).WithMany(t => t.RiskCycles).Map(m =>
            {
                m.ToTable("REQ_TO_CYCLE", "dbo");
                m.MapLeftKey("CYCLE_ID");
                m.MapRightKey("REQ_TYPE_ID");
            });
        }
    }

    // RISK_DOSSIER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskDossierConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskDossier>
    {
        public RiskDossierConfiguration()
            : this("dbo")
        {
        }

        public RiskDossierConfiguration(string schema)
        {
            ToTable("RISK_DOSSIER", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReportCode).HasColumnName(@"REPORT_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Num).HasColumnName(@"NUM").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired();
        }
    }

    // RISK_FAILURE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFailureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFailure>
    {
        public RiskFailureConfiguration()
            : this("dbo")
        {
        }

        public RiskFailureConfiguration(string schema)
        {
            ToTable("RISK_FAILURE", schema);
            HasKey(x => new { x.RiskCheckerId, x.CycleId });

            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ErrorMessage).HasColumnName(@"ERROR_MESSAGE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusCode).HasColumnName(@"status_code").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RiskFailures).HasForeignKey(c => c.CycleId).WillCascadeOnDelete(false); // FK_RISK_FAILURE_REQ_TYPE
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFailures).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FAILURE_RISK_CHECKER
        }
    }

    // RISK_FIELDS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskField>
    {
        public RiskFieldConfiguration()
            : this("dbo")
        {
        }

        public RiskFieldConfiguration(string schema)
        {
            ToTable("RISK_FIELDS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // RISK_FN1836
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1836Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1836>
    {
        public RiskFn1836Configuration()
            : this("dbo")
        {
        }

        public RiskFn1836Configuration(string schema)
        {
            ToTable("RISK_FN1836", schema);
            HasKey(x => x.N1308);

            Property(x => x.N1308).HasColumnName(@"N1308").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.N49).HasColumnName(@"N49").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N322).HasColumnName(@"N322").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N5461).HasColumnName(@"N546_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N1510).HasColumnName(@"N1510").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D1772).HasColumnName(@"D1772").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.N617).HasColumnName(@"N617").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.K320).HasColumnName(@"K320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);

            // Foreign keys
            HasRequired(a => a.RiskFn212).WithMany(b => b.RiskFn1836).HasForeignKey(c => c.N1); // FK_RISK_FN1836_RISK_FN212
        }
    }

    // RISK_FN1844
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1844Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1844>
    {
        public RiskFn1844Configuration()
            : this("dbo")
        {
        }

        public RiskFn1844Configuration(string schema)
        {
            ToTable("RISK_FN1844", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.N18441).HasColumnName(@"N18441").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn18441).WithMany(b => b.RiskFn1844).HasForeignKey(c => c.N18441).WillCascadeOnDelete(false); // FK_RISK_FN1844_FN184411
        }
    }

    // RISK_FN1903
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn1903Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn1903>
    {
        public RiskFn1903Configuration()
            : this("dbo")
        {
        }

        public RiskFn1903Configuration(string schema)
        {
            ToTable("RISK_FN1903", schema);
            HasKey(x => x.S2123);

            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.S2126).HasColumnName(@"S2126").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
        }
    }

    // RISK_FN205
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn205Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn205>
    {
        public RiskFn205Configuration()
            : this("dbo")
        {
        }

        public RiskFn205Configuration(string schema)
        {
            ToTable("RISK_FN205", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.N89).HasColumnName(@"N89").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N95).HasColumnName(@"N95").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N96).HasColumnName(@"N96").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.N111).HasColumnName(@"N111").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N134Fn50).HasColumnName(@"N134Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.D3Fn50).HasColumnName(@"D3Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N18Fn50).HasColumnName(@"N18Fn50").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.D38076).HasColumnName(@"D38076").HasColumnType("int").IsOptional();
            Property(x => x.R248).HasColumnName(@"R248").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Rsource).HasColumnName(@"RSOURCE").HasColumnType("int").IsRequired();
            Property(x => x.D1858).HasColumnName(@"D1858").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFn205).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_FN205_RISK_CHECKER
        }
    }

    // RISK_FN206
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn206Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn206>
    {
        public RiskFn206Configuration()
            : this("dbo")
        {
        }

        public RiskFn206Configuration(string schema)
        {
            ToTable("RISK_FN206", schema);
            HasKey(x => x.N257);

            Property(x => x.N257).HasColumnName(@"N257").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.D3480).HasColumnName(@"D3480").HasColumnType("int").IsRequired();
            Property(x => x.N306).HasColumnName(@"N306").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn1341).WithMany(b => b.RiskFn206).HasForeignKey(c => c.D3480).WillCascadeOnDelete(false); // FK_RISK_FN206_fn1341
            HasRequired(a => a.RiskFn212).WithMany(b => b.RiskFn206).HasForeignKey(c => c.N1); // FK_RISK_FN206_RISK_FN212
        }
    }

    // RISK_FN210
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn210Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn210>
    {
        public RiskFn210Configuration()
            : this("dbo")
        {
        }

        public RiskFn210Configuration(string schema)
        {
            ToTable("RISK_FN210", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.N1036).HasColumnName(@"N1036").HasColumnType("numeric").IsOptional().HasPrecision(20,2);
            Property(x => x.D3).HasColumnName(@"D3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.N135).HasColumnName(@"N135").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Fn1903).WithMany(b => b.RiskFn210).HasForeignKey(c => c.S2123).WillCascadeOnDelete(false); // FK_RISK_FN210_FN1903
            HasRequired(a => a.RiskFn212).WithOptional(b => b.RiskFn210); // FK_RISK_FN210_RISK_FN210
        }
    }

    // RISK_FN211
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn211Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn211>
    {
        public RiskFn211Configuration()
            : this("dbo")
        {
        }

        public RiskFn211Configuration(string schema)
        {
            ToTable("RISK_FN211", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N146).HasColumnName(@"N146").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.N142).HasColumnName(@"N142").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(60);
            Property(x => x.N610).HasColumnName(@"N610").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(60);
            Property(x => x.N147).HasColumnName(@"N147").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N148).HasColumnName(@"N148").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.N320).HasColumnName(@"N320").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.N1002).HasColumnName(@"N1002").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.S2123).HasColumnName(@"S2123").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.RiskFn1903).WithMany(b => b.RiskFn211).HasForeignKey(c => c.S2123).WillCascadeOnDelete(false); // FK_RISK_FN211_FN1903
            HasRequired(a => a.RiskFn212).WithOptional(b => b.RiskFn211); // FK_RISK_FN211_RISK_FN212
        }
    }

    // RISK_FN212
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn212Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn212>
    {
        public RiskFn212Configuration()
            : this("dbo")
        {
        }

        public RiskFn212Configuration(string schema)
        {
            ToTable("RISK_FN212", schema);
            HasKey(x => x.N1);

            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N134).HasColumnName(@"N134").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.N18).HasColumnName(@"N18").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(160);
        }
    }

    // RISK_FN236
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn236Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn236>
    {
        public RiskFn236Configuration()
            : this("dbo")
        {
        }

        public RiskFn236Configuration(string schema)
        {
            ToTable("RISK_FN236", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskFn236).HasForeignKey(c => c.RiskCheckerId).WillCascadeOnDelete(false); // FK_RISK_FN236_RISK_CHECKER
            HasRequired(a => a.RiskFn212).WithMany(b => b.RiskFn236).HasForeignKey(c => c.N1).WillCascadeOnDelete(false); // FK_RISK_FN236_RISK_FN212
        }
    }

    // RISK_FN245
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn245Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn245>
    {
        public RiskFn245Configuration()
            : this("dbo")
        {
        }

        public RiskFn245Configuration(string schema)
        {
            ToTable("RISK_FN245", schema);
            HasKey(x => x.RiskFn245Id);

            Property(x => x.RiskFn245Id).HasColumnName(@"RISK_FN245_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N1).HasColumnName(@"N1").HasColumnType("int").IsRequired();
            Property(x => x.N11).HasColumnName(@"N1_1").HasColumnType("int").IsRequired();
            Property(x => x.N1525).HasColumnName(@"N1525").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Fn3042).WithMany(b => b.RiskFn245).HasForeignKey(c => c.N1525); // FK_RISK_FN245_FN3042
            HasRequired(a => a.RiskFn212_N1).WithMany(b => b.RiskFn245_N1).HasForeignKey(c => c.N1); // FK_RISK_FN245_RISK_FN212
            HasRequired(a => a.RiskFn212_N11).WithMany(b => b.RiskFn245_N11).HasForeignKey(c => c.N11).WillCascadeOnDelete(false); // FK_RISK_FN245_RISK_FN2121
        }
    }

    // RISK_FN71
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn71Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn71>
    {
        public RiskFn71Configuration()
            : this("dbo")
        {
        }

        public RiskFn71Configuration(string schema)
        {
            ToTable("RISK_FN71", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.DbConfigId).HasColumnName(@"DB_CONFIG_ID").HasColumnType("int").IsRequired();
            Property(x => x.DbSuffix).HasColumnName(@"DB_SUFFIX").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.LinkedServer).HasColumnName(@"LINKED_SERVER").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ConnectionString).HasColumnName(@"CONNECTION_STRING").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.DbConfig).WithMany(b => b.RiskFn71).HasForeignKey(c => c.DbConfigId).WillCascadeOnDelete(false); // FK_RISK_FN71_DB_CONFIG
        }
    }

    // RISK_FN72
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn72Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn72>
    {
        public RiskFn72Configuration()
            : this("dbo")
        {
        }

        public RiskFn72Configuration(string schema)
        {
            ToTable("RISK_FN72", schema);
            HasKey(x => x.N274);

            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N276).HasColumnName(@"N276").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.R250).HasColumnName(@"R250").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("int").IsRequired();
            Property(x => x.N250).HasColumnName(@"N250").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D1989).HasColumnName(@"D1989").HasColumnType("bit").IsRequired();
            Property(x => x.D1990).HasColumnName(@"D1990").HasColumnType("bit").IsRequired();
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.D306).HasColumnName(@"D306").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D19902).HasColumnName(@"D1990_2").HasColumnType("tinyint").IsRequired();
        }
    }

    // RISK_FN74
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskFn74Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskFn74>
    {
        public RiskFn74Configuration()
            : this("dbo")
        {
        }

        public RiskFn74Configuration(string schema)
        {
            ToTable("RISK_FN74", schema);
            HasKey(x => x.N269);

            Property(x => x.N269).HasColumnName(@"N269").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N273).HasColumnName(@"N273").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.D686).HasColumnName(@"D686").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.N274).HasColumnName(@"N274").HasColumnType("int").IsRequired();
            Property(x => x.N249).HasColumnName(@"N249").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.D2348).HasColumnName(@"D2348").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2349).HasColumnName(@"D2349").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2350).HasColumnName(@"D2350").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2351).HasColumnName(@"D2351").HasColumnType("tinyint").IsOptional();
            Property(x => x.D2352).HasColumnName(@"D2352").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(40);
            Property(x => x.D2353).HasColumnName(@"D2353").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.D2354).HasColumnName(@"D2354").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.D40).HasColumnName(@"D40").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D306).HasColumnName(@"D306").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D2355).HasColumnName(@"D2355").HasColumnType("bit").IsRequired();
            Property(x => x.D2356).HasColumnName(@"D2356").HasColumnType("bit").IsRequired();
            Property(x => x.N2731).HasColumnName(@"N273_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.N2491).HasColumnName(@"N249_1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.N2492).HasColumnName(@"N249_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.N2732).HasColumnName(@"N273_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D3828).HasColumnName(@"D3828").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.N250).HasColumnName(@"N250").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.D23542).HasColumnName(@"D2354_2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
        }
    }

    // RISK_LOCK
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskLockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskLock>
    {
        public RiskLockConfiguration()
            : this("dbo")
        {
        }

        public RiskLockConfiguration(string schema)
        {
            ToTable("RISK_LOCK", schema);
            HasKey(x => x.RiskLockId);

            Property(x => x.RiskLockId).HasColumnName(@"RISK_LOCK_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.CycleId).HasColumnName(@"CYCLE_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.AutoRemove).HasColumnName(@"AUTO_REMOVE").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.RiskLocks).HasForeignKey(c => c.CycleId); // FK_RISK_LOCK_REQ_TYPE
        }
    }

    // RISK_MIME
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskMimeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskMime>
    {
        public RiskMimeConfiguration()
            : this("dbo")
        {
        }

        public RiskMimeConfiguration(string schema)
        {
            ToTable("RISK_MIME", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Extension).HasColumnName(@"EXTENSION").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Mime).HasColumnName(@"MIME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
        }
    }

    // RISK_VERSION
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskVersionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskVersion>
    {
        public RiskVersionConfiguration()
            : this("dbo")
        {
        }

        public RiskVersionConfiguration(string schema)
        {
            ToTable("RISK_VERSION", schema);
            HasKey(x => x.RiskVersionId);

            Property(x => x.RiskVersionId).HasColumnName(@"RISK_VERSION_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DbVersion).HasColumnName(@"DB_VERSION").HasColumnType("bigint").IsRequired();
        }
    }

    // RISK_WEB
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskWebConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskWeb>
    {
        public RiskWebConfiguration()
            : this("dbo")
        {
        }

        public RiskWebConfiguration(string schema)
        {
            ToTable("RISK_WEB", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ctl).HasColumnName(@"Ctl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Redir).HasColumnName(@"Redir").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // RISK_YEAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class RiskYearConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RiskYear>
    {
        public RiskYearConfiguration()
            : this("dbo")
        {
        }

        public RiskYearConfiguration(string schema)
        {
            ToTable("RISK_YEAR", schema);
            HasKey(x => x.RiskYearId);

            Property(x => x.RiskYearId).HasColumnName(@"RISK_YEAR_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RiskCheckerId).HasColumnName(@"RISK_CHECKER_ID").HasColumnType("int").IsRequired();
            Property(x => x.D250).HasColumnName(@"D250").HasColumnType("int").IsRequired();
            Property(x => x.Qty).HasColumnName(@"QTY").HasColumnType("int").IsRequired();
            Property(x => x.QueryId).HasColumnName(@"QUERY_ID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.RiskChecker).WithMany(b => b.RiskYears).HasForeignKey(c => c.RiskCheckerId); // FK_RISK_YEAR_RISK_CHECKER
        }
    }

    // ServiceWcfCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ServiceWcfCommandConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceWcfCommand>
    {
        public ServiceWcfCommandConfiguration()
            : this("dbo")
        {
        }

        public ServiceWcfCommandConfiguration(string schema)
        {
            ToTable("ServiceWcfCommand", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdGroup).HasColumnName(@"IdGroup").HasColumnType("int").IsRequired();
            Property(x => x.IdClass).HasColumnName(@"IdClass").HasColumnType("int").IsRequired();
            Property(x => x.IdSobytieSystem).HasColumnName(@"IdSobytieSystem").HasColumnType("int").IsRequired();
            Property(x => x.DescriptionFull).HasColumnName(@"DescriptionFull").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DescriptionParam).HasColumnName(@"DescriptionParam").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Command).HasColumnName(@"Command").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.ClassOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdClass); // FK_ServiceWcfCommand_ClassOtdel
            HasRequired(a => a.GroupOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdGroup); // FK_ServiceWcfCommand_GroupOtdel
            HasRequired(a => a.SobytieOtdel).WithMany(b => b.ServiceWcfCommands).HasForeignKey(c => c.IdSobytieSystem); // FK_ServiceWcfCommand_SobytieOtdel
        }
    }

    // SHED_JOB
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJob>
    {
        public ShedJobConfiguration()
            : this("dbo")
        {
        }

        public ShedJobConfiguration(string schema)
        {
            ToTable("SHED_JOB", schema);
            HasKey(x => x.ShedJobId);

            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.D41).HasColumnName(@"D41").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.ShedJobs).HasForeignKey(c => c.ReqTypeId).WillCascadeOnDelete(false); // FK_SHED_JOB_REQ_TYPE
        }
    }

    // SHED_JOB_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJobDatum>
    {
        public ShedJobDatumConfiguration()
            : this("dbo")
        {
        }

        public ShedJobDatumConfiguration(string schema)
        {
            ToTable("SHED_JOB_DATA", schema);
            HasKey(x => x.ShedJobDataId);

            Property(x => x.ShedJobDataId).HasColumnName(@"SHED_JOB_DATA_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.Field).HasColumnName(@"FIELD").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.ShedJobDatums).HasForeignKey(c => c.ShedJobId); // FK_SHED_JOB_DATA_SHED_JOB
        }
    }

    // SHED_JOB_LOG
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedJobLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedJobLog>
    {
        public ShedJobLogConfiguration()
            : this("dbo")
        {
        }

        public ShedJobLogConfiguration(string schema)
        {
            ToTable("SHED_JOB_LOG", schema);
            HasKey(x => x.ShedJobLogId);

            Property(x => x.ShedJobLogId).HasColumnName(@"SHED_JOB_LOG_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.Field).HasColumnName(@"FIELD").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Err).HasColumnName(@"ERR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);

            // Foreign keys
            HasRequired(a => a.ShedJob).WithMany(b => b.ShedJobLogs).HasForeignKey(c => c.ShedJobId); // FK_SHED_JOB_LOG_SHED_JOB
        }
    }

    // SHED_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShedReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShedReport>
    {
        public ShedReportConfiguration()
            : this("dbo")
        {
        }

        public ShedReportConfiguration(string schema)
        {
            ToTable("SHED_REPORT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Guide).HasColumnName(@"GUIDE").HasColumnType("xml").IsRequired();
        }
    }

    // SIGNATURE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignatureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Signature>
    {
        public SignatureConfiguration()
            : this("dbo")
        {
        }

        public SignatureConfiguration(string schema)
        {
            ToTable("SIGNATURE", schema);
            HasKey(x => x.SignatureId);

            Property(x => x.SignatureId).HasColumnName(@"SIGNATURE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SignerId).HasColumnName(@"SIGNER_ID").HasColumnType("int").IsRequired();
            Property(x => x.SignatureImage).HasColumnName(@"SIGNATURE_IMAGE").HasColumnType("image").IsRequired().HasMaxLength(2147483647);

            // Foreign keys
            HasRequired(a => a.Signer).WithMany(b => b.Signatures).HasForeignKey(c => c.SignerId); // FK_SIGNATURE_SIGNER
        }
    }

    // SIGNER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SignerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Signer>
    {
        public SignerConfiguration()
            : this("dbo")
        {
        }

        public SignerConfiguration(string schema)
        {
            ToTable("SIGNER", schema);
            HasKey(x => x.SignerId);

            Property(x => x.SignerId).HasColumnName(@"SIGNER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SignerExpr).HasColumnName(@"SIGNER_EXPR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.RegEx).HasColumnName(@"REG_EX").HasColumnType("bit").IsRequired();
            Property(x => x.SignerTitle).HasColumnName(@"SIGNER_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SealType).HasColumnName(@"SealType").HasColumnType("int").IsRequired();
            Property(x => x.HoriShift).HasColumnName(@"HoriShift").HasColumnType("float").IsRequired();
            Property(x => x.VertShift).HasColumnName(@"VertShift").HasColumnType("float").IsRequired();
        }
    }

    // SMEV_CAR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevCar>
    {
        public SmevCarConfiguration()
            : this("dbo")
        {
        }

        public SmevCarConfiguration(string schema)
        {
            ToTable("SMEV_CAR", schema);
            HasKey(x => new { x.SmevCarId, x.SmevCarExpr, x.N1076, x.D900 });

            Property(x => x.SmevCarId).HasColumnName(@"SMEV_CAR_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevCarExpr).HasColumnName(@"SMEV_CAR_EXPR").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N1076).HasColumnName(@"N1076").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.D900).HasColumnName(@"D900").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // SMEV_CRED
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevCredConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevCred>
    {
        public SmevCredConfiguration()
            : this("dbo")
        {
        }

        public SmevCredConfiguration(string schema)
        {
            ToTable("SMEV_CRED", schema);
            HasKey(x => x.SmevCredId);

            Property(x => x.SmevCredId).HasColumnName(@"SMEV_CRED_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevLogin).HasColumnName(@"SMEV_LOGIN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SmevPass).HasColumnName(@"SMEV_PASS").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Suser).HasColumnName(@"SUSER").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(255);
            Property(x => x.FdcUser).HasColumnName(@"FdcUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.CredChg).HasColumnName(@"CredChg").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion();
            Property(x => x.CredVer).HasColumnName(@"CredVer").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.PasswdValid).HasColumnName(@"PasswdValid").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SMEV_PARAM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevParamConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevParam>
    {
        public SmevParamConfiguration()
            : this("dbo")
        {
        }

        public SmevParamConfiguration(string schema)
        {
            ToTable("SMEV_PARAM", schema);
            HasKey(x => x.SmevParamId);

            Property(x => x.SmevParamId).HasColumnName(@"SMEV_PARAM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmevParamCode).HasColumnName(@"SMEV_PARAM_CODE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SmevParamValue).HasColumnName(@"SMEV_PARAM_VALUE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SmevParamDescription).HasColumnName(@"SMEV_PARAM_DESCRIPTION").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
        }
    }

    // SMEV_REQ
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevReqConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevReq>
    {
        public SmevReqConfiguration()
            : this("dbo")
        {
        }

        public SmevReqConfiguration(string schema)
        {
            ToTable("SMEV_REQ", schema);
            HasKey(x => x.SmevReqId);

            Property(x => x.SmevReqId).HasColumnName(@"SMEV_REQ_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.KeyValue).HasColumnName(@"KEY_VALUE").HasColumnType("bigint").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.SmevKey).HasColumnName(@"SMEV_KEY").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.SmevReqs).HasForeignKey(c => c.ReqTypeId).WillCascadeOnDelete(false); // FK_SMEV_REQ_REQ_TYPE
        }
    }

    // SMEV_RESPONSE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SmevResponseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmevResponse>
    {
        public SmevResponseConfiguration()
            : this("dbo")
        {
        }

        public SmevResponseConfiguration(string schema)
        {
            ToTable("SMEV_RESPONSE", schema);
            HasKey(x => x.SmevResponseId);

            Property(x => x.SmevResponseId).HasColumnName(@"SMEV_RESPONSE_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.ReqTypeId).HasColumnName(@"REQ_TYPE_ID").HasColumnType("int").IsRequired();
            Property(x => x.Re).HasColumnName(@"RE").HasColumnType("int").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.SmevKey).HasColumnName(@"SMEV_KEY").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.FileName).HasColumnName(@"FILE_NAME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.ReqType).WithMany(b => b.SmevResponses).HasForeignKey(c => c.ReqTypeId).WillCascadeOnDelete(false); // FK_SMEV_RESPONSE_REQ_TYPE
        }
    }

    // SobytieOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SobytieOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SobytieOtdel>
    {
        public SobytieOtdelConfiguration()
            : this("dbo")
        {
        }

        public SobytieOtdelConfiguration(string schema)
        {
            ToTable("SobytieOtdel", schema);
            HasKey(x => x.IdSobytieSystem);

            Property(x => x.IdSobytieSystem).HasColumnName(@"IdSobytieSystem").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DescriptionSobytie).HasColumnName(@"DescriptionSobytie").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StatusTrebOnIcass
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StatusTrebOnIcassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusTrebOnIcass>
    {
        public StatusTrebOnIcassConfiguration()
            : this("dbo")
        {
        }

        public StatusTrebOnIcassConfiguration(string schema)
        {
            ToTable("StatusTrebOnIcass", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusText).HasColumnName(@"StatusText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // Stone
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class StoneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Stone>
    {
        public StoneConfiguration()
            : this("dbo")
        {
        }

        public StoneConfiguration(string schema)
        {
            ToTable("Stone", schema);
            HasKey(x => x.IdStone);

            Property(x => x.IdStone).HasColumnName(@"IdStone").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Stone1).HasColumnName(@"Stone1").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone2).HasColumnName(@"Stone2").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone3).HasColumnName(@"Stone3").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone4).HasColumnName(@"Stone4").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone5).HasColumnName(@"Stone5").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone6).HasColumnName(@"Stone6").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Stone7).HasColumnName(@"Stone7").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TableSysNumReshen
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TableSysNumReshenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableSysNumReshen>
    {
        public TableSysNumReshenConfiguration()
            : this("dbo")
        {
        }

        public TableSysNumReshenConfiguration(string schema)
        {
            ToTable("TableSysNumReshen", schema);
            HasKey(x => x.D270);

            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdStatus1).HasColumnName(@"IdStatus_1").HasColumnType("int").IsOptional();
            Property(x => x.ErrorReshenie).HasColumnName(@"ErrorReshenie").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateBlokReshenie).HasColumnName(@"DateBlokReshenie").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IdStatus2).HasColumnName(@"IdStatus_2").HasColumnType("int").IsOptional();
            Property(x => x.ErrorIncass).HasColumnName(@"ErrorIncass").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateBlokIncass).HasColumnName(@"DateBlokIncass").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.StatusTrebOnIcass_IdStatus1).WithMany(b => b.TableSysNumReshens_IdStatus1).HasForeignKey(c => c.IdStatus1); // FK_TableSysNumReshen_StatusTrebOnIcass
            HasOptional(a => a.StatusTrebOnIcass_IdStatus2).WithMany(b => b.TableSysNumReshens_IdStatus2).HasForeignKey(c => c.IdStatus2).WillCascadeOnDelete(false); // FK_TableSysNumReshen_StatusTrebOnIcass_2
        }
    }

    // Template
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Template>
    {
        public TemplateConfiguration()
            : this("dbo")
        {
        }

        public TemplateConfiguration(string schema)
        {
            ToTable("Template", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdHeaders).HasColumnName(@"IdHeaders").HasColumnType("int").IsRequired();
            Property(x => x.IdBody).HasColumnName(@"IdBody").HasColumnType("int").IsRequired();
            Property(x => x.IdStone).HasColumnName(@"IdStone").HasColumnType("int").IsRequired();
            Property(x => x.DateCreateTemplate).HasColumnName(@"DateCreateTemplate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Body).WithMany(b => b.Templates).HasForeignKey(c => c.IdBody).WillCascadeOnDelete(false); // FK_Template_Body
            HasRequired(a => a.Header).WithMany(b => b.Templates).HasForeignKey(c => c.IdHeaders).WillCascadeOnDelete(false); // FK_Template_Headers
            HasRequired(a => a.Stone).WithMany(b => b.Templates).HasForeignKey(c => c.IdStone).WillCascadeOnDelete(false); // FK_Template_Stone
        }
    }

    // UseTableTemplateBdk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UseTableTemplateBdkConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UseTableTemplateBdk>
    {
        public UseTableTemplateBdkConfiguration()
            : this("dbo")
        {
        }

        public UseTableTemplateBdkConfiguration(string schema)
        {
            ToTable("UseTableTemplateBdk", schema);
            HasKey(x => new { x.Id, x.Numerdocument });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Numerdocument).HasColumnName(@"Numerdocument").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(4);
            Property(x => x.N280).HasColumnName(@"N280").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.D981).HasColumnName(@"D981").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

        }
    }

    // VAT_DATA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VatDatumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VatDatum>
    {
        public VatDatumConfiguration()
            : this("dbo")
        {
        }

        public VatDatumConfiguration(string schema)
        {
            ToTable("VAT_DATA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShedJobId).HasColumnName(@"SHED_JOB_ID").HasColumnType("int").IsRequired();
            Property(x => x.N279).HasColumnName(@"N279").HasColumnType("int").IsRequired();
            Property(x => x.D270).HasColumnName(@"D270").HasColumnType("int").IsRequired();
            Property(x => x.RCode).HasColumnName(@"R_CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Ord).HasColumnName(@"ORD").HasColumnType("int").IsRequired();
            Property(x => x.RTitle).HasColumnName(@"R_TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Amount).HasColumnName(@"AMOUNT").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

    // VidDelaException
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VidDelaExceptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VidDelaException>
    {
        public VidDelaExceptionConfiguration()
            : this("dbo")
        {
        }

        public VidDelaExceptionConfiguration(string schema)
        {
            ToTable("VidDelaException", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Vid).HasColumnName(@"vid").HasColumnType("int").IsOptional();
        }
    }

    // WordDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class WordDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WordDocument>
    {
        public WordDocumentConfiguration()
            : this("dbo")
        {
        }

        public WordDocumentConfiguration(string schema)
        {
            ToTable("WordDocument", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Numerdocument).HasColumnName(@"Numerdocument").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired();
            Property(x => x.Namefile).HasColumnName(@"Namefile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document).HasColumnName(@"Document").HasColumnType("varbinary(max)").IsOptional();
            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.NameDocument).WithMany(b => b.WordDocuments).HasForeignKey(c => c.IdNamedocument).WillCascadeOnDelete(false); // FK_WordDocument_NameDocument
        }
    }

    // XL_REPORT
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XlReport>
    {
        public XlReportConfiguration()
            : this("dbo")
        {
        }

        public XlReportConfiguration(string schema)
        {
            ToTable("XL_REPORT", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"TITLE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1500);
            Property(x => x.D85).HasColumnName(@"D85").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("image").IsRequired().HasMaxLength(2147483647);
            Property(x => x.RiskMimeId).HasColumnName(@"RISK_MIME_ID").HasColumnType("int").IsRequired();
            Property(x => x.Ttl).HasColumnName(@"TTL").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.RiskMime).WithMany(b => b.XlReports).HasForeignKey(c => c.RiskMimeId).WillCascadeOnDelete(false); // FK_XL_REPORT_RISK_MIME
        }
    }

    // XL_REPORT_ACL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class XlReportAclConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<XlReportAcl>
    {
        public XlReportAclConfiguration()
            : this("dbo")
        {
        }

        public XlReportAclConfiguration(string schema)
        {
            ToTable("XL_REPORT_ACL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.XlReportId).HasColumnName(@"XL_REPORT_ID").HasColumnType("int").IsRequired();
            Property(x => x.ReportFilterId).HasColumnName(@"REPORT_FILTER_ID").HasColumnType("int").IsRequired();
            Property(x => x.Value).HasColumnName(@"VALUE").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.ReportFilter).WithMany(b => b.XlReportAcls).HasForeignKey(c => c.ReportFilterId).WillCascadeOnDelete(false); // FK_XL_REPORT_ACL_REPORT_FILTER
            HasRequired(a => a.XlReport).WithMany(b => b.XlReportAcls).HasForeignKey(c => c.XlReportId); // FK_XL_REPORT_ACL_XL_REPORT
        }
    }

    #endregion

}
// </auto-generated>

