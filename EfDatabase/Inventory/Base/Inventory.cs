

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace EfDatabase.Inventory.Base
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IInventoryContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Act> Acts { get; set; } // Act
        System.Data.Entity.DbSet<AksiokAllModel> AksiokAllModels { get; set; } // AksiokAllModel
        System.Data.Entity.DbSet<AllIpServerSelect> AllIpServerSelects { get; set; } // AllIpServerSelect
        System.Data.Entity.DbSet<AllTechnic> AllTechnics { get; set; } // AllTechnics
        System.Data.Entity.DbSet<AllTelephon> AllTelephons { get; set; } // AllTelephon
        System.Data.Entity.DbSet<AllTemplateAndTree> AllTemplateAndTrees { get; set; } // AllTemplateAndTree
        System.Data.Entity.DbSet<AnaliticaSysBlokAndMonitor> AnaliticaSysBlokAndMonitors { get; set; } // AnaliticaSysBlokAndMonitors
        System.Data.Entity.DbSet<AnalysisEpoAndInventarka> AnalysisEpoAndInventarkas { get; set; } // AnalysisEpoAndInventarka
        System.Data.Entity.DbSet<ApplicationsIfn> ApplicationsIfns { get; set; } // ApplicationsIfns
        System.Data.Entity.DbSet<BlockPower> BlockPowers { get; set; } // BlockPower
        System.Data.Entity.DbSet<BookAccounting> BookAccountings { get; set; } // BookAccounting
        System.Data.Entity.DbSet<BookModel> BookModels { get; set; } // BookModels
        System.Data.Entity.DbSet<Calendar> Calendars { get; set; } // Calendar
        System.Data.Entity.DbSet<CalendarVksStp> CalendarVksStps { get; set; } // CalendarVksStp
        System.Data.Entity.DbSet<CalendarVksStpView> CalendarVksStpViews { get; set; } // CalendarVksStpView
        System.Data.Entity.DbSet<CategoriaTemplate> CategoriaTemplates { get; set; } // CategoriaTemplate
        System.Data.Entity.DbSet<CategoryPhoneHeader> CategoryPhoneHeaders { get; set; } // CategoryPhoneHeaders
        System.Data.Entity.DbSet<ClasificationAct> ClasificationActs { get; set; } // ClasificationAct
        System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification
        System.Data.Entity.DbSet<ClassParameterTemplate> ClassParameterTemplates { get; set; } // ClassParameterTemplate
        System.Data.Entity.DbSet<ComputerIpAdressSynhronization> ComputerIpAdressSynhronizations { get; set; } // ComputerIpAdressSynhronization
        System.Data.Entity.DbSet<ComputersAndEpo> ComputersAndEpoes { get; set; } // ComputersAndEpo
        System.Data.Entity.DbSet<ContractOnSto> ContractOnStoes { get; set; } // ContractOnSto
        System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave
        System.Data.Entity.DbSet<DeliveryContract> DeliveryContracts { get; set; } // DeliveryContract
        System.Data.Entity.DbSet<DepartmentRegulation> DepartmentRegulations { get; set; } // DepartmentRegulations
        System.Data.Entity.DbSet<Document> Documents { get; set; } // Document
        System.Data.Entity.DbSet<DocumentModel> DocumentModels { get; set; } // DocumentModel
        System.Data.Entity.DbSet<DoubleComputersName> DoubleComputersNames { get; set; } // DoubleComputersName
        System.Data.Entity.DbSet<EmptyMonitorSupply38> EmptyMonitorSupply38 { get; set; } // EmptyMonitorSupply38
        System.Data.Entity.DbSet<EmptySysBlokSupply40> EmptySysBlokSupply40 { get; set; } // EmptySysBlokSupply40
        System.Data.Entity.DbSet<EpoDocument> EpoDocuments { get; set; } // EpoDocument
        System.Data.Entity.DbSet<EquipmentModel> EquipmentModels { get; set; } // EquipmentModel
        System.Data.Entity.DbSet<EquipmentSto> EquipmentStoes { get; set; } // EquipmentSto
        System.Data.Entity.DbSet<EquipmentType> EquipmentTypes { get; set; } // EquipmentType
        System.Data.Entity.DbSet<Error> Errors { get; set; } // Error
        System.Data.Entity.DbSet<ErrorTokenUser> ErrorTokenUsers { get; set; } // ErrorTokenUser
        System.Data.Entity.DbSet<ErrorUsersNotActual> ErrorUsersNotActuals { get; set; } // ErrorUsersNotActual
        System.Data.Entity.DbSet<EventProcess> EventProcesses { get; set; } // EventProcess
        System.Data.Entity.DbSet<ExpertiseFile> ExpertiseFiles { get; set; } // ExpertiseFile
        System.Data.Entity.DbSet<File> Files { get; set; } // File
        System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel
        System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel
        System.Data.Entity.DbSet<FullTemplateSupport> FullTemplateSupports { get; set; } // FullTemplateSupport
        System.Data.Entity.DbSet<FullСategory> FullСategory { get; set; } // FullСategory
        System.Data.Entity.DbSet<History> Histories { get; set; } // History
        System.Data.Entity.DbSet<HistoryLog> HistoryLogs { get; set; } // HistoryLog
        System.Data.Entity.DbSet<InfoColumn> InfoColumns { get; set; } // InfoColumn
        System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic
        System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        System.Data.Entity.DbSet<InfoView> InfoViews { get; set; } // InfoView
        System.Data.Entity.DbSet<InventarNotHostName> InventarNotHostNames { get; set; } // InventarNotHostName
        System.Data.Entity.DbSet<JournalAis3> JournalAis3 { get; set; } // JournalAis3
        System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet
        System.Data.Entity.DbSet<LogicaSelect> LogicaSelects { get; set; } // LogicaSelect
        System.Data.Entity.DbSet<MailGroup> MailGroups { get; set; } // MailGroup
        System.Data.Entity.DbSet<MailIdentifier> MailIdentifiers { get; set; } // MailIdentifier
        System.Data.Entity.DbSet<MailIn> MailIns { get; set; } // MailIn
        System.Data.Entity.DbSet<MailInView> MailInViews { get; set; } // MailInView
        System.Data.Entity.DbSet<MailLotusOutlookIn> MailLotusOutlookIns { get; set; } // MailLotusOutlookIn
        System.Data.Entity.DbSet<MailLotusOutlookOut> MailLotusOutlookOuts { get; set; } // MailLotusOutlookOut
        System.Data.Entity.DbSet<MailOut> MailOuts { get; set; } // MailOut
        System.Data.Entity.DbSet<MailOutView> MailOutViews { get; set; } // MailOutView
        System.Data.Entity.DbSet<ManufacturerSeverEquipment> ManufacturerSeverEquipments { get; set; } // ManufacturerSeverEquipment
        System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu
        System.Data.Entity.DbSet<MfuAndEpo> MfuAndEpoes { get; set; } // MfuAndEpo
        System.Data.Entity.DbSet<ModelBlockPower> ModelBlockPowers { get; set; } // ModelBlockPower
        System.Data.Entity.DbSet<ModelDocumentType> ModelDocumentTypes { get; set; } // ModelDocumentType
        System.Data.Entity.DbSet<ModelOtdel> ModelOtdels { get; set; } // ModelOtdels
        System.Data.Entity.DbSet<ModelOther> ModelOthers { get; set; } // ModelOther
        System.Data.Entity.DbSet<ModelPosition> ModelPositions { get; set; } // ModelPosition
        System.Data.Entity.DbSet<ModelSeverEquipment> ModelSeverEquipments { get; set; } // ModelSeverEquipment
        System.Data.Entity.DbSet<ModelSwithe> ModelSwithes { get; set; } // ModelSwithes
        System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors
        System.Data.Entity.DbSet<Namedocument> Namedocuments { get; set; } // Namedocument
        System.Data.Entity.DbSet<NameHostIpAdress> NameHostIpAdresses { get; set; } // NameHostIpAdress
        System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitor
        System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock
        System.Data.Entity.DbSet<Organization> Organizations { get; set; } // Organization
        System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel
        System.Data.Entity.DbSet<OtdelPadeg> OtdelPadegs { get; set; } // OtdelPadeg
        System.Data.Entity.DbSet<OtherAll> OtherAlls { get; set; } // OtherAll
        System.Data.Entity.DbSet<ParameterAct> ParameterActs { get; set; } // ParameterAct
        System.Data.Entity.DbSet<ParametrSupport> ParametrSupports { get; set; } // ParametrSupport
        System.Data.Entity.DbSet<PassportEquipment> PassportEquipments { get; set; } // PassportEquipment
        System.Data.Entity.DbSet<Position> Positions { get; set; } // Position
        System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer
        System.Data.Entity.DbSet<PrinterAndEpo> PrinterAndEpoes { get; set; } // PrinterAndEpo
        System.Data.Entity.DbSet<Producer> Producers { get; set; } // Producer
        System.Data.Entity.DbSet<ProizvoditelBlockPower> ProizvoditelBlockPowers { get; set; } // ProizvoditelBlockPower
        System.Data.Entity.DbSet<ProizvoditelOther> ProizvoditelOthers { get; set; } // ProizvoditelOther
        System.Data.Entity.DbSet<Rb_Holiday> Rb_Holidays { get; set; } // Rb_Holidays
        System.Data.Entity.DbSet<ResourceIt> ResourceIts { get; set; } // ResourceIt
        System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        System.Data.Entity.DbSet<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers
        System.Data.Entity.DbSet<RuleIfn> RuleIfns { get; set; } // RuleIfns
        System.Data.Entity.DbSet<RuleNotTemplateUser> RuleNotTemplateUsers { get; set; } // RuleNotTemplateUser
        System.Data.Entity.DbSet<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer
        System.Data.Entity.DbSet<ScanerAndEpo> ScanerAndEpoes { get; set; } // ScanerAndEpo
        System.Data.Entity.DbSet<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment
        System.Data.Entity.DbSet<ServiceModelInventory> ServiceModelInventories { get; set; } // ServiceModelInventory
        System.Data.Entity.DbSet<SigmentIfn> SigmentIfns { get; set; } // SigmentIfns
        System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing
        System.Data.Entity.DbSet<StatusProcessSynchronization> StatusProcessSynchronizations { get; set; } // StatusProcessSynchronization
        System.Data.Entity.DbSet<StatusUser> StatusUsers { get; set; } // StatusUser
        System.Data.Entity.DbSet<Supply> Supplies { get; set; } // Supply
        System.Data.Entity.DbSet<Swithe> Swithes { get; set; } // Swithes
        System.Data.Entity.DbSet<SynchronizationPrintServer> SynchronizationPrintServers { get; set; } // SynchronizationPrintServer
        System.Data.Entity.DbSet<SynchronizationPrintServerToDataBase> SynchronizationPrintServerToDataBases { get; set; } // SynchronizationPrintServerToDataBase
        System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock
        System.Data.Entity.DbSet<TableAllModel> TableAllModels { get; set; } // TableAllModel
        System.Data.Entity.DbSet<TableFolder> TableFolders { get; set; } // TableFolders
        System.Data.Entity.DbSet<TableRole> TableRoles { get; set; } // TableRoles
        System.Data.Entity.DbSet<TableSystem> TableSystems { get; set; } // TableSystems
        System.Data.Entity.DbSet<TableTask> TableTasks { get; set; } // TableTasks
        System.Data.Entity.DbSet<TableTemplate> TableTemplates { get; set; } // TableTemplate
        System.Data.Entity.DbSet<TaskAis3> TaskAis3 { get; set; } // TaskAis3
        System.Data.Entity.DbSet<TecnicalOtdel> TecnicalOtdels { get; set; } // TecnicalOtdel
        System.Data.Entity.DbSet<Telephon> Telephons { get; set; } // Telephon
        System.Data.Entity.DbSet<TemplateAllIfn> TemplateAllIfns { get; set; } // TemplateAllIfns
        System.Data.Entity.DbSet<TemplateIfnsAndRuleIfn> TemplateIfnsAndRuleIfns { get; set; } // TemplateIfnsAndRuleIfns
        System.Data.Entity.DbSet<TemplateSupportAndParametrSupport> TemplateSupportAndParametrSupports { get; set; } // TemplateSupportAndParametrSupport
        System.Data.Entity.DbSet<Token> Tokens { get; set; } // Token
        System.Data.Entity.DbSet<TypeOther> TypeOthers { get; set; } // TypeOther
        System.Data.Entity.DbSet<TypeServer> TypeServers { get; set; } // TypeServer
        System.Data.Entity.DbSet<User> Users { get; set; } // Users
        System.Data.Entity.DbSet<UserRulesRuk> UserRulesRuks { get; set; } // UserRulesRuk
        System.Data.Entity.DbSet<UsersAis3> UsersAis3 { get; set; } // UsersAis3
        System.Data.Entity.DbSet<UsersAis3TemplateAndRule> UsersAis3TemplateAndRule { get; set; } // UsersAis3TemplateAndRule
        System.Data.Entity.DbSet<UsersDoubleRulesTemplate> UsersDoubleRulesTemplates { get; set; } // UsersDoubleRulesTemplate
        System.Data.Entity.DbSet<UsersIsActualsStat> UsersIsActualsStats { get; set; } // UsersIsActualsStat
        System.Data.Entity.DbSet<UsersNotTechnical> UsersNotTechnicals { get; set; } // UsersNotTechnical
        System.Data.Entity.DbSet<ValueCharacteristicJson> ValueCharacteristicJsons { get; set; } // ValueCharacteristicJson

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InventoryContext : System.Data.Entity.DbContext, IInventoryContext
    {
        public System.Data.Entity.DbSet<Act> Acts { get; set; } // Act
        public System.Data.Entity.DbSet<AksiokAllModel> AksiokAllModels { get; set; } // AksiokAllModel
        public System.Data.Entity.DbSet<AllIpServerSelect> AllIpServerSelects { get; set; } // AllIpServerSelect
        public System.Data.Entity.DbSet<AllTechnic> AllTechnics { get; set; } // AllTechnics
        public System.Data.Entity.DbSet<AllTelephon> AllTelephons { get; set; } // AllTelephon
        public System.Data.Entity.DbSet<AllTemplateAndTree> AllTemplateAndTrees { get; set; } // AllTemplateAndTree
        public System.Data.Entity.DbSet<AnaliticaSysBlokAndMonitor> AnaliticaSysBlokAndMonitors { get; set; } // AnaliticaSysBlokAndMonitors
        public System.Data.Entity.DbSet<AnalysisEpoAndInventarka> AnalysisEpoAndInventarkas { get; set; } // AnalysisEpoAndInventarka
        public System.Data.Entity.DbSet<ApplicationsIfn> ApplicationsIfns { get; set; } // ApplicationsIfns
        public System.Data.Entity.DbSet<BlockPower> BlockPowers { get; set; } // BlockPower
        public System.Data.Entity.DbSet<BookAccounting> BookAccountings { get; set; } // BookAccounting
        public System.Data.Entity.DbSet<BookModel> BookModels { get; set; } // BookModels
        public System.Data.Entity.DbSet<Calendar> Calendars { get; set; } // Calendar
        public System.Data.Entity.DbSet<CalendarVksStp> CalendarVksStps { get; set; } // CalendarVksStp
        public System.Data.Entity.DbSet<CalendarVksStpView> CalendarVksStpViews { get; set; } // CalendarVksStpView
        public System.Data.Entity.DbSet<CategoriaTemplate> CategoriaTemplates { get; set; } // CategoriaTemplate
        public System.Data.Entity.DbSet<CategoryPhoneHeader> CategoryPhoneHeaders { get; set; } // CategoryPhoneHeaders
        public System.Data.Entity.DbSet<ClasificationAct> ClasificationActs { get; set; } // ClasificationAct
        public System.Data.Entity.DbSet<Classification> Classifications { get; set; } // Classification
        public System.Data.Entity.DbSet<ClassParameterTemplate> ClassParameterTemplates { get; set; } // ClassParameterTemplate
        public System.Data.Entity.DbSet<ComputerIpAdressSynhronization> ComputerIpAdressSynhronizations { get; set; } // ComputerIpAdressSynhronization
        public System.Data.Entity.DbSet<ComputersAndEpo> ComputersAndEpoes { get; set; } // ComputersAndEpo
        public System.Data.Entity.DbSet<ContractOnSto> ContractOnStoes { get; set; } // ContractOnSto
        public System.Data.Entity.DbSet<CopySave> CopySaves { get; set; } // CopySave
        public System.Data.Entity.DbSet<DeliveryContract> DeliveryContracts { get; set; } // DeliveryContract
        public System.Data.Entity.DbSet<DepartmentRegulation> DepartmentRegulations { get; set; } // DepartmentRegulations
        public System.Data.Entity.DbSet<Document> Documents { get; set; } // Document
        public System.Data.Entity.DbSet<DocumentModel> DocumentModels { get; set; } // DocumentModel
        public System.Data.Entity.DbSet<DoubleComputersName> DoubleComputersNames { get; set; } // DoubleComputersName
        public System.Data.Entity.DbSet<EmptyMonitorSupply38> EmptyMonitorSupply38 { get; set; } // EmptyMonitorSupply38
        public System.Data.Entity.DbSet<EmptySysBlokSupply40> EmptySysBlokSupply40 { get; set; } // EmptySysBlokSupply40
        public System.Data.Entity.DbSet<EpoDocument> EpoDocuments { get; set; } // EpoDocument
        public System.Data.Entity.DbSet<EquipmentModel> EquipmentModels { get; set; } // EquipmentModel
        public System.Data.Entity.DbSet<EquipmentSto> EquipmentStoes { get; set; } // EquipmentSto
        public System.Data.Entity.DbSet<EquipmentType> EquipmentTypes { get; set; } // EquipmentType
        public System.Data.Entity.DbSet<Error> Errors { get; set; } // Error
        public System.Data.Entity.DbSet<ErrorTokenUser> ErrorTokenUsers { get; set; } // ErrorTokenUser
        public System.Data.Entity.DbSet<ErrorUsersNotActual> ErrorUsersNotActuals { get; set; } // ErrorUsersNotActual
        public System.Data.Entity.DbSet<EventProcess> EventProcesses { get; set; } // EventProcess
        public System.Data.Entity.DbSet<ExpertiseFile> ExpertiseFiles { get; set; } // ExpertiseFile
        public System.Data.Entity.DbSet<File> Files { get; set; } // File
        public System.Data.Entity.DbSet<FullModel> FullModels { get; set; } // FullModel
        public System.Data.Entity.DbSet<FullProizvoditel> FullProizvoditels { get; set; } // FullProizvoditel
        public System.Data.Entity.DbSet<FullTemplateSupport> FullTemplateSupports { get; set; } // FullTemplateSupport
        public System.Data.Entity.DbSet<FullСategory> FullСategory { get; set; } // FullСategory
        public System.Data.Entity.DbSet<History> Histories { get; set; } // History
        public System.Data.Entity.DbSet<HistoryLog> HistoryLogs { get; set; } // HistoryLog
        public System.Data.Entity.DbSet<InfoColumn> InfoColumns { get; set; } // InfoColumn
        public System.Data.Entity.DbSet<InfoLogic> InfoLogics { get; set; } // InfoLogic
        public System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        public System.Data.Entity.DbSet<InfoView> InfoViews { get; set; } // InfoView
        public System.Data.Entity.DbSet<InventarNotHostName> InventarNotHostNames { get; set; } // InventarNotHostName
        public System.Data.Entity.DbSet<JournalAis3> JournalAis3 { get; set; } // JournalAis3
        public System.Data.Entity.DbSet<Kabinet> Kabinets { get; set; } // Kabinet
        public System.Data.Entity.DbSet<LogicaSelect> LogicaSelects { get; set; } // LogicaSelect
        public System.Data.Entity.DbSet<MailGroup> MailGroups { get; set; } // MailGroup
        public System.Data.Entity.DbSet<MailIdentifier> MailIdentifiers { get; set; } // MailIdentifier
        public System.Data.Entity.DbSet<MailIn> MailIns { get; set; } // MailIn
        public System.Data.Entity.DbSet<MailInView> MailInViews { get; set; } // MailInView
        public System.Data.Entity.DbSet<MailLotusOutlookIn> MailLotusOutlookIns { get; set; } // MailLotusOutlookIn
        public System.Data.Entity.DbSet<MailLotusOutlookOut> MailLotusOutlookOuts { get; set; } // MailLotusOutlookOut
        public System.Data.Entity.DbSet<MailOut> MailOuts { get; set; } // MailOut
        public System.Data.Entity.DbSet<MailOutView> MailOutViews { get; set; } // MailOutView
        public System.Data.Entity.DbSet<ManufacturerSeverEquipment> ManufacturerSeverEquipments { get; set; } // ManufacturerSeverEquipment
        public System.Data.Entity.DbSet<Mfu> Mfus { get; set; } // Mfu
        public System.Data.Entity.DbSet<MfuAndEpo> MfuAndEpoes { get; set; } // MfuAndEpo
        public System.Data.Entity.DbSet<ModelBlockPower> ModelBlockPowers { get; set; } // ModelBlockPower
        public System.Data.Entity.DbSet<ModelDocumentType> ModelDocumentTypes { get; set; } // ModelDocumentType
        public System.Data.Entity.DbSet<ModelOtdel> ModelOtdels { get; set; } // ModelOtdels
        public System.Data.Entity.DbSet<ModelOther> ModelOthers { get; set; } // ModelOther
        public System.Data.Entity.DbSet<ModelPosition> ModelPositions { get; set; } // ModelPosition
        public System.Data.Entity.DbSet<ModelSeverEquipment> ModelSeverEquipments { get; set; } // ModelSeverEquipment
        public System.Data.Entity.DbSet<ModelSwithe> ModelSwithes { get; set; } // ModelSwithes
        public System.Data.Entity.DbSet<Monitor> Monitors { get; set; } // Monitors
        public System.Data.Entity.DbSet<Namedocument> Namedocuments { get; set; } // Namedocument
        public System.Data.Entity.DbSet<NameHostIpAdress> NameHostIpAdresses { get; set; } // NameHostIpAdress
        public System.Data.Entity.DbSet<NameMonitor> NameMonitors { get; set; } // NameMonitor
        public System.Data.Entity.DbSet<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock
        public System.Data.Entity.DbSet<Organization> Organizations { get; set; } // Organization
        public System.Data.Entity.DbSet<Otdel> Otdels { get; set; } // Otdel
        public System.Data.Entity.DbSet<OtdelPadeg> OtdelPadegs { get; set; } // OtdelPadeg
        public System.Data.Entity.DbSet<OtherAll> OtherAlls { get; set; } // OtherAll
        public System.Data.Entity.DbSet<ParameterAct> ParameterActs { get; set; } // ParameterAct
        public System.Data.Entity.DbSet<ParametrSupport> ParametrSupports { get; set; } // ParametrSupport
        public System.Data.Entity.DbSet<PassportEquipment> PassportEquipments { get; set; } // PassportEquipment
        public System.Data.Entity.DbSet<Position> Positions { get; set; } // Position
        public System.Data.Entity.DbSet<Printer> Printers { get; set; } // Printer
        public System.Data.Entity.DbSet<PrinterAndEpo> PrinterAndEpoes { get; set; } // PrinterAndEpo
        public System.Data.Entity.DbSet<Producer> Producers { get; set; } // Producer
        public System.Data.Entity.DbSet<ProizvoditelBlockPower> ProizvoditelBlockPowers { get; set; } // ProizvoditelBlockPower
        public System.Data.Entity.DbSet<ProizvoditelOther> ProizvoditelOthers { get; set; } // ProizvoditelOther
        public System.Data.Entity.DbSet<Rb_Holiday> Rb_Holidays { get; set; } // Rb_Holidays
        public System.Data.Entity.DbSet<ResourceIt> ResourceIts { get; set; } // ResourceIt
        public System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        public System.Data.Entity.DbSet<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers
        public System.Data.Entity.DbSet<RuleIfn> RuleIfns { get; set; } // RuleIfns
        public System.Data.Entity.DbSet<RuleNotTemplateUser> RuleNotTemplateUsers { get; set; } // RuleNotTemplateUser
        public System.Data.Entity.DbSet<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer
        public System.Data.Entity.DbSet<ScanerAndEpo> ScanerAndEpoes { get; set; } // ScanerAndEpo
        public System.Data.Entity.DbSet<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment
        public System.Data.Entity.DbSet<ServiceModelInventory> ServiceModelInventories { get; set; } // ServiceModelInventory
        public System.Data.Entity.DbSet<SigmentIfn> SigmentIfns { get; set; } // SigmentIfns
        public System.Data.Entity.DbSet<Statusing> Statusings { get; set; } // Statusing
        public System.Data.Entity.DbSet<StatusProcessSynchronization> StatusProcessSynchronizations { get; set; } // StatusProcessSynchronization
        public System.Data.Entity.DbSet<StatusUser> StatusUsers { get; set; } // StatusUser
        public System.Data.Entity.DbSet<Supply> Supplies { get; set; } // Supply
        public System.Data.Entity.DbSet<Swithe> Swithes { get; set; } // Swithes
        public System.Data.Entity.DbSet<SynchronizationPrintServer> SynchronizationPrintServers { get; set; } // SynchronizationPrintServer
        public System.Data.Entity.DbSet<SynchronizationPrintServerToDataBase> SynchronizationPrintServerToDataBases { get; set; } // SynchronizationPrintServerToDataBase
        public System.Data.Entity.DbSet<SysBlock> SysBlocks { get; set; } // SysBlock
        public System.Data.Entity.DbSet<TableAllModel> TableAllModels { get; set; } // TableAllModel
        public System.Data.Entity.DbSet<TableFolder> TableFolders { get; set; } // TableFolders
        public System.Data.Entity.DbSet<TableRole> TableRoles { get; set; } // TableRoles
        public System.Data.Entity.DbSet<TableSystem> TableSystems { get; set; } // TableSystems
        public System.Data.Entity.DbSet<TableTask> TableTasks { get; set; } // TableTasks
        public System.Data.Entity.DbSet<TableTemplate> TableTemplates { get; set; } // TableTemplate
        public System.Data.Entity.DbSet<TaskAis3> TaskAis3 { get; set; } // TaskAis3
        public System.Data.Entity.DbSet<TecnicalOtdel> TecnicalOtdels { get; set; } // TecnicalOtdel
        public System.Data.Entity.DbSet<Telephon> Telephons { get; set; } // Telephon
        public System.Data.Entity.DbSet<TemplateAllIfn> TemplateAllIfns { get; set; } // TemplateAllIfns
        public System.Data.Entity.DbSet<TemplateIfnsAndRuleIfn> TemplateIfnsAndRuleIfns { get; set; } // TemplateIfnsAndRuleIfns
        public System.Data.Entity.DbSet<TemplateSupportAndParametrSupport> TemplateSupportAndParametrSupports { get; set; } // TemplateSupportAndParametrSupport
        public System.Data.Entity.DbSet<Token> Tokens { get; set; } // Token
        public System.Data.Entity.DbSet<TypeOther> TypeOthers { get; set; } // TypeOther
        public System.Data.Entity.DbSet<TypeServer> TypeServers { get; set; } // TypeServer
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users
        public System.Data.Entity.DbSet<UserRulesRuk> UserRulesRuks { get; set; } // UserRulesRuk
        public System.Data.Entity.DbSet<UsersAis3> UsersAis3 { get; set; } // UsersAis3
        public System.Data.Entity.DbSet<UsersAis3TemplateAndRule> UsersAis3TemplateAndRule { get; set; } // UsersAis3TemplateAndRule
        public System.Data.Entity.DbSet<UsersDoubleRulesTemplate> UsersDoubleRulesTemplates { get; set; } // UsersDoubleRulesTemplate
        public System.Data.Entity.DbSet<UsersIsActualsStat> UsersIsActualsStats { get; set; } // UsersIsActualsStat
        public System.Data.Entity.DbSet<UsersNotTechnical> UsersNotTechnicals { get; set; } // UsersNotTechnical
        public System.Data.Entity.DbSet<ValueCharacteristicJson> ValueCharacteristicJsons { get; set; } // ValueCharacteristicJson

        static InventoryContext()
        {
            System.Data.Entity.Database.SetInitializer<InventoryContext>(null);
        }

        public InventoryContext()
            : base("Name=Inventarization")
        {
        }

        public InventoryContext(string connectionString)
            : base(connectionString)
        {
        }

        public InventoryContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public InventoryContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public InventoryContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        public InventoryContext(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActConfiguration());
            modelBuilder.Configurations.Add(new AksiokAllModelConfiguration());
            modelBuilder.Configurations.Add(new AllIpServerSelectConfiguration());
            modelBuilder.Configurations.Add(new AllTechnicConfiguration());
            modelBuilder.Configurations.Add(new AllTelephonConfiguration());
            modelBuilder.Configurations.Add(new AllTemplateAndTreeConfiguration());
            modelBuilder.Configurations.Add(new AnaliticaSysBlokAndMonitorConfiguration());
            modelBuilder.Configurations.Add(new AnalysisEpoAndInventarkaConfiguration());
            modelBuilder.Configurations.Add(new ApplicationsIfnConfiguration());
            modelBuilder.Configurations.Add(new BlockPowerConfiguration());
            modelBuilder.Configurations.Add(new BookAccountingConfiguration());
            modelBuilder.Configurations.Add(new BookModelConfiguration());
            modelBuilder.Configurations.Add(new CalendarConfiguration());
            modelBuilder.Configurations.Add(new CalendarVksStpConfiguration());
            modelBuilder.Configurations.Add(new CalendarVksStpViewConfiguration());
            modelBuilder.Configurations.Add(new CategoriaTemplateConfiguration());
            modelBuilder.Configurations.Add(new CategoryPhoneHeaderConfiguration());
            modelBuilder.Configurations.Add(new ClasificationActConfiguration());
            modelBuilder.Configurations.Add(new ClassificationConfiguration());
            modelBuilder.Configurations.Add(new ClassParameterTemplateConfiguration());
            modelBuilder.Configurations.Add(new ComputerIpAdressSynhronizationConfiguration());
            modelBuilder.Configurations.Add(new ComputersAndEpoConfiguration());
            modelBuilder.Configurations.Add(new ContractOnStoConfiguration());
            modelBuilder.Configurations.Add(new CopySaveConfiguration());
            modelBuilder.Configurations.Add(new DeliveryContractConfiguration());
            modelBuilder.Configurations.Add(new DepartmentRegulationConfiguration());
            modelBuilder.Configurations.Add(new DocumentConfiguration());
            modelBuilder.Configurations.Add(new DocumentModelConfiguration());
            modelBuilder.Configurations.Add(new DoubleComputersNameConfiguration());
            modelBuilder.Configurations.Add(new EmptyMonitorSupply38Configuration());
            modelBuilder.Configurations.Add(new EmptySysBlokSupply40Configuration());
            modelBuilder.Configurations.Add(new EpoDocumentConfiguration());
            modelBuilder.Configurations.Add(new EquipmentModelConfiguration());
            modelBuilder.Configurations.Add(new EquipmentStoConfiguration());
            modelBuilder.Configurations.Add(new EquipmentTypeConfiguration());
            modelBuilder.Configurations.Add(new ErrorConfiguration());
            modelBuilder.Configurations.Add(new ErrorTokenUserConfiguration());
            modelBuilder.Configurations.Add(new ErrorUsersNotActualConfiguration());
            modelBuilder.Configurations.Add(new EventProcessConfiguration());
            modelBuilder.Configurations.Add(new ExpertiseFileConfiguration());
            modelBuilder.Configurations.Add(new FileConfiguration());
            modelBuilder.Configurations.Add(new FullModelConfiguration());
            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration());
            modelBuilder.Configurations.Add(new FullTemplateSupportConfiguration());
            modelBuilder.Configurations.Add(new FullСategoryConfiguration());
            modelBuilder.Configurations.Add(new HistoryConfiguration());
            modelBuilder.Configurations.Add(new HistoryLogConfiguration());
            modelBuilder.Configurations.Add(new InfoColumnConfiguration());
            modelBuilder.Configurations.Add(new InfoLogicConfiguration());
            modelBuilder.Configurations.Add(new InfoTableConfiguration());
            modelBuilder.Configurations.Add(new InfoViewConfiguration());
            modelBuilder.Configurations.Add(new InventarNotHostNameConfiguration());
            modelBuilder.Configurations.Add(new JournalAis3Configuration());
            modelBuilder.Configurations.Add(new KabinetConfiguration());
            modelBuilder.Configurations.Add(new LogicaSelectConfiguration());
            modelBuilder.Configurations.Add(new MailGroupConfiguration());
            modelBuilder.Configurations.Add(new MailIdentifierConfiguration());
            modelBuilder.Configurations.Add(new MailInConfiguration());
            modelBuilder.Configurations.Add(new MailInViewConfiguration());
            modelBuilder.Configurations.Add(new MailLotusOutlookInConfiguration());
            modelBuilder.Configurations.Add(new MailLotusOutlookOutConfiguration());
            modelBuilder.Configurations.Add(new MailOutConfiguration());
            modelBuilder.Configurations.Add(new MailOutViewConfiguration());
            modelBuilder.Configurations.Add(new ManufacturerSeverEquipmentConfiguration());
            modelBuilder.Configurations.Add(new MfuConfiguration());
            modelBuilder.Configurations.Add(new MfuAndEpoConfiguration());
            modelBuilder.Configurations.Add(new ModelBlockPowerConfiguration());
            modelBuilder.Configurations.Add(new ModelDocumentTypeConfiguration());
            modelBuilder.Configurations.Add(new ModelOtdelConfiguration());
            modelBuilder.Configurations.Add(new ModelOtherConfiguration());
            modelBuilder.Configurations.Add(new ModelPositionConfiguration());
            modelBuilder.Configurations.Add(new ModelSeverEquipmentConfiguration());
            modelBuilder.Configurations.Add(new ModelSwitheConfiguration());
            modelBuilder.Configurations.Add(new MonitorConfiguration());
            modelBuilder.Configurations.Add(new NamedocumentConfiguration());
            modelBuilder.Configurations.Add(new NameHostIpAdressConfiguration());
            modelBuilder.Configurations.Add(new NameMonitorConfiguration());
            modelBuilder.Configurations.Add(new NameSysBlockConfiguration());
            modelBuilder.Configurations.Add(new OrganizationConfiguration());
            modelBuilder.Configurations.Add(new OtdelConfiguration());
            modelBuilder.Configurations.Add(new OtdelPadegConfiguration());
            modelBuilder.Configurations.Add(new OtherAllConfiguration());
            modelBuilder.Configurations.Add(new ParameterActConfiguration());
            modelBuilder.Configurations.Add(new ParametrSupportConfiguration());
            modelBuilder.Configurations.Add(new PassportEquipmentConfiguration());
            modelBuilder.Configurations.Add(new PositionConfiguration());
            modelBuilder.Configurations.Add(new PrinterConfiguration());
            modelBuilder.Configurations.Add(new PrinterAndEpoConfiguration());
            modelBuilder.Configurations.Add(new ProducerConfiguration());
            modelBuilder.Configurations.Add(new ProizvoditelBlockPowerConfiguration());
            modelBuilder.Configurations.Add(new ProizvoditelOtherConfiguration());
            modelBuilder.Configurations.Add(new Rb_HolidayConfiguration());
            modelBuilder.Configurations.Add(new ResourceItConfiguration());
            modelBuilder.Configurations.Add(new RuleConfiguration());
            modelBuilder.Configurations.Add(new RuleAndUserConfiguration());
            modelBuilder.Configurations.Add(new RuleIfnConfiguration());
            modelBuilder.Configurations.Add(new RuleNotTemplateUserConfiguration());
            modelBuilder.Configurations.Add(new ScanerAndCamerConfiguration());
            modelBuilder.Configurations.Add(new ScanerAndEpoConfiguration());
            modelBuilder.Configurations.Add(new ServerEquipmentConfiguration());
            modelBuilder.Configurations.Add(new ServiceModelInventoryConfiguration());
            modelBuilder.Configurations.Add(new SigmentIfnConfiguration());
            modelBuilder.Configurations.Add(new StatusingConfiguration());
            modelBuilder.Configurations.Add(new StatusProcessSynchronizationConfiguration());
            modelBuilder.Configurations.Add(new StatusUserConfiguration());
            modelBuilder.Configurations.Add(new SupplyConfiguration());
            modelBuilder.Configurations.Add(new SwitheConfiguration());
            modelBuilder.Configurations.Add(new SynchronizationPrintServerConfiguration());
            modelBuilder.Configurations.Add(new SynchronizationPrintServerToDataBaseConfiguration());
            modelBuilder.Configurations.Add(new SysBlockConfiguration());
            modelBuilder.Configurations.Add(new TableAllModelConfiguration());
            modelBuilder.Configurations.Add(new TableFolderConfiguration());
            modelBuilder.Configurations.Add(new TableRoleConfiguration());
            modelBuilder.Configurations.Add(new TableSystemConfiguration());
            modelBuilder.Configurations.Add(new TableTaskConfiguration());
            modelBuilder.Configurations.Add(new TableTemplateConfiguration());
            modelBuilder.Configurations.Add(new TaskAis3Configuration());
            modelBuilder.Configurations.Add(new TecnicalOtdelConfiguration());
            modelBuilder.Configurations.Add(new TelephonConfiguration());
            modelBuilder.Configurations.Add(new TemplateAllIfnConfiguration());
            modelBuilder.Configurations.Add(new TemplateIfnsAndRuleIfnConfiguration());
            modelBuilder.Configurations.Add(new TemplateSupportAndParametrSupportConfiguration());
            modelBuilder.Configurations.Add(new TokenConfiguration());
            modelBuilder.Configurations.Add(new TypeOtherConfiguration());
            modelBuilder.Configurations.Add(new TypeServerConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());
            modelBuilder.Configurations.Add(new UserRulesRukConfiguration());
            modelBuilder.Configurations.Add(new UsersAis3Configuration());
            modelBuilder.Configurations.Add(new UsersAis3TemplateAndRuleConfiguration());
            modelBuilder.Configurations.Add(new UsersDoubleRulesTemplateConfiguration());
            modelBuilder.Configurations.Add(new UsersIsActualsStatConfiguration());
            modelBuilder.Configurations.Add(new UsersNotTechnicalConfiguration());
            modelBuilder.Configurations.Add(new ValueCharacteristicJsonConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActConfiguration(schema));
            modelBuilder.Configurations.Add(new AksiokAllModelConfiguration(schema));
            modelBuilder.Configurations.Add(new AllIpServerSelectConfiguration(schema));
            modelBuilder.Configurations.Add(new AllTechnicConfiguration(schema));
            modelBuilder.Configurations.Add(new AllTelephonConfiguration(schema));
            modelBuilder.Configurations.Add(new AllTemplateAndTreeConfiguration(schema));
            modelBuilder.Configurations.Add(new AnaliticaSysBlokAndMonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new AnalysisEpoAndInventarkaConfiguration(schema));
            modelBuilder.Configurations.Add(new ApplicationsIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new BlockPowerConfiguration(schema));
            modelBuilder.Configurations.Add(new BookAccountingConfiguration(schema));
            modelBuilder.Configurations.Add(new BookModelConfiguration(schema));
            modelBuilder.Configurations.Add(new CalendarConfiguration(schema));
            modelBuilder.Configurations.Add(new CalendarVksStpConfiguration(schema));
            modelBuilder.Configurations.Add(new CalendarVksStpViewConfiguration(schema));
            modelBuilder.Configurations.Add(new CategoriaTemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new CategoryPhoneHeaderConfiguration(schema));
            modelBuilder.Configurations.Add(new ClasificationActConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassificationConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassParameterTemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new ComputerIpAdressSynhronizationConfiguration(schema));
            modelBuilder.Configurations.Add(new ComputersAndEpoConfiguration(schema));
            modelBuilder.Configurations.Add(new ContractOnStoConfiguration(schema));
            modelBuilder.Configurations.Add(new CopySaveConfiguration(schema));
            modelBuilder.Configurations.Add(new DeliveryContractConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartmentRegulationConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new DocumentModelConfiguration(schema));
            modelBuilder.Configurations.Add(new DoubleComputersNameConfiguration(schema));
            modelBuilder.Configurations.Add(new EmptyMonitorSupply38Configuration(schema));
            modelBuilder.Configurations.Add(new EmptySysBlokSupply40Configuration(schema));
            modelBuilder.Configurations.Add(new EpoDocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentModelConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentStoConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ErrorConfiguration(schema));
            modelBuilder.Configurations.Add(new ErrorTokenUserConfiguration(schema));
            modelBuilder.Configurations.Add(new ErrorUsersNotActualConfiguration(schema));
            modelBuilder.Configurations.Add(new EventProcessConfiguration(schema));
            modelBuilder.Configurations.Add(new ExpertiseFileConfiguration(schema));
            modelBuilder.Configurations.Add(new FileConfiguration(schema));
            modelBuilder.Configurations.Add(new FullModelConfiguration(schema));
            modelBuilder.Configurations.Add(new FullProizvoditelConfiguration(schema));
            modelBuilder.Configurations.Add(new FullTemplateSupportConfiguration(schema));
            modelBuilder.Configurations.Add(new FullСategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new HistoryConfiguration(schema));
            modelBuilder.Configurations.Add(new HistoryLogConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoColumnConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoLogicConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoTableConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoViewConfiguration(schema));
            modelBuilder.Configurations.Add(new InventarNotHostNameConfiguration(schema));
            modelBuilder.Configurations.Add(new JournalAis3Configuration(schema));
            modelBuilder.Configurations.Add(new KabinetConfiguration(schema));
            modelBuilder.Configurations.Add(new LogicaSelectConfiguration(schema));
            modelBuilder.Configurations.Add(new MailGroupConfiguration(schema));
            modelBuilder.Configurations.Add(new MailIdentifierConfiguration(schema));
            modelBuilder.Configurations.Add(new MailInConfiguration(schema));
            modelBuilder.Configurations.Add(new MailInViewConfiguration(schema));
            modelBuilder.Configurations.Add(new MailLotusOutlookInConfiguration(schema));
            modelBuilder.Configurations.Add(new MailLotusOutlookOutConfiguration(schema));
            modelBuilder.Configurations.Add(new MailOutConfiguration(schema));
            modelBuilder.Configurations.Add(new MailOutViewConfiguration(schema));
            modelBuilder.Configurations.Add(new ManufacturerSeverEquipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new MfuConfiguration(schema));
            modelBuilder.Configurations.Add(new MfuAndEpoConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelBlockPowerConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelDocumentTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelOtherConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelPositionConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelSeverEquipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new ModelSwitheConfiguration(schema));
            modelBuilder.Configurations.Add(new MonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new NamedocumentConfiguration(schema));
            modelBuilder.Configurations.Add(new NameHostIpAdressConfiguration(schema));
            modelBuilder.Configurations.Add(new NameMonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new NameSysBlockConfiguration(schema));
            modelBuilder.Configurations.Add(new OrganizationConfiguration(schema));
            modelBuilder.Configurations.Add(new OtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new OtdelPadegConfiguration(schema));
            modelBuilder.Configurations.Add(new OtherAllConfiguration(schema));
            modelBuilder.Configurations.Add(new ParameterActConfiguration(schema));
            modelBuilder.Configurations.Add(new ParametrSupportConfiguration(schema));
            modelBuilder.Configurations.Add(new PassportEquipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new PositionConfiguration(schema));
            modelBuilder.Configurations.Add(new PrinterConfiguration(schema));
            modelBuilder.Configurations.Add(new PrinterAndEpoConfiguration(schema));
            modelBuilder.Configurations.Add(new ProducerConfiguration(schema));
            modelBuilder.Configurations.Add(new ProizvoditelBlockPowerConfiguration(schema));
            modelBuilder.Configurations.Add(new ProizvoditelOtherConfiguration(schema));
            modelBuilder.Configurations.Add(new Rb_HolidayConfiguration(schema));
            modelBuilder.Configurations.Add(new ResourceItConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleAndUserConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleNotTemplateUserConfiguration(schema));
            modelBuilder.Configurations.Add(new ScanerAndCamerConfiguration(schema));
            modelBuilder.Configurations.Add(new ScanerAndEpoConfiguration(schema));
            modelBuilder.Configurations.Add(new ServerEquipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiceModelInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new SigmentIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusingConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusProcessSynchronizationConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusUserConfiguration(schema));
            modelBuilder.Configurations.Add(new SupplyConfiguration(schema));
            modelBuilder.Configurations.Add(new SwitheConfiguration(schema));
            modelBuilder.Configurations.Add(new SynchronizationPrintServerConfiguration(schema));
            modelBuilder.Configurations.Add(new SynchronizationPrintServerToDataBaseConfiguration(schema));
            modelBuilder.Configurations.Add(new SysBlockConfiguration(schema));
            modelBuilder.Configurations.Add(new TableAllModelConfiguration(schema));
            modelBuilder.Configurations.Add(new TableFolderConfiguration(schema));
            modelBuilder.Configurations.Add(new TableRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new TableSystemConfiguration(schema));
            modelBuilder.Configurations.Add(new TableTaskConfiguration(schema));
            modelBuilder.Configurations.Add(new TableTemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new TaskAis3Configuration(schema));
            modelBuilder.Configurations.Add(new TecnicalOtdelConfiguration(schema));
            modelBuilder.Configurations.Add(new TelephonConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateAllIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateIfnsAndRuleIfnConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateSupportAndParametrSupportConfiguration(schema));
            modelBuilder.Configurations.Add(new TokenConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeOtherConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeServerConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            modelBuilder.Configurations.Add(new UserRulesRukConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersAis3Configuration(schema));
            modelBuilder.Configurations.Add(new UsersAis3TemplateAndRuleConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersDoubleRulesTemplateConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersIsActualsStatConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersNotTechnicalConfiguration(schema));
            modelBuilder.Configurations.Add(new ValueCharacteristicJsonConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class InventoryContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<InventoryContext>
    {
        public InventoryContext Create()
        {
            return new InventoryContext();
        }
    }

    #endregion

    #region POCO classes

    // Act
    ///<summary>
    /// Акты списания
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Act
    {

        ///<summary>
        /// Ун акта
        ///</summary>
        public int IdAct { get; set; } // IdAct (Primary key)

        ///<summary>
        /// Ун классификации
        ///</summary>
        public int? IdClasification { get; set; } // IdClasification

        ///<summary>
        /// Ун параметра
        ///</summary>
        public int? IdParameter { get; set; } // IdParameter

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent ClasificationAct pointed by [Act].([IdClasification]) (FK_ClasificationAct_Act)
        /// </summary>
        public virtual ClasificationAct ClasificationAct { get; set; } // FK_ClasificationAct_Act

        /// <summary>
        /// Parent ParameterAct pointed by [Act].([IdParameter]) (FK_ParameterAct_Act)
        /// </summary>
        public virtual ParameterAct ParameterAct { get; set; } // FK_ParameterAct_Act
    }

    // AksiokAllModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AksiokAllModel
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public int Soun { get; set; } // Soun (Primary key)
        public string KindEquipmentName { get; set; } // KindEquipmentName (length: 512)
        public string NameType { get; set; } // NameType (length: 512)
        public string NameProducer { get; set; } // NameProducer (length: 512)
        public string NameModel { get; set; } // NameModel (length: 512)
        public string NumberDoc { get; set; } // NumberDoc (length: 128)
        public string Author { get; set; } // Author (length: 256)
        public bool CanDelete { get; set; } // CanDelete (Primary key)
        public string NumberContractDelivery { get; set; } // NumberContractDelivery (length: 256)
        public string NameContractDelivery { get; set; } // NameContractDelivery
        public System.DateTime? ContractDateDeliveryContract { get; set; } // ContractDateDeliveryContract
        public string ExecutorDeliveryContract { get; set; } // ExecutorDeliveryContract
        public string NumberContractSto { get; set; } // NumberContractSto (length: 256)
        public string NameContractSto { get; set; } // NameContractSto
        public System.DateTime? ContractDateSto { get; set; } // ContractDateSto
        public string ExecutorSto { get; set; } // ExecutorSto
        public string AgencyName { get; set; } // AgencyName (length: 512)
        public System.DateTime CreateDate { get; set; } // CreateDate (Primary key)
        public string ComputerName { get; set; } // ComputerName (length: 128)
        public string SerialNumber { get; set; } // SerialNumber (length: 64)
        public string Identifier { get; set; } // Identifier (length: 128)
        public string InventoryNumber { get; set; } // InventoryNumber (length: 128)
        public bool IsKit { get; set; } // IsKit (Primary key)
        public string ActNumber { get; set; } // ActNumber (length: 256)
        public System.DateTime? ActDate { get; set; } // ActDate
        public int? ExpertiseStatus { get; set; } // ExpertiseStatus
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)
        public string IndividualServiceNumber { get; set; } // IndividualServiceNumber (length: 128)
        public string NotOnBalance { get; set; } // NotOnBalance (length: 256)
        public int YearOfIssue { get; set; } // YearOfIssue (Primary key)
        public int? ExploitationStartYear { get; set; } // ExploitationStartYear
        public System.DateTime? Guarantee { get; set; } // Guarantee
        public string Comment { get; set; } // Comment (length: 256)
        public string ServiceStatus { get; set; } // ServiceStatus (length: 256)
    }

    // AllIpServerSelect
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllIpServerSelect
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameServer { get; set; } // NameServer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 8000)
        public string FullIpAdressDataBase { get; set; } // FullIpAdressDataBase (length: 128)
        public string InfoStatusReport { get; set; } // InfoStatusReport (Primary key) (length: 1)
        public string ColorStatus { get; set; } // ColorStatus (Primary key) (length: 1)
    }

    // AllTechnics
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTechnic
    {
        public int Id { get; set; } // Id (Primary key)
        public int IdCategoriaSupport { get; set; } // IdCategoriaSupport (Primary key)
        public string Item { get; set; } // Item (Primary key) (length: 13)
        public string NameUser { get; set; } // NameUser (length: 256)
        public string NameType { get; set; } // NameType (length: 256)
        public string NameManufacturer { get; set; } // NameManufacturer (length: 512)
        public string NameModel { get; set; } // NameModel (length: 256)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string InventarNum { get; set; } // InventarNum (length: 128)
        public string ServiceNum { get; set; } // ServiceNum (length: 128)
        public string NameServer { get; set; } // NameServer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 128)
        public string Mac { get; set; } // Mac (length: 64)
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)
        public string Coment { get; set; } // Coment (length: 254)
        public int? IdStatus { get; set; } // IdStatus
        public string NameStatus { get; set; } // NameStatus (length: 64)
        public string Color { get; set; } // Color (length: 64)
        public bool WriteOffSign { get; set; } // WriteOffSign (Primary key)
        public int? IdUser { get; set; } // IdUser
        public int? IdOtdel { get; set; } // IdOtdel
        public string Telephon { get; set; } // Telephon (length: 32)
        public int? IdSupply { get; set; } // IdSupply
        public string NameKontract { get; set; } // NameKontract (length: 512)
        public string NameSupply { get; set; } // NameSupply (length: 512)
        public System.DateTime? DatePostavki { get; set; } // DatePostavki
        public int AutoSupport { get; set; } // AutoSupport (Primary key)
        public string TypeToner { get; set; } // TypeToner (length: 128)
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
    }

    // AllTelephon
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTelephon
    {
        public string ФИО { get; set; } // ФИО (Primary key) (length: 256)
        public string Коментарий { get; set; } // Коментарий (length: 254)
        public string Отдел { get; set; } // Отдел (length: 256)
        public string Номеркабинета { get; set; } // Номер кабинета (length: 5)
        public string Внутреннийтелефон { get; set; } // Внутренний телефон (length: 32)
        public string Городскойтелефон { get; set; } // Городской телефон (length: 32)
        public string Серийныйномер { get; set; } // Серийный номер (length: 64)
        public string IPТелефона { get; set; } // IP Телефона (length: 64)
        public string MACАдрестелефона { get; set; } // MAC Адрес телефона (length: 64)
    }

    // AllTemplateAndTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTemplateAndTree
    {
        public int IdTemplate { get; set; } // IdTemplate (Primary key)
        public string Name { get; set; } // Name
        public string Category { get; set; } // Category
        public string Path { get; set; } // Path
        public string Type { get; set; } // Type
    }

    // AnaliticaSysBlokAndMonitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AnaliticaSysBlokAndMonitor
    {
        public string UsersSysBlok { get; set; } // UsersSysBlok (length: 256)
        public string TabelNumberSysBlok { get; set; } // TabelNumberSysBlok (length: 32)
        public string NameSupplySysBlok { get; set; } // NameSupplySysBlok (length: 512)
        public string NameKontractSysBlok { get; set; } // NameKontractSysBlok (length: 512)
        public System.DateTime? DatePostavkiSysBlok { get; set; } // DatePostavkiSysBlok
        public string NumberKabinetSysBlok { get; set; } // NumberKabinetSysBlok (length: 5)
        public string StatusingSysBlock { get; set; } // StatusingSysBlock (length: 64)
        public string NameComputerSysBlock { get; set; } // NameComputerSysBlock (length: 128)
        public string ServiceNumSysBlock { get; set; } // ServiceNumSysBlock (length: 128)
        public string SerNumSysBlock { get; set; } // SerNumSysBlock (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string ComputerNameSysBlock { get; set; } // ComputerNameSysBlock (length: 128)
        public string IpAdressSysBlock { get; set; } // IpAdressSysBlock (length: 128)
        public string NameNameMonitor { get; set; } // NameNameMonitor (length: 256)
        public string TabelNumberNameMonitor { get; set; } // TabelNumberNameMonitor (length: 32)
        public string NameSupplyNameMonitor { get; set; } // NameSupplyNameMonitor (length: 512)
        public string NameKontractNameMonitor { get; set; } // NameKontractNameMonitor (length: 512)
        public System.DateTime? DatePostavkiNameMonitor { get; set; } // DatePostavkiNameMonitor
        public string NumberKabinetNameMonitor { get; set; } // NumberKabinetNameMonitor (length: 5)
        public string StatusingMonitors { get; set; } // StatusingMonitors (length: 64)
        public string NameMonitor { get; set; } // NameMonitor (Primary key) (length: 128)
        public string SerNumNameMonitor { get; set; } // SerNumNameMonitor (length: 128)
        public string InventarNumMonitorNameMonitor { get; set; } // InventarNumMonitorNameMonitor (length: 128)
    }

    // AnalysisEpoAndInventarka
    ///<summary>
    /// Выборки для анализа ЭПО - Инвенторизация
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AnalysisEpoAndInventarka
    {

        ///<summary>
        /// Ун выборки
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Признак автоматической печати 1(Да)/0(Нет)
        ///</summary>
        public bool IsPrint { get; set; } // IsPrint

        ///<summary>
        /// Информация об отчете
        ///</summary>
        public string NameInfoReport { get; set; } // NameInfoReport (length: 1024)

        ///<summary>
        /// Наименование листа xlsx
        ///</summary>
        public string NameListXlsx { get; set; } // NameListXlsx (length: 25)

        ///<summary>
        /// Наименование файла xlsx
        ///</summary>
        public string NameFileXlsx { get; set; } // NameFileXlsx (length: 32)

        ///<summary>
        /// Выборка sql для отчета
        ///</summary>
        public string ViewReport { get; set; } // ViewReport

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public AnalysisEpoAndInventarka()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ApplicationsIfns
    ///<summary>
    /// Классификация подсистемы АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ApplicationsIfn
    {

        ///<summary>
        /// Ун подсистемы
        ///</summary>
        public int IdApplicationsIfns { get; set; } // IdApplicationsIfns (Primary key)

        ///<summary>
        /// Ун сегмента
        ///</summary>
        public int IdSigmentIfns { get; set; } // IdSigmentIfns

        ///<summary>
        /// Наименование подсистемы
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child RuleIfns where [RuleIfns].[IdApplicationsIfns] point to this entity (FK_RuleIfns_ApplicationsIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RuleIfn> RuleIfns { get; set; } // RuleIfns.FK_RuleIfns_ApplicationsIfns

        // Foreign keys

        /// <summary>
        /// Parent SigmentIfn pointed by [ApplicationsIfns].([IdSigmentIfns]) (FK_ApplicationsIfns_SigmentIfns)
        /// </summary>
        public virtual SigmentIfn SigmentIfn { get; set; } // FK_ApplicationsIfns_SigmentIfns

        public ApplicationsIfn()
        {
            DateCreate = System.DateTime.Now;
            RuleIfns = new System.Collections.Generic.List<RuleIfn>();
        }
    }

    // BlockPower
    ///<summary>
    /// Бесперебойное питание
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BlockPower
    {

        ///<summary>
        /// Ун бесперебойника
        ///</summary>
        public int IdBlockPowers { get; set; } // IdBlockPowers (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdProizvoditelBP { get; set; } // IdProizvoditelBP

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModelBP { get; set; } // IdModelBP

        ///<summary>
        /// Ун контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Заводской номер
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)

        ///<summary>
        /// Сервисный номер ЭПО
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун (GUID) истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [BlockPower].([IdNumberKabinet]) (FK_BlockPower_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_BlockPower_Kabinet

        /// <summary>
        /// Parent ModelBlockPower pointed by [BlockPower].([IdModelBP]) (FK_BlockPower_ModelBlockPower)
        /// </summary>
        public virtual ModelBlockPower ModelBlockPower { get; set; } // FK_BlockPower_ModelBlockPower

        /// <summary>
        /// Parent ProizvoditelBlockPower pointed by [BlockPower].([IdProizvoditelBP]) (FK_BlockPower_ProizvoditelBlockPower)
        /// </summary>
        public virtual ProizvoditelBlockPower ProizvoditelBlockPower { get; set; } // FK_BlockPower_ProizvoditelBlockPower

        /// <summary>
        /// Parent Statusing pointed by [BlockPower].([IdStatus]) (FK_BlockPower_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_BlockPower_Statusing

        /// <summary>
        /// Parent Supply pointed by [BlockPower].([IdSupply]) (FK_BlockPower_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_BlockPower_Supply

        /// <summary>
        /// Parent User pointed by [BlockPower].([IdUser]) (FK_BlockPower_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_BlockPower_Users

        public BlockPower()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // BookAccounting
    ///<summary>
    /// Книги учета материальных ценностей
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BookAccounting
    {

        ///<summary>
        /// Ун книги
        ///</summary>
        public int IdBook { get; set; } // IdBook (Primary key)

        ///<summary>
        /// Ун документа
        ///</summary>
        public int? IdNameBook { get; set; } // IdNameBook

        ///<summary>
        /// Ун ключа из view BookModels
        ///</summary>
        public int? IdKeys { get; set; } // IdKeys

        ///<summary>
        /// Ун оборудования
        ///</summary>
        public int? IdModel { get; set; } // IdModel

        ///<summary>
        /// Класификация оборудования
        ///</summary>
        public string ClassName { get; set; } // ClassName (length: 256)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string NameModel { get; set; } // NameModel (length: 256)

        ///<summary>
        /// Признак содержит ли файл 1(Да)/0(Нет)
        ///</summary>
        public bool? IsFileExists { get; set; } // IsFileExists

        ///<summary>
        /// Наименование файла
        ///</summary>
        public string NameBook { get; set; } // NameBook (length: 128)

        ///<summary>
        /// Файл в Base64 (не сжат)
        ///</summary>
        public byte[] Book { get; set; } // Book (length: 2147483647)

        ///<summary>
        /// Тип файла
        ///</summary>
        public string TypeFile { get; set; } // TypeFile (length: 5)

        ///<summary>
        /// Признак актуальности файла 1(Да)/0(Нет)
        ///</summary>
        public bool? IsActual { get; set; } // IsActual

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Namedocument pointed by [BookAccounting].([IdNameBook]) (FK_BookAccounting_Namedocument)
        /// </summary>
        public virtual Namedocument Namedocument { get; set; } // FK_BookAccounting_Namedocument

        public BookAccounting()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // BookModels
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BookModel
    {
        public long? RowNum { get; set; } // RowNum
        public int Keys { get; set; } // Keys (Primary key)
        public string Name { get; set; } // Name (length: 64)
        public int Id { get; set; } // Id (Primary key)
        public string Model { get; set; } // Model (length: 128)
        public int IdBook { get; set; } // IdBook (Primary key)
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
    }

    // Calendar
    ///<summary>
    /// Календарь ВКС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Calendar
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Идентификатор письма
        ///</summary>
        public string IdMail { get; set; } // IdMail (length: 512)

        ///<summary>
        /// Описание ВКС
        ///</summary>
        public string DescriptionVKS { get; set; } // DescriptionVKS

        ///<summary>
        /// Полное описание ВКС
        ///</summary>
        public string FullDescription { get; set; } // FullDescription

        ///<summary>
        /// Идентификатор ВКС
        ///</summary>
        public string IdVKS { get; set; } // IdVKS (length: 126)

        ///<summary>
        /// Дата начала ВКС
        ///</summary>
        public System.DateTime? DateStart { get; set; } // DateStart

        ///<summary>
        /// Дата окончания ВКС
        ///</summary>
        public System.DateTime? DateFinish { get; set; } // DateFinish

        ///<summary>
        /// Признак отправки на СТП 1(Да)/0(Нет)
        ///</summary>
        public bool IsSTP { get; set; } // IsSTP

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public Calendar()
        {
            IsSTP = false;
            DateCreate = System.DateTime.Now;
        }
    }

    // CalendarVksStp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CalendarVksStp
    {
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (length: 512)
        public string DescriptionVKS { get; set; } // DescriptionVKS
        public string FullDescription { get; set; } // FullDescription
        public string IdVKS { get; set; } // IdVKS (length: 126)
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public string IsSTP { get; set; } // IsSTP (Primary key) (length: 22)
    }

    // CalendarVksStpView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CalendarVksStpView
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (length: 512)
        public string DescriptionVKS { get; set; } // DescriptionVKS
        public string FullDescription { get; set; } // FullDescription
        public string IdVKS { get; set; } // IdVKS (length: 126)
        public System.DateTime? DateStart { get; set; } // DateStart
        public System.DateTime? DateFinish { get; set; } // DateFinish
        public string IsSTP { get; set; } // IsSTP (Primary key) (length: 22)
    }

    // CategoriaTemplate
    ///<summary>
    /// Категория шаблонов СТП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CategoriaTemplate
    {

        ///<summary>
        /// Ун категории
        ///</summary>
        public int IdCategiria { get; set; } // IdCategiria (Primary key)

        ///<summary>
        /// Английское наименование категории
        ///</summary>
        public string NameEngCategoria { get; set; } // NameEngCategoria (length: 512)

        ///<summary>
        /// Русское наименование категории
        ///</summary>
        public string NameRusCategoria { get; set; } // NameRusCategoria (length: 512)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FullTemplateSupports where [FullTemplateSupport].[IdCategiria] point to this entity (FK_FullTemplateSupport_CategoriaTemplate)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullTemplateSupport> FullTemplateSupports { get; set; } // FullTemplateSupport.FK_FullTemplateSupport_CategoriaTemplate

        public CategoriaTemplate()
        {
            DateCreate = System.DateTime.Now;
            FullTemplateSupports = new System.Collections.Generic.List<FullTemplateSupport>();
        }
    }

    // CategoryPhoneHeaders
    ///<summary>
    /// Категория формирования шапки телефонов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CategoryPhoneHeader
    {

        ///<summary>
        /// Ун категории
        ///</summary>
        public int IdCategoryHeaders { get; set; } // IdCategoryHeaders (Primary key)

        ///<summary>
        /// Наименование категории
        ///</summary>
        public string NameHeaders { get; set; } // NameHeaders (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Telephons where [Telephon].[IdCategoryHeaders] point to this entity (FK_Telephon_CategoryPhoneHeaders)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_CategoryPhoneHeaders

        public CategoryPhoneHeader()
        {
            DataCreate = System.DateTime.Now;
            Telephons = new System.Collections.Generic.List<Telephon>();
        }
    }

    // ClasificationAct
    ///<summary>
    /// Классификация акта списания
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClasificationAct
    {

        ///<summary>
        /// Ун классификации
        ///</summary>
        public int IdClasification { get; set; } // IdClasification (Primary key)

        ///<summary>
        /// Наименование классификации
        ///</summary>
        public string NameClasification { get; set; } // NameClasification (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Acts where [Act].[IdClasification] point to this entity (FK_ClasificationAct_Act)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Act> Acts { get; set; } // Act.FK_ClasificationAct_Act

        public ClasificationAct()
        {
            Acts = new System.Collections.Generic.List<Act>();
        }
    }

    // Classification
    ///<summary>
    /// Классификация копировальной техники
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Classification
    {

        ///<summary>
        /// Ун классификации
        ///</summary>
        public int IdClasification { get; set; } // IdClasification (Primary key)

        ///<summary>
        /// Наименование класса копировальной техники
        ///</summary>
        public string NameClass { get; set; } // NameClass (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child FullModels where [FullModel].[IdClasification] point to this entity (FK_FullModel_Classification)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullModel> FullModels { get; set; } // FullModel.FK_FullModel_Classification

        public Classification()
        {
            DataCreate = System.DateTime.Now;
            FullModels = new System.Collections.Generic.List<FullModel>();
        }
    }

    // ClassParameterTemplate
    ///<summary>
    /// Параметры акта разкладки на акт
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClassParameterTemplate
    {

        ///<summary>
        /// Ун параметра
        ///</summary>
        public int IdClassParameter { get; set; } // IdClassParameter (Primary key)

        ///<summary>
        /// Наименование класа параметра на акте
        ///</summary>
        public string NameClassParameter { get; set; } // NameClassParameter (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ParameterActs where [ParameterAct].[IdClassParameter] point to this entity (FK_ClassParameterTemplate_ParameterAct)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ParameterAct> ParameterActs { get; set; } // ParameterAct.FK_ClassParameterTemplate_ParameterAct

        public ClassParameterTemplate()
        {
            ParameterActs = new System.Collections.Generic.List<ParameterAct>();
        }
    }

    // ComputerIpAdressSynhronization
    ///<summary>
    /// Мониторинг компьютеров Active Derectory
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ComputerIpAdressSynhronization
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string NameHost { get; set; } // NameHost (length: 256)

        ///<summary>
        /// Ip адрес
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 256)

        ///<summary>
        /// Статус Ip
        ///</summary>
        public string StatusIp { get; set; } // StatusIp (length: 256)

        ///<summary>
        /// Mac адрес
        ///</summary>
        public string MacAdress { get; set; } // MacAdress (length: 256)

        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string UserName { get; set; } // UserName (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public ComputerIpAdressSynhronization()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ComputersAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ComputersAndEpo
    {
        public string Пользователь { get; set; } // Пользователь (length: 256)
        public string Модельинвентаризации { get; set; } // Модель инвентаризации (length: 256)
        public int IDвЭПО { get; set; } // ID в ЭПО (Primary key)
        public string СерийныйномервБД { get; set; } // Серийный номер в БД (length: 128)
        public string СерийныйномервЭПО { get; set; } // Серийный номер в ЭПО (Primary key) (length: 64)
        public int СерийныйномернесоответствиеБДЭПО { get; set; } // Серийный номер несоответствие БД ЭПО (Primary key)
        public string ИнвентарныйномервБД { get; set; } // Инвентарный номер в БД (length: 128)
        public string ИнвентарныйномервЭПО { get; set; } // Инвентарный номер в ЭПО (length: 64)
        public int ИнвентарныйномернесоответствиеБДЭПО { get; set; } // Инвентарный номер несоответствие БД ЭПО (Primary key)
        public string ИмявБД { get; set; } // Имя в БД (length: 128)
        public string ИмявЭПО { get; set; } // Имя в ЭПО (length: 128)
        public int ИмянесоответствиеБДЭПО { get; set; } // Имя несоответствие БД ЭПО (Primary key)
        public string КомнатавБД { get; set; } // Комната в БД (length: 5)
        public string КомнатавЭПО { get; set; } // Комната в ЭПО (length: 64)
        public int КомнатанесоответствиеБДЭПО { get; set; } // Комната несоответствие БД ЭПО (Primary key)
    }

    // ContractOnSto
    ///<summary>
    /// Контракт на СТО АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ContractOnSto
    {

        ///<summary>
        /// Ун контракта
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Номер контракта
        ///</summary>
        public string Number { get; set; } // Number (length: 256)

        ///<summary>
        /// Наименование контракта
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата контракта
        ///</summary>
        public System.DateTime ContractDate { get; set; } // ContractDate

        ///<summary>
        /// Исполнитель контракта
        ///</summary>
        public string Executor { get; set; } // Executor

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdContractOnSto] point to this entity (FK_EpoDocument_ContractOnSto)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_ContractOnSto

        public ContractOnSto()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
        }
    }

    // CopySave
    ///<summary>
    /// CopySave для МФУ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CopySave
    {

        ///<summary>
        /// Ун CopySave
        ///</summary>
        public int IdCopySave { get; set; } // IdCopySave (Primary key)

        ///<summary>
        /// Наименование CopySave
        ///</summary>
        public string NameCopySave { get; set; } // NameCopySave (length: 64)

        ///<summary>
        /// Серийный номер CopySave
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 64)

        ///<summary>
        /// Инвентарный номер CopySave
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdCopySave] point to this entity (FK_Mfu_CopySave)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_CopySave

        public CopySave()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
        }
    }

    // DeliveryContract
    ///<summary>
    /// Контракт на поставку АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DeliveryContract
    {

        ///<summary>
        /// Ун контракта
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Номер контракта
        ///</summary>
        public string Number { get; set; } // Number (length: 256)

        ///<summary>
        /// Наименование контракта
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата контракта
        ///</summary>
        public System.DateTime ContractDate { get; set; } // ContractDate

        ///<summary>
        /// Исполнитель контракта
        ///</summary>
        public string Executor { get; set; } // Executor

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdDeliveryContract] point to this entity (FK_EpoDocument_DeliveryContract)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_DeliveryContract

        public DeliveryContract()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
        }
    }

    // DepartmentRegulations
    ///<summary>
    /// Вырезки из должностных регламентов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DepartmentRegulation
    {

        ///<summary>
        /// Ун отдела
        ///</summary>
        public int IdOtdel { get; set; } // IdOtdel (Primary key)

        ///<summary>
        /// Вырезка из регламента
        ///</summary>
        public string Regulations { get; set; } // Regulations

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Otdel pointed by [DepartmentRegulations].([IdOtdel]) (FK_Otdel_DepartmentRegulations)
        /// </summary>
        public virtual Otdel Otdel { get; set; } // FK_Otdel_DepartmentRegulations

        public DepartmentRegulation()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // Document
    ///<summary>
    /// Накладные на внутренее перемещение
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Document
    {

        ///<summary>
        /// Ун документа
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун наименование документа
        ///</summary>
        public int? IdNamedocument { get; set; } // IdNamedocument

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Информация о накладной
        ///</summary>
        public string InfoUserFile { get; set; } // InfoUserFile (length: 256)

        ///<summary>
        /// Признак содержит ли файл 1(Да)/0(Нет)
        ///</summary>
        public bool? IsFileExists { get; set; } // IsFileExists

        ///<summary>
        /// Наименование файла
        ///</summary>
        public string Namefile { get; set; } // Namefile (length: 128)

        ///<summary>
        /// Файл в Base64 (не сжат)
        ///</summary>
        public byte[] Document_ { get; set; } // Document (length: 2147483647)

        ///<summary>
        /// Тип файла
        ///</summary>
        public string TypeFile { get; set; } // TypeFile (length: 5)

        ///<summary>
        /// Признак актуальности файла 1(Да)/0(Нет)
        ///</summary>
        public bool? IsActual { get; set; } // IsActual

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent Namedocument pointed by [Document].([IdNamedocument]) (FK_Document_Namedocument)
        /// </summary>
        public virtual Namedocument Namedocument { get; set; } // FK_Document_Namedocument

        /// <summary>
        /// Parent User pointed by [Document].([IdUser]) (FK_Users_Document)
        /// </summary>
        public virtual User User { get; set; } // FK_Users_Document

        public Document()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // DocumentModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DocumentModel
    {
        public int Id { get; set; } // Id (Primary key)
        public int? IdNamedocument { get; set; } // IdNamedocument
        public string InfoUserFile { get; set; } // InfoUserFile (length: 256)
        public bool? IsFileExists { get; set; } // IsFileExists
        public string Namefile { get; set; } // Namefile (length: 128)
        public string TypeFile { get; set; } // TypeFile (length: 5)
        public string NameDocument { get; set; } // NameDocument (length: 128)
        public int? IdUser { get; set; } // IdUser
        public bool? IsActual { get; set; } // IsActual
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
    }

    // DoubleComputersName
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DoubleComputersName
    {
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)
        public string ServiceNum { get; set; } // ServiceNum (length: 128)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 128)
    }

    // EmptyMonitorSupply38
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EmptyMonitorSupply38
    {
        public string Типоборудования { get; set; } // Тип оборудования (length: 13)
        public string Производитель { get; set; } // Производитель (Primary key) (length: 8)
        public string Модель { get; set; } // Модель (Primary key) (length: 6)
        public string Серийныйномер { get; set; } // Серийный номер (length: 128)
        public int? Сервисныйномер { get; set; } // Сервисный номер
        public string Инвентарныйномер { get; set; } // Инвентарный номер (length: 128)
        public int Годвыпуска { get; set; } // Год выпуска (Primary key)
        public string Гарантия { get; set; } // Гарантия (Primary key) (length: 10)
        public int? Имякомпьютера { get; set; } // Имя компьютера
        public string IPадрес { get; set; } // IP адрес (length: 128)
        public int? Комментарии { get; set; } // Комментарии
    }

    // The table 'EmptyPrinterAdnMfu' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // EmptyPrinterAdnMfu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EmptyPrinterAdnMfu
    {
        public string Категория { get; set; } // Категория (length: 13)
        public string Пользователь { get; set; } // Пользователь (length: 256)
        public string Производитель { get; set; } // Производитель (length: 512)
        public string Модель { get; set; } // Модель (length: 256)
        public string Серийныйномер { get; set; } // Серийный номер (length: 128)
        public string Инвентарныйномер { get; set; } // Инвентарный номер (length: 128)
        public string Номеркабинета { get; set; } // Номер кабинета (length: 5)
        public string Номеридатаконтракта { get; set; } // Номер и дата контракта (length: 512)
    }

    // EmptySysBlokSupply40
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EmptySysBlokSupply40
    {
        public string Типоборудования { get; set; } // Тип оборудования (Primary key) (length: 23)
        public string Производитель { get; set; } // Производитель (Primary key) (length: 3)
        public string Модель { get; set; } // Модель (length: 512)
        public string Серийныйномер { get; set; } // Серийный номер (length: 128)
        public int? Сервисныйномер { get; set; } // Сервисный номер
        public string Инвентарныйномер { get; set; } // Инвентарный номер (length: 128)
        public int Годвыпуска { get; set; } // Год выпуска (Primary key)
        public string Гарантия { get; set; } // Гарантия (Primary key) (length: 10)
        public string Имякомпьютера { get; set; } // Имя компьютера (length: 15)
        public string IPадрес { get; set; } // IP адрес (length: 128)
        public int? Комментарии { get; set; } // Комментарии
    }

    // EpoDocument
    ///<summary>
    /// Оборудование ЭПО АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EpoDocument
    {

        ///<summary>
        /// Ун документа
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун типа документа АКСИОК
        ///</summary>
        public int? IdEpoDocument { get; set; } // IdEpoDocument

        ///<summary>
        /// Ун типа оборудования АКСИОК
        ///</summary>
        public int? IdEquipmentType { get; set; } // IdEquipmentType

        ///<summary>
        /// Ун производителя АКСИОК
        ///</summary>
        public int? IdProducer { get; set; } // IdProducer

        ///<summary>
        /// Ун модели АКСИОК
        ///</summary>
        public int? IdEquipmentModel { get; set; } // IdEquipmentModel

        ///<summary>
        /// Ун Контракта на поставку АКСИОК
        ///</summary>
        public int? IdDeliveryContract { get; set; } // IdDeliveryContract

        ///<summary>
        /// Ун Контракта на ЭПО АКСИОК
        ///</summary>
        public int? IdContractOnSto { get; set; } // IdContractOnSto

        ///<summary>
        /// Ун файла Акта списания АКСИОК
        ///</summary>
        public int? IdFile { get; set; } // IdFile

        ///<summary>
        /// Ун файла Экспертизы АКСИОК
        ///</summary>
        public int? IdExpertiseFile { get; set; } // IdExpertiseFile

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string ComputerName { get; set; } // ComputerName (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerialNumber { get; set; } // SerialNumber (length: 64)

        ///<summary>
        /// Идентификатор
        ///</summary>
        public string Identifier { get; set; } // Identifier (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventoryNumber { get; set; } // InventoryNumber (length: 128)

        ///<summary>
        /// Комплект
        ///</summary>
        public bool IsKit { get; set; } // IsKit

        ///<summary>
        /// Статус СТО
        ///</summary>
        public int? EquipmentStateSto { get; set; } // EquipmentStateSto

        ///<summary>
        /// Статус Экспертизы
        ///</summary>
        public int? EquipmentState { get; set; } // EquipmentState

        ///<summary>
        /// Номер акта
        ///</summary>
        public string ActNumber { get; set; } // ActNumber (length: 256)

        ///<summary>
        /// Дата акта
        ///</summary>
        public System.DateTime? ActDate { get; set; } // ActDate

        ///<summary>
        /// Дата утверждения
        ///</summary>
        public System.DateTime? DateOfStatement { get; set; } // DateOfStatement

        ///<summary>
        /// Статус Экспертизы
        ///</summary>
        public int? ExpertiseStatus { get; set; } // ExpertiseStatus

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Индивидуальный сервисный номер
        ///</summary>
        public string IndividualServiceNumber { get; set; } // IndividualServiceNumber (length: 128)

        ///<summary>
        /// Что то с балансом
        ///</summary>
        public string NotOnBalance { get; set; } // NotOnBalance (length: 256)

        ///<summary>
        /// Год выпуска
        ///</summary>
        public int YearOfIssue { get; set; } // YearOfIssue

        ///<summary>
        /// Год ввода в эксплуатацию
        ///</summary>
        public int? ExploitationStartYear { get; set; } // ExploitationStartYear

        ///<summary>
        /// Гарантия
        ///</summary>
        public System.DateTime? Guarantee { get; set; } // Guarantee

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Comment { get; set; } // Comment (length: 256)

        ///<summary>
        /// Сервисный статус
        ///</summary>
        public string ServiceStatus { get; set; } // ServiceStatus (length: 256)

        ///<summary>
        /// Версия фактической ОС
        ///</summary>
        public string OsActualVersion { get; set; } // OsActualVersion (length: 128)

        ///<summary>
        /// Актуальная версия ОС
        ///</summary>
        public string ActualOsVersion { get; set; } // ActualOsVersion (length: 128)

        ///<summary>
        /// Назначение
        ///</summary>
        public string Appointment { get; set; } // Appointment (length: 128)

        ///<summary>
        /// Тип использования
        ///</summary>
        public string TypeOfUse { get; set; } // TypeOfUse (length: 128)

        ///<summary>
        /// Отдел
        ///</summary>
        public string Division { get; set; } // Division (length: 256)

        ///<summary>
        /// Модель соответствия отправки
        ///</summary>
        public string ModelInDeliveryAccordance { get; set; } // ModelInDeliveryAccordance (length: 128)

        ///<summary>
        /// Участок (Здание)
        ///</summary>
        public string Building { get; set; } // Building (length: 128)

        ///<summary>
        /// Расположение. Этаж
        ///</summary>
        public string FloorLocation { get; set; } // FloorLocation (length: 128)

        ///<summary>
        /// Расположение. Комната
        ///</summary>
        public string RoomLocation { get; set; } // RoomLocation (length: 128)

        ///<summary>
        /// Версия ПС
        ///</summary>
        public string PsVersion { get; set; } // PsVersion (length: 128)

        ///<summary>
        /// IP адрес
        ///</summary>
        public string IpAddress { get; set; } // IpAddress (length: 128)

        ///<summary>
        /// Кол-во плат
        ///</summary>
        public int? BoardsNumber { get; set; } // BoardsNumber

        ///<summary>
        /// Кол-во свободных плат
        ///</summary>
        public int? FreeBoardsNumber { get; set; } // FreeBoardsNumber

        ///<summary>
        /// Кол-во внутр абон аналог
        ///</summary>
        public int? InternalAnalogNumber { get; set; } // InternalAnalogNumber

        ///<summary>
        /// Кол-во внутр абон цифровых
        ///</summary>
        public int? InternalDigitNumber { get; set; } // InternalDigitNumber

        ///<summary>
        /// Тип аналогового подключения городской ввод
        ///</summary>
        public string TypeOfAnalogConnection { get; set; } // TypeOfAnalogConnection (length: 128)

        ///<summary>
        /// Тип цифрового подключения городской ввод
        ///</summary>
        public string TypeOfDigitConnection { get; set; } // TypeOfDigitConnection (length: 128)

        ///<summary>
        /// Численность администраторов УАТС
        ///</summary>
        public int? AdminsCount { get; set; } // AdminsCount

        ///<summary>
        /// Номер ключа
        ///</summary>
        public string KeyNumber { get; set; } // KeyNumber (length: 256)

        ///<summary>
        /// Требует замены
        ///</summary>
        public bool RequiresReplacement { get; set; } // RequiresReplacement

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) EpoDocument pointed by [ValueCharacteristicJson].[Id] (FK_ValueCharacteristicJson_EpoDocument)
        /// </summary>
        [JsonIgnore]
        public virtual ValueCharacteristicJson ValueCharacteristicJson { get; set; } // ValueCharacteristicJson.FK_ValueCharacteristicJson_EpoDocument

        // Foreign keys

        /// <summary>
        /// Parent ContractOnSto pointed by [EpoDocument].([IdContractOnSto]) (FK_EpoDocument_ContractOnSto)
        /// </summary>
        public virtual ContractOnSto ContractOnSto { get; set; } // FK_EpoDocument_ContractOnSto

        /// <summary>
        /// Parent DeliveryContract pointed by [EpoDocument].([IdDeliveryContract]) (FK_EpoDocument_DeliveryContract)
        /// </summary>
        public virtual DeliveryContract DeliveryContract { get; set; } // FK_EpoDocument_DeliveryContract

        /// <summary>
        /// Parent EquipmentModel pointed by [EpoDocument].([IdEquipmentModel]) (FK_EpoDocument_EquipmentModel)
        /// </summary>
        public virtual EquipmentModel EquipmentModel { get; set; } // FK_EpoDocument_EquipmentModel

        /// <summary>
        /// Parent EquipmentType pointed by [EpoDocument].([IdEquipmentType]) (FK_EpoDocument_EquipmentType)
        /// </summary>
        public virtual EquipmentType EquipmentType { get; set; } // FK_EpoDocument_EquipmentType

        /// <summary>
        /// Parent ExpertiseFile pointed by [EpoDocument].([IdExpertiseFile]) (FK_EpoDocument_ExpertiseFile)
        /// </summary>
        public virtual ExpertiseFile ExpertiseFile { get; set; } // FK_EpoDocument_ExpertiseFile

        /// <summary>
        /// Parent File pointed by [EpoDocument].([IdFile]) (FK_EpoDocument_File)
        /// </summary>
        public virtual File File { get; set; } // FK_EpoDocument_File

        /// <summary>
        /// Parent ModelDocumentType pointed by [EpoDocument].([IdEpoDocument]) (FK_EpoDocument_ModelDocumentType)
        /// </summary>
        public virtual ModelDocumentType ModelDocumentType { get; set; } // FK_EpoDocument_ModelDocumentType

        /// <summary>
        /// Parent Producer pointed by [EpoDocument].([IdProducer]) (FK_EpoDocument_Producer)
        /// </summary>
        public virtual Producer Producer { get; set; } // FK_EpoDocument_Producer
    }

    // EquipmentModel
    ///<summary>
    /// Модель ЭПО АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentModel
    {

        ///<summary>
        /// Ун модели
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Код модели
        ///</summary>
        public string Code { get; set; } // Code (length: 10)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string Name { get; set; } // Name (length: 512)

        ///<summary>
        /// Дата начала
        ///</summary>
        public System.DateTime? StartDate { get; set; } // StartDate

        ///<summary>
        /// Дата окончания
        ///</summary>
        public System.DateTime? EndDate { get; set; } // EndDate

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdEquipmentModel] point to this entity (FK_EpoDocument_EquipmentModel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_EquipmentModel
        /// <summary>
        /// Child FullСategory where [FullСategory].[IdEquipmentModel] point to this entity (FK_FullСategory_EquipmentModel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullСategory> FullСategory { get; set; } // FullСategory.FK_FullСategory_EquipmentModel

        public EquipmentModel()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
            FullСategory = new System.Collections.Generic.List<FullСategory>();
        }
    }

    // EquipmentSto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentSto
    {
        public int ID { get; set; } // ID (Primary key)
        public int Soun { get; set; } // Soun (Primary key)
        public string MifnsObject { get; set; } // MifnsObject (Primary key) (length: 512)
        public int CodeObject { get; set; } // CodeObject (Primary key)
        public string ViewObject { get; set; } // ViewObject (Primary key) (length: 1024)
        public string TypeObject { get; set; } // TypeObject (Primary key) (length: 1024)
        public string ManufacturerObject { get; set; } // ManufacturerObject (Primary key) (length: 512)
        public string ModelObject { get; set; } // ModelObject (Primary key) (length: 512)
        public string SetObject { get; set; } // SetObject (Primary key) (length: 32)
        public string ClusterObject { get; set; } // ClusterObject (Primary key) (length: 32)
        public string StoPrevious { get; set; } // StoPrevious (Primary key) (length: 32)
        public string StoCurrent { get; set; } // StoCurrent (Primary key) (length: 32)
        public string Sto { get; set; } // Sto (Primary key) (length: 32)
        public string SerialNumber { get; set; } // SerialNumber (Primary key) (length: 64)
        public string ServiceNumber { get; set; } // ServiceNumber (length: 64)
        public string InventoryNumber { get; set; } // InventoryNumber (length: 64)
        public string ServiceNumber2017 { get; set; } // ServiceNumber2017 (length: 64)
        public string IsNotBalansObject { get; set; } // IsNotBalansObject (length: 128)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public int YearOfIssue { get; set; } // YearOfIssue (Primary key)
        public System.DateTime Guarantee { get; set; } // Guarantee (Primary key)
        public string ServiceStatus { get; set; } // ServiceStatus (length: 256)
        public string SupplyContract { get; set; } // SupplyContract (Primary key) (length: 1024)
        public string ContractSto { get; set; } // ContractSto (length: 1024)
        public int? CountOfLicensesSip { get; set; } // CountOfLicensesSip
        public string Number { get; set; } // Number (length: 128)
        public string Comment { get; set; } // Comment (length: 128)
        public string ModelDeliveryNote { get; set; } // ModelDeliveryNote (length: 512)
        public string ActualOsVersion { get; set; } // ActualOsVersion (length: 128)
        public string VersionOs { get; set; } // VersionOs (length: 128)
        public string NameZags { get; set; } // NameZags (length: 256)
        public string AdressZags { get; set; } // AdressZags (length: 256)
        public string TransferAgreementNumber { get; set; } // TransferAgreementNumber (length: 256)
        public string IsNotNullBalansObject { get; set; } // IsNotNullBalansObject (length: 128)
        public string Ippointment { get; set; } // Ippointment (length: 128)
        public string TypeUse { get; set; } // TypeUse (length: 128)
        public string VirtualizationEnvironment { get; set; } // VirtualizationEnvironment (length: 128)
        public string Department { get; set; } // Department (length: 256)
        public string Plot { get; set; } // Plot (length: 256)
        public string LocationFloor { get; set; } // LocationFloor (length: 64)
        public string LocationRoom { get; set; } // LocationRoom (length: 64)
        public string Room { get; set; } // Room (length: 64)
        public string VersionPs { get; set; } // VersionPs (length: 128)
        public string NetworkName { get; set; } // NetworkName (length: 64)
        public string IpAdrees { get; set; } // IpAdrees (length: 64)
        public string AdditionalIpAdrees { get; set; } // AdditionalIpAdrees (length: 64)
        public string IpAdreesStk { get; set; } // IpAdreesStk (length: 64)
        public string IpAdreesStkMikro { get; set; } // IpAdreesStkMikro (length: 64)
        public string MacAdrees { get; set; } // MacAdrees (length: 64)
        public int? CountProcessor { get; set; } // CountProcessor
        public int? CountCores { get; set; } // CountCores
        public string Mhz { get; set; } // Mhz (length: 64)
        public string TypeMemory { get; set; } // TypeMemory (length: 64)
        public string SizeMemory { get; set; } // SizeMemory (length: 64)
        public string TypeProcessor { get; set; } // TypeProcessor (length: 64)
        public string CdDvd { get; set; } // CdDvd (length: 64)
        public string Fdd { get; set; } // Fdd (length: 64)
        public string Raid { get; set; } // Raid (length: 64)
        public string PublicMemory { get; set; } // PublicMemory (length: 64)
        public string CountHdd { get; set; } // CountHdd (length: 64)
        public string VolumeHdd { get; set; } // VolumeHdd (length: 64)
        public string TypeHdd { get; set; } // TypeHdd (length: 64)
        public int? CountBoards { get; set; } // CountBoards
        public int? CountFreeBoards { get; set; } // CountFreeBoards
        public string NetworkCard { get; set; } // NetworkCard (length: 64)
        public string SpeedNetworkCard { get; set; } // SpeedNetworkCard (length: 64)
        public int? CountSubscribersAnalog { get; set; } // CountSubscribersAnalog
        public int? CountSubscribersDigital { get; set; } // CountSubscribersDigital
        public string InventoryNumberPc { get; set; } // InventoryNumberPc (length: 64)
        public string InventoryNumberIbp { get; set; } // InventoryNumberIbp (length: 64)
        public string InventoryNumberMonitor { get; set; } // InventoryNumberMonitor (length: 64)
        public string ServiceNumberMonitor { get; set; } // ServiceNumberMonitor (length: 64)
        public string ModelMonitor { get; set; } // ModelMonitor (length: 128)
        public string TypeMonitor { get; set; } // TypeMonitor (length: 128)
        public string SizeMonitor { get; set; } // SizeMonitor (length: 128)
        public string MaxSizeMonitor { get; set; } // MaxSizeMonitor (length: 128)
        public string TypeAnalog { get; set; } // TypeAnalog (length: 128)
        public string TypeDigital { get; set; } // TypeDigital (length: 128)
        public int? CountAdmin { get; set; } // CountAdmin
        public string NumberKey { get; set; } // NumberKey (length: 128)
        public string MarkaStrim { get; set; } // MarkaStrim (length: 128)
        public string MarkaKardStrim { get; set; } // MarkaKardStrim (length: 128)
        public string Os { get; set; } // Os (length: 128)
        public string ServicePack { get; set; } // ServicePack (length: 128)
        public string OfficePack { get; set; } // OfficePack (length: 128)
        public string Fio { get; set; } // Fio (length: 128)
        public string MainFio { get; set; } // MainFio (length: 128)
        public string Info { get; set; } // Info (length: 128)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // EquipmentType
    ///<summary>
    /// Тип оборудования АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentType
    {

        ///<summary>
        /// Ун оборудования
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Код оборудования
        ///</summary>
        public string Code { get; set; } // Code (length: 10)

        ///<summary>
        /// Тип оборудования
        ///</summary>
        public string Name { get; set; } // Name (length: 512)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Comment { get; set; } // Comment (length: 1024)

        ///<summary>
        /// Дата начала
        ///</summary>
        public System.DateTime? StartDate { get; set; } // StartDate

        ///<summary>
        /// Дата окончания
        ///</summary>
        public System.DateTime? EndDate { get; set; } // EndDate

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdEquipmentType] point to this entity (FK_EpoDocument_EquipmentType)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_EquipmentType
        /// <summary>
        /// Child FullСategory where [FullСategory].[IdEquipmentType] point to this entity (FK_FullСategory_EquipmentType)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullСategory> FullСategory { get; set; } // FullСategory.FK_FullСategory_EquipmentType

        public EquipmentType()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
            FullСategory = new System.Collections.Generic.List<FullСategory>();
        }
    }

    // Error
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Error
    {
        public string ErrorModel { get; set; } // ErrorModel (length: 96)
        public string SmallName { get; set; } // SmallName (length: 128)
        public string NameCategory { get; set; } // NameCategory (Primary key) (length: 19)
        public string Model { get; set; } // Model (length: 512)
        public string Category { get; set; } // Category (length: 128)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 128)
        public string Coment { get; set; } // Coment (length: 254)
        public bool WriteOffSign { get; set; } // WriteOffSign (Primary key)
    }

    // ErrorTokenUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ErrorTokenUser
    {
        public int IdToken { get; set; } // IdToken (Primary key)
        public string SmallName { get; set; } // SmallName (length: 128)
        public string SmallNameU1 { get; set; } // SmallNameU1 (length: 128)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string SerNumSysBlock { get; set; } // SerNumSysBlock (length: 128)
        public string NameComputerSysBlock { get; set; } // NameComputerSysBlock (length: 128)
        public string SerNumFact { get; set; } // SerNumFact (length: 128)
        public string NameComputerFact { get; set; } // NameComputerFact (length: 128)
    }

    // ErrorUsersNotActual
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ErrorUsersNotActual
    {
        public int? IdUser { get; set; } // IdUser
        public int? StatusActual { get; set; } // StatusActual
        public string StatusText { get; set; } // StatusText (Primary key) (length: 128)
        public string ColorStatus { get; set; } // ColorStatus (length: 32)
        public string NameUser { get; set; } // NameUser (length: 256)
        public string NameCategory { get; set; } // NameCategory (Primary key) (length: 14)
        public string Model { get; set; } // Model (length: 256)
        public string Category { get; set; } // Category (length: 512)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string ServiceNum { get; set; } // ServiceNum (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 128)
    }

    // EventProcess
    ///<summary>
    /// Процессы системы и параметры к ним (если есть)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EventProcess
    {

        ///<summary>
        /// Ун процесса
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Наименование процесса
        ///</summary>
        public string NameProcess { get; set; } // NameProcess (length: 256)

        ///<summary>
        /// День запуска если не указан то каждый день по часам и минутам
        ///</summary>
        public int? DayX { get; set; } // DayX

        ///<summary>
        /// Час запуска
        ///</summary>
        public int? HoursX { get; set; } // HoursX

        ///<summary>
        /// Минута запуска
        ///</summary>
        public int? MinutesX { get; set; } // MinutesX

        ///<summary>
        /// Параметры чарез точку с запятой
        ///</summary>
        public string ParametersEvent { get; set; } // ParametersEvent (length: 1024)

        ///<summary>
        /// Признак завершения процесса 1(Завершен)/0(Не завершен)
        ///</summary>
        public bool? IsComplete { get; set; } // IsComplete

        ///<summary>
        /// Дата время начала процесса
        ///</summary>
        public System.DateTime? DataStart { get; set; } // DataStart

        ///<summary>
        /// Дата время завершения процесса
        ///</summary>
        public System.DateTime? DataFinish { get; set; } // DataFinish

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        public EventProcess()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // ExpertiseFile
    ///<summary>
    /// Предворительно файл Экспертизы АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ExpertiseFile
    {

        ///<summary>
        /// Ун файла Экспертизы
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdExpertiseFile] point to this entity (FK_EpoDocument_ExpertiseFile)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_ExpertiseFile

        public ExpertiseFile()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
        }
    }

    // File
    ///<summary>
    /// Предворительно файл Акт списания АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class File
    {

        ///<summary>
        /// Ун файла Акт списания
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdFile] point to this entity (FK_EpoDocument_File)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_File

        public File()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
        }
    }

    // FullModel
    ///<summary>
    /// Модели копировальной техники
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullModel
    {

        ///<summary>
        /// Ун модели
        ///</summary>
        public int IdModel { get; set; } // IdModel (Primary key)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string NameModel { get; set; } // NameModel (length: 64)

        ///<summary>
        /// Ссылка на страницу с серийным номером
        ///</summary>
        public string UrlModel { get; set; } // UrlModel (length: 512)

        ///<summary>
        /// Признак автоматической заявки с PrintServer
        ///</summary>
        public bool AutoSupport { get; set; } // AutoSupport

        ///<summary>
        /// Тип Картридж тонер и т.п.
        ///</summary>
        public string TypeToner { get; set; } // TypeToner (length: 128)
        public int IdClasification { get; set; } // IdClasification

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdModel] point to this entity (FK_Mfu_FullModel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullModel
        /// <summary>
        /// Child Printers where [Printer].[IdModel] point to this entity (FK_Printer_FullModel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullModel
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdModel] point to this entity (FK_ScanerAndCamer_FullModel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_FullModel

        // Foreign keys

        /// <summary>
        /// Parent Classification pointed by [FullModel].([IdClasification]) (FK_FullModel_Classification)
        /// </summary>
        public virtual Classification Classification { get; set; } // FK_FullModel_Classification

        /// <summary>
        /// Parent FullСategory pointed by [FullModel].([IdFullCategoria]) (FK_FullModel_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_FullModel_FullСategory

        public FullModel()
        {
            AutoSupport = false;
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
            Printers = new System.Collections.Generic.List<Printer>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
        }
    }

    // FullProizvoditel
    ///<summary>
    /// Производители копировальной техники
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullProizvoditel
    {

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int IdProizvoditel { get; set; } // IdProizvoditel (Primary key)

        ///<summary>
        /// Наименование производителя
        ///</summary>
        public string NameProizvoditel { get; set; } // NameProizvoditel (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Mfus where [Mfu].[IdProizvoditel] point to this entity (FK_Mfu_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_FullProizvoditel
        /// <summary>
        /// Child Printers where [Printer].[IdProizvoditel] point to this entity (FK_Printer_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_FullProizvoditel
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdProizvoditel] point to this entity (FK_ScanerAndCamer_FullProizvoditel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_FullProizvoditel

        public FullProizvoditel()
        {
            DataCreate = System.DateTime.Now;
            Mfus = new System.Collections.Generic.List<Mfu>();
            Printers = new System.Collections.Generic.List<Printer>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
        }
    }

    // FullTemplateSupport
    ///<summary>
    /// Заложенные шаблоны с описанием СТП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullTemplateSupport
    {

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int IdTemplate { get; set; } // IdTemplate (Primary key)

        ///<summary>
        /// Наименование задачи СТП
        ///</summary>
        public string Name { get; set; } // Name (length: 1024)

        ///<summary>
        /// Информация ошаблоне
        ///</summary>
        public string InfoTemplate { get; set; } // InfoTemplate (length: 1024)

        ///<summary>
        /// Ун категории СТП
        ///</summary>
        public int IdCategiria { get; set; } // IdCategiria

        ///<summary>
        /// Описательная часть
        ///</summary>
        public string Description { get; set; } // Description
        public bool IsVisibleUserLk { get; set; } // IsVisibleUserLk

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TemplateSupportAndParametrSupports where [TemplateSupportAndParametrSupport].[IdTemplate] point to this entity (FK_TemplateSupportAndParametrSupport_FullTemplateSupport)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TemplateSupportAndParametrSupport> TemplateSupportAndParametrSupports { get; set; } // TemplateSupportAndParametrSupport.FK_TemplateSupportAndParametrSupport_FullTemplateSupport

        // Foreign keys

        /// <summary>
        /// Parent CategoriaTemplate pointed by [FullTemplateSupport].([IdCategiria]) (FK_FullTemplateSupport_CategoriaTemplate)
        /// </summary>
        public virtual CategoriaTemplate CategoriaTemplate { get; set; } // FK_FullTemplateSupport_CategoriaTemplate

        public FullTemplateSupport()
        {
            DateCreate = System.DateTime.Now;
            TemplateSupportAndParametrSupports = new System.Collections.Generic.List<TemplateSupportAndParametrSupport>();
        }
    }

    // FullСategory
    ///<summary>
    /// Сводная таблица (Тип, Производитель, Модель) АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullСategory
    {

        ///<summary>
        /// Ун категории АКСИОК
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун типа оборудования АКСИОК
        ///</summary>
        public int? IdEquipmentType { get; set; } // IdEquipmentType

        ///<summary>
        /// Ун производителя АКСИОК
        ///</summary>
        public int? IdProducer { get; set; } // IdProducer

        ///<summary>
        /// Ун модели АКСИОК
        ///</summary>
        public int? IdEquipmentModel { get; set; } // IdEquipmentModel

        ///<summary>
        /// Актуальность записи АКСИОК
        ///</summary>
        public bool IsSignOfRelevance { get; set; } // IsSignOfRelevance

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child FullModels where [FullModel].[IdFullCategoria] point to this entity (FK_FullModel_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullModel> FullModels { get; set; } // FullModel.FK_FullModel_FullСategory
        /// <summary>
        /// Child ModelBlockPowers where [ModelBlockPower].[IdFullCategoria] point to this entity (FK_ModelBlockPower_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelBlockPower> ModelBlockPowers { get; set; } // ModelBlockPower.FK_ModelBlockPower_FullСategory
        /// <summary>
        /// Child ModelOthers where [ModelOther].[IdFullCategoria] point to this entity (FK_ModelOther_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelOther> ModelOthers { get; set; } // ModelOther.FK_ModelOther_FullСategory
        /// <summary>
        /// Child ModelSeverEquipments where [ModelSeverEquipment].[IdFullCategoria] point to this entity (FK_ModelSeverEquipment_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelSeverEquipment> ModelSeverEquipments { get; set; } // ModelSeverEquipment.FK_ModelSeverEquipment_FullСategory
        /// <summary>
        /// Child ModelSwithes where [ModelSwithes].[IdFullCategoria] point to this entity (FK_ModelSwithes_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ModelSwithe> ModelSwithes { get; set; } // ModelSwithes.FK_ModelSwithes_FullСategory
        /// <summary>
        /// Child NameMonitors where [NameMonitor].[IdFullCategoria] point to this entity (FK_NameMonitor_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<NameMonitor> NameMonitors { get; set; } // NameMonitor.FK_NameMonitor_FullСategory
        /// <summary>
        /// Child NameSysBlocks where [NameSysBlock].[IdFullCategoria] point to this entity (FK_NameSysBlock_FullСategory)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<NameSysBlock> NameSysBlocks { get; set; } // NameSysBlock.FK_NameSysBlock_FullСategory

        // Foreign keys

        /// <summary>
        /// Parent EquipmentModel pointed by [FullСategory].([IdEquipmentModel]) (FK_FullСategory_EquipmentModel)
        /// </summary>
        public virtual EquipmentModel EquipmentModel { get; set; } // FK_FullСategory_EquipmentModel

        /// <summary>
        /// Parent EquipmentType pointed by [FullСategory].([IdEquipmentType]) (FK_FullСategory_EquipmentType)
        /// </summary>
        public virtual EquipmentType EquipmentType { get; set; } // FK_FullСategory_EquipmentType

        /// <summary>
        /// Parent Producer pointed by [FullСategory].([IdProducer]) (FK_FullСategory_Producer)
        /// </summary>
        public virtual Producer Producer { get; set; } // FK_FullСategory_Producer

        public FullСategory()
        {
            IsSignOfRelevance = true;
            DateCreate = System.DateTime.Now;
            FullModels = new System.Collections.Generic.List<FullModel>();
            ModelBlockPowers = new System.Collections.Generic.List<ModelBlockPower>();
            ModelOthers = new System.Collections.Generic.List<ModelOther>();
            ModelSeverEquipments = new System.Collections.Generic.List<ModelSeverEquipment>();
            ModelSwithes = new System.Collections.Generic.List<ModelSwithe>();
            NameMonitors = new System.Collections.Generic.List<NameMonitor>();
            NameSysBlocks = new System.Collections.Generic.List<NameSysBlock>();
        }
    }

    // History
    ///<summary>
    /// Ведение истории
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class History
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// GUID записи
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string NameModelClass { get; set; } // NameModelClass (length: 512)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Старые отслеживаемые данные
        ///</summary>
        public string OldModelColums { get; set; } // OldModelColums (length: 1024)

        ///<summary>
        /// Новые внесенные данные
        ///</summary>
        public string NewModelColums { get; set; } // NewModelColums (length: 1024)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public History()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // HistoryLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class HistoryLog
    {
        public int? IdModel { get; set; } // IdModel
        public string NameUser { get; set; } // NameUser (Primary key) (length: 256)
        public string NameModelClass { get; set; } // NameModelClass (length: 512)
        public string NameModel { get; set; } // NameModel (length: 256)
        public string OldModelColums { get; set; } // OldModelColums (length: 1024)
        public string NewModelColums { get; set; } // NewModelColums (length: 1024)
        public string ZavNumber { get; set; } // ZavNumber (length: 128)
        public string InventarNumber { get; set; } // InventarNumber (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate
    }

    // InfoColumn
    ///<summary>
    /// Описательная часть колонок (Не трогать)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoColumn
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун записи о таблице
        ///</summary>
        public int IdTable { get; set; } // IdTable (Primary key)

        ///<summary>
        /// Наименование колонки
        ///</summary>
        public string NameColumn { get; set; } // NameColumn (length: 64)

        ///<summary>
        /// Информация о колонке
        ///</summary>
        public string InfoColumn_ { get; set; } // InfoColumn (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent InfoTable pointed by [InfoColumn].([IdTable]) (FK_InfoColumn_InfoTable)
        /// </summary>
        public virtual InfoTable InfoTable { get; set; } // FK_InfoColumn_InfoTable

        public InfoColumn()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoLogic
    ///<summary>
    /// Техническая таблица взаимодействие с выборками по Id (Не трогать)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoLogic
    {

        ///<summary>
        /// Ун записи (интерфейса)
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Информация о процедуре
        ///</summary>
        public string InfoProcedure { get; set; } // InfoProcedure (length: 64)

        ///<summary>
        /// Параметры процедуры
        ///</summary>
        public string ParamProcedure { get; set; } // ParamProcedure (length: 64)

        ///<summary>
        /// Наименование процедуры
        ///</summary>
        public string NameProcedure { get; set; } // NameProcedure (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public InfoLogic()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoTable
    ///<summary>
    /// Описательная часть таблиц (Не трогать)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTable
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdTable { get; set; } // IdTable (Primary key)

        ///<summary>
        /// Наименование таблицы
        ///</summary>
        public string NameTable { get; set; } // NameTable (length: 64)

        ///<summary>
        /// Информация о таблице
        ///</summary>
        public string InfoTable_ { get; set; } // InfoTable (length: 256)

        ///<summary>
        /// Участвует ли таблица в удалении всех данных
        ///</summary>
        public bool IsDeleteDataStartNew { get; set; } // IsDeleteDataStartNew

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child InfoColumns where [InfoColumn].[IdTable] point to this entity (FK_InfoColumn_InfoTable)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoColumn> InfoColumns { get; set; } // InfoColumn.FK_InfoColumn_InfoTable

        public InfoTable()
        {
            IsDeleteDataStartNew = false;
            DataCreate = System.DateTime.Now;
            InfoColumns = new System.Collections.Generic.List<InfoColumn>();
        }
    }

    // InfoView
    ///<summary>
    /// Информация о view отражение на сайте (Не трогать)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoView
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Наименование View
        ///</summary>
        public string NameView { get; set; } // NameView (length: 64)

        ///<summary>
        /// Наименование колонок view
        ///</summary>
        public string NameViewColumns { get; set; } // NameViewColumns (length: 64)

        ///<summary>
        /// Информация о колонках view
        ///</summary>
        public string InfoColumn { get; set; } // InfoColumn (length: 256)

        ///<summary>
        /// Формат данных колонки
        ///</summary>
        public string FormatView { get; set; } // FormatView (length: 16)

        ///<summary>
        /// Отражение данных на сайте 1(Да)/0(Нет)
        ///</summary>
        public bool IsVisible { get; set; } // IsVisible

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime DataCreate { get; set; } // DataCreate

        public InfoView()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InventarNotHostName
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InventarNotHostName
    {
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)
        public string NameUsers { get; set; } // NameUsers (length: 256)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string Invent { get; set; } // Invent (length: 4)
        public string Name { get; set; } // Name (length: 4)
        public string Coment { get; set; } // Coment (length: 254)
        public string NameStatus { get; set; } // NameStatus (length: 64)
    }

    // JournalAis3
    ///<summary>
    /// Журнал введение заявок открытия доступа на АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class JournalAis3
    {

        ///<summary>
        /// Ун заявки журнала
        ///</summary>
        public int IdJournal { get; set; } // IdJournal (Primary key)

        ///<summary>
        /// Ун задачи (Отзыв\Назначение)
        ///</summary>
        public int IdTask { get; set; } // IdTask

        ///<summary>
        /// Ун ресурса
        ///</summary>
        public int IdResource { get; set; } // IdResource

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Краткое наименование задачи
        ///</summary>
        public string NameTarget { get; set; } // NameTarget (length: 512)

        ///<summary>
        /// Краткое наименование пользователей в заявке
        ///</summary>
        public string TaskUser { get; set; } // TaskUser (length: 512)

        ///<summary>
        /// Дата назначение прав
        ///</summary>
        public System.DateTime DateTask { get; set; } // DateTask

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent ResourceIt pointed by [JournalAis3].([IdResource]) (FK_ResourceIt_JournalAis3)
        /// </summary>
        public virtual ResourceIt ResourceIt { get; set; } // FK_ResourceIt_JournalAis3

        /// <summary>
        /// Parent TaskAis3 pointed by [JournalAis3].([IdTask]) (FK_TaskAis3_JournalAis3)
        /// </summary>
        public virtual TaskAis3 TaskAis3 { get; set; } // FK_TaskAis3_JournalAis3

        /// <summary>
        /// Parent User pointed by [JournalAis3].([IdUser]) (FK_Users_JournalAis3)
        /// </summary>
        public virtual User User { get; set; } // FK_Users_JournalAis3

        public JournalAis3()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Kabinet
    ///<summary>
    /// Кабинеты
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Kabinet
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdNumberKabinet { get; set; } // IdNumberKabinet (Primary key)

        ///<summary>
        /// Номер кабинета
        ///</summary>
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdNumberKabinet] point to this entity (FK_BlockPower_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Kabinet
        /// <summary>
        /// Child Mfus where [Mfu].[IdNumberKabinet] point to this entity (FK_Mfu_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Kabinet
        /// <summary>
        /// Child Monitors where [Monitors].[IdNumberKabinet] point to this entity (FK_Monitors_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Kabinet
        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdNumberKabinet] point to this entity (FK_OtherAll_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_Kabinet
        /// <summary>
        /// Child Printers where [Printer].[IdNumberKabinet] point to this entity (FK_Printer_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Kabinet
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdNumberKabinet] point to this entity (FK_ScanerAndCamer_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Kabinet
        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdNumberKabinet] point to this entity (FK_ServerEquipment_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_Kabinet
        /// <summary>
        /// Child Swithes where [Swithes].[IdNumberKabinet] point to this entity (FK_Swithes_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Kabinet
        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdNumberKabinet] point to this entity (FK_SysBlock_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Kabinet
        /// <summary>
        /// Child Telephons where [Telephon].[IdNumberKabinet] point to this entity (FK_Telephon_Kabinet)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Kabinet

        public Kabinet()
        {
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
            Mfus = new System.Collections.Generic.List<Mfu>();
            Monitors = new System.Collections.Generic.List<Monitor>();
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
            Printers = new System.Collections.Generic.List<Printer>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
            Swithes = new System.Collections.Generic.List<Swithe>();
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
            Telephons = new System.Collections.Generic.List<Telephon>();
        }
    }

    // LogicaSelect
    ///<summary>
    /// Логика взаимодействия с InfoLogic выборки процедуры (Не трогать)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class LogicaSelect
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Информация о выборке
        ///</summary>
        public string SelectInfo { get; set; } // SelectInfo (length: 512)

        ///<summary>
        /// Наименование Dll
        ///</summary>
        public string NameDll { get; set; } // NameDll (length: 128)

        ///<summary>
        /// Наименование класса для поиска Dll
        ///</summary>
        public string FindNameSpace { get; set; } // FindNameSpace (length: 512)

        ///<summary>
        /// Результат выборки
        ///</summary>
        public bool? IsResultXml { get; set; } // IsResultXml

        ///<summary>
        /// Наименование листа xlsx
        ///</summary>
        public string NameReportList { get; set; } // NameReportList (length: 128)

        ///<summary>
        /// Наименование файла xlsx
        ///</summary>
        public string NameReportFile { get; set; } // NameReportFile (length: 128)

        ///<summary>
        /// Параметры для запроса
        ///</summary>
        public string SelectedParametr { get; set; } // SelectedParametr

        ///<summary>
        /// Выборка или процедура
        ///</summary>
        public string SelectUser { get; set; } // SelectUser

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public LogicaSelect()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // MailGroup
    ///<summary>
    /// Почтовые группы POP\SMTP
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailGroup
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdGroupMail { get; set; } // IdGroupMail (Primary key)

        ///<summary>
        /// Номер группы от 1 до 99
        ///</summary>
        public int IdOtdelNumber { get; set; } // IdOtdelNumber

        ///<summary>
        /// Наименование группы
        ///</summary>
        public string NameGroup { get; set; } // NameGroup (length: 512)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child MailIdentifiers where [MailIdentifier].[IdGroupMail] point to this entity (FK_MailIdentifier_MailGroup)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<MailIdentifier> MailIdentifiers { get; set; } // MailIdentifier.FK_MailIdentifier_MailGroup

        public MailGroup()
        {
            DateCreate = System.DateTime.Now;
            MailIdentifiers = new System.Collections.Generic.List<MailIdentifier>();
        }
    }

    // MailIdentifier
    ///<summary>
    /// Идентификаторы пользователей для POP\SMTP
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailIdentifier
    {

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int IdUser { get; set; } // IdUser (Primary key)

        ///<summary>
        /// Ун группы
        ///</summary>
        public int? IdGroupMail { get; set; } // IdGroupMail

        ///<summary>
        /// Идентификатор группы 5 цифр
        ///</summary>
        public string IdentifierUser { get; set; } // IdentifierUser (length: 32)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent MailGroup pointed by [MailIdentifier].([IdGroupMail]) (FK_MailIdentifier_MailGroup)
        /// </summary>
        public virtual MailGroup MailGroup { get; set; } // FK_MailIdentifier_MailGroup

        /// <summary>
        /// Parent User pointed by [MailIdentifier].([IdUser]) (FK_MailIdentifier_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_MailIdentifier_Users

        public MailIdentifier()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // MailIn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailIn
    {
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (Primary key) (length: 512)
        public string MailAdressSend { get; set; } // MailAdressSend (length: 256)
        public string MailAdress { get; set; } // MailAdress (Primary key) (length: 256)
        public string SubjectMail { get; set; } // SubjectMail (length: 512)
        public string IsFile { get; set; } // IsFile (Primary key) (length: 20)
        public System.DateTime? DateInputServer { get; set; } // DateInputServer
    }

    // MailInView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailInView
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (Primary key) (length: 512)
        public string MailAdressSend { get; set; } // MailAdressSend (length: 256)
        public string MailAdress { get; set; } // MailAdress (Primary key) (length: 256)
        public string SubjectMail { get; set; } // SubjectMail (length: 512)
        public string IsFile { get; set; } // IsFile (Primary key) (length: 20)
        public System.DateTime? DateInputServer { get; set; } // DateInputServer
    }

    // MailLotusOutlookIn
    ///<summary>
    /// Входящая почта технических ящиков POP\SMTP
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailLotusOutlookIn
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун письма
        ///</summary>
        public string IdMail { get; set; } // IdMail (length: 512)

        ///<summary>
        /// Почта заступления кому письма
        ///</summary>
        public string MailAdressSend { get; set; } // MailAdressSend (length: 256)

        ///<summary>
        /// Почта отправителя от кого письма
        ///</summary>
        public string MailAdress { get; set; } // MailAdress (length: 256)

        ///<summary>
        /// Тема письма
        ///</summary>
        public string SubjectMail { get; set; } // SubjectMail (length: 512)

        ///<summary>
        /// Описательная часть
        ///</summary>
        public string Body { get; set; } // Body

        ///<summary>
        /// Полный путь к файлу
        ///</summary>
        public string FullPathFile { get; set; } // FullPathFile (length: 256)

        ///<summary>
        /// Наименование файла вложения zip
        ///</summary>
        public string NameFile { get; set; } // NameFile (length: 256)

        ///<summary>
        /// Файл вложения в Base64 (не сжат)
        ///</summary>
        public byte[] FileMail { get; set; } // FileMail (length: 2147483647)

        ///<summary>
        /// Дата заступления письма
        ///</summary>
        public System.DateTime? DateInputServer { get; set; } // DateInputServer

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public MailLotusOutlookIn()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // MailLotusOutlookOut
    ///<summary>
    /// Исходящая почта с Lous на технический ящик POP\SMTP
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailLotusOutlookOut
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун письма
        ///</summary>
        public string IdMail { get; set; } // IdMail (length: 512)

        ///<summary>
        /// Кто отправлял
        ///</summary>
        public string MailAdressIn { get; set; } // MailAdressIn (length: 256)

        ///<summary>
        /// Кому отправляли
        ///</summary>
        public string MailAdressOut { get; set; } // MailAdressOut (length: 256)

        ///<summary>
        /// Тема письма
        ///</summary>
        public string SubjectMail { get; set; } // SubjectMail (length: 512)

        ///<summary>
        /// Описательная часть
        ///</summary>
        public string Body { get; set; } // Body

        ///<summary>
        /// Полный путь к файлу
        ///</summary>
        public string FullPathListFile { get; set; } // FullPathListFile

        ///<summary>
        /// Наименование файла вложения zip
        ///</summary>
        public string NameFileZip { get; set; } // NameFileZip (length: 256)

        ///<summary>
        /// Файл вложения в Base64 (не сжат)
        ///</summary>
        public byte[] FileMailZip { get; set; } // FileMailZip (length: 2147483647)

        ///<summary>
        /// Информация об успешности операции
        ///</summary>
        public string ErrorMail { get; set; } // ErrorMail (length: 512)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public MailLotusOutlookOut()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // MailOut
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailOut
    {
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (Primary key) (length: 512)
        public string MailAdressIn { get; set; } // MailAdressIn (length: 256)
        public string MailAdressOut { get; set; } // MailAdressOut (Primary key) (length: 256)
        public string SubjectMail { get; set; } // SubjectMail (length: 512)
        public string IsFile { get; set; } // IsFile (Primary key) (length: 20)
        public string ErrorMail { get; set; } // ErrorMail (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // MailOutView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailOutView
    {
        public string LogicsButton { get; set; } // LogicsButton (Primary key) (length: 6)
        public int Id { get; set; } // Id (Primary key)
        public string IdMail { get; set; } // IdMail (Primary key) (length: 512)
        public string MailAdressIn { get; set; } // MailAdressIn (length: 256)
        public string MailAdressOut { get; set; } // MailAdressOut (Primary key) (length: 256)
        public string SubjectMail { get; set; } // SubjectMail (length: 512)
        public string IsFile { get; set; } // IsFile (Primary key) (length: 20)
        public string ErrorMail { get; set; } // ErrorMail (length: 512)
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // ManufacturerSeverEquipment
    ///<summary>
    /// Производители серверов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ManufacturerSeverEquipment
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdManufacturerSeverEquipment { get; set; } // IdManufacturerSeverEquipment (Primary key)

        ///<summary>
        /// Производитель сервера
        ///</summary>
        public string NameManufacturer { get; set; } // NameManufacturer (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdManufacturerSeverEquipment] point to this entity (FK_ServerEquipment_ManufacturerSeverEquipment)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_ManufacturerSeverEquipment

        public ManufacturerSeverEquipment()
        {
            DataCreate = System.DateTime.Now;
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
        }
    }

    // Mfu
    ///<summary>
    /// МФУ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Mfu
    {

        ///<summary>
        /// Ун записи об МФУ
        ///</summary>
        public int IdMfu { get; set; } // IdMfu (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Имя МФУ
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Заводской номер
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)

        ///<summary>
        /// Ip адрес
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)

        ///<summary>
        /// Ун записи о CopySave
        ///</summary>
        public int? IdCopySave { get; set; } // IdCopySave

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent CopySave pointed by [Mfu].([IdCopySave]) (FK_Mfu_CopySave)
        /// </summary>
        public virtual CopySave CopySave { get; set; } // FK_Mfu_CopySave

        /// <summary>
        /// Parent FullModel pointed by [Mfu].([IdModel]) (FK_Mfu_FullModel)
        /// </summary>
        public virtual FullModel FullModel { get; set; } // FK_Mfu_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [Mfu].([IdProizvoditel]) (FK_Mfu_FullProizvoditel)
        /// </summary>
        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_Mfu_FullProizvoditel

        /// <summary>
        /// Parent Kabinet pointed by [Mfu].([IdNumberKabinet]) (FK_Mfu_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_Mfu_Kabinet

        /// <summary>
        /// Parent Statusing pointed by [Mfu].([IdStatus]) (FK_Mfu_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Mfu_Statusing

        /// <summary>
        /// Parent Supply pointed by [Mfu].([IdSupply]) (FK_Mfu_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Mfu_Supply

        /// <summary>
        /// Parent User pointed by [Mfu].([IdUser]) (FK_Mfu_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Mfu_Users

        public Mfu()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // MfuAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MfuAndEpo
    {
        public string Пользователь { get; set; } // Пользователь (length: 256)
        public string Модельинвентаризации { get; set; } // Модель инвентаризации (length: 256)
        public int IDвЭПО { get; set; } // ID в ЭПО (Primary key)
        public string СерийныйномервБД { get; set; } // Серийный номер в БД (length: 128)
        public string СерийныйномервЭПО { get; set; } // Серийный номер в ЭПО (Primary key) (length: 64)
        public int СерийныйномернесоответствиеБДЭПО { get; set; } // Серийный номер несоответствие БД ЭПО (Primary key)
        public string ИнвентарныйномервБД { get; set; } // Инвентарный номер в БД (length: 128)
        public string ИнвентарныйномервЭПО { get; set; } // Инвентарный номер в ЭПО (length: 64)
        public int ИнвентарныйномернесоответствиеБДЭПО { get; set; } // Инвентарный номер несоответствие БД ЭПО (Primary key)
        public string ИмявБД { get; set; } // Имя в БД (length: 128)
        public string ИмявЭПО { get; set; } // Имя в ЭПО (length: 128)
        public int ИмянесоответствиеБДЭПО { get; set; } // Имя несоответствие БД ЭПО (Primary key)
        public string КомнатавБД { get; set; } // Комната в БД (length: 5)
        public string КомнатавЭПО { get; set; } // Комната в ЭПО (length: 64)
        public int КомнатанесоответствиеБДЭПО { get; set; } // Комната несоответствие БД ЭПО (Primary key)
    }

    // ModelBlockPower
    ///<summary>
    /// Модель ИБП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelBlockPower
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelBP { get; set; } // IdModelBP (Primary key)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdModelBP] point to this entity (FK_BlockPower_ModelBlockPower)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_ModelBlockPower

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [ModelBlockPower].([IdFullCategoria]) (FK_ModelBlockPower_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_ModelBlockPower_FullСategory

        public ModelBlockPower()
        {
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
        }
    }

    // ModelDocumentType
    ///<summary>
    /// Тип оборудования АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelDocumentType
    {

        ///<summary>
        /// Ун документа
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// КОД СОУН
        ///</summary>
        public int Soun { get; set; } // Soun

        ///<summary>
        /// Тип документа
        ///</summary>
        public int DocumentType { get; set; } // DocumentType

        ///<summary>
        /// Вид оборудования/ПО
        ///</summary>
        public string KindEquipmentName { get; set; } // KindEquipmentName (length: 512)

        ///<summary>
        /// Атрибут ТРУ (Тип оборудования)
        ///</summary>
        public string CategoriesTruName { get; set; } // CategoriesTruName (length: 512)

        ///<summary>
        /// Номер документа
        ///</summary>
        public string Number { get; set; } // Number (length: 128)

        ///<summary>
        /// Автор документа
        ///</summary>
        public string Author { get; set; } // Author (length: 256)

        ///<summary>
        /// Атрибут удаления
        ///</summary>
        public bool CanDelete { get; set; } // CanDelete

        ///<summary>
        /// Наименование учреждения
        ///</summary>
        public string AgencyName { get; set; } // AgencyName (length: 512)

        ///<summary>
        /// Дата документа
        ///</summary>
        public System.DateTime CreateDate { get; set; } // CreateDate

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdEpoDocument] point to this entity (FK_EpoDocument_ModelDocumentType)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_ModelDocumentType

        public ModelDocumentType()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
        }
    }

    // ModelOtdels
    ///<summary>
    /// Все отделы с СТП для заявок с AD
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelOtdel
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Guid (Параметр отдела)
        ///</summary>
        public string GuidOtdel { get; set; } // GuidOtdel (length: 124)

        ///<summary>
        /// Наименование отдела
        ///</summary>
        public string NameOtdel { get; set; } // NameOtdel (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public ModelOtdel()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ModelOther
    ///<summary>
    /// Модели для таблиц с Разным
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelOther
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelOther { get; set; } // IdModelOther (Primary key)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdModelOther] point to this entity (FK_OtherAll_ModelOther)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_ModelOther

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [ModelOther].([IdFullCategoria]) (FK_ModelOther_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_ModelOther_FullСategory

        public ModelOther()
        {
            DataCreate = System.DateTime.Now;
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
        }
    }

    // ModelPosition
    ///<summary>
    /// Все должностя с СТП для заявок с AD
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelPosition
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Guid (Параметр должности)
        ///</summary>
        public string GuidPosition { get; set; } // GuidPosition (length: 124)

        ///<summary>
        /// Наименование должности
        ///</summary>
        public string NamePosition { get; set; } // NamePosition (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public ModelPosition()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ModelSeverEquipment
    ///<summary>
    /// Модели для серверного оборудования
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelSeverEquipment
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelSeverEquipment { get; set; } // IdModelSeverEquipment (Primary key)

        ///<summary>
        /// Наименование модели сервера
        ///</summary>
        public string NameModel { get; set; } // NameModel (length: 256)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdModelSeverEquipment] point to this entity (FK_ServerEquipment_ModelSeverEquipment)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_ModelSeverEquipment

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [ModelSeverEquipment].([IdFullCategoria]) (FK_ModelSeverEquipment_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_ModelSeverEquipment_FullСategory

        public ModelSeverEquipment()
        {
            DataCreate = System.DateTime.Now;
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
        }
    }

    // ModelSwithes
    ///<summary>
    /// Модели коммутаторов и свичей
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelSwithe
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelSwithes { get; set; } // IdModelSwithes (Primary key)

        ///<summary>
        /// Наименование модели
        ///</summary>
        public string NameModel { get; set; } // NameModel (length: 128)

        ///<summary>
        /// Колличество портов
        ///</summary>
        public string CountPort { get; set; } // CountPort (length: 128)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Swithes where [Swithes].[IdModelSwithes] point to this entity (FK_Swithes_ModelSwithes)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_ModelSwithes

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [ModelSwithes].([IdFullCategoria]) (FK_ModelSwithes_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_ModelSwithes_FullСategory

        public ModelSwithe()
        {
            DataCreate = System.DateTime.Now;
            Swithes = new System.Collections.Generic.List<Swithe>();
        }
    }

    // Monitors
    ///<summary>
    /// Мониторы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Monitor
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdMonitor { get; set; } // IdMonitor (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун модели монитора
        ///</summary>
        public int? IdModelMonitor { get; set; } // IdModelMonitor

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Инвентарный номер монитора
        ///</summary>
        public string InventarNumMonitor { get; set; } // InventarNumMonitor (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [Monitors].([IdNumberKabinet]) (FK_Monitors_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_Monitors_Kabinet

        /// <summary>
        /// Parent NameMonitor pointed by [Monitors].([IdModelMonitor]) (FK_Monitors_NameMonitor)
        /// </summary>
        public virtual NameMonitor NameMonitor { get; set; } // FK_Monitors_NameMonitor

        /// <summary>
        /// Parent Statusing pointed by [Monitors].([IdStatus]) (FK_Statusing_Monitors)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Statusing_Monitors

        /// <summary>
        /// Parent Supply pointed by [Monitors].([IdSupply]) (FK_Monitors_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Monitors_Supply

        /// <summary>
        /// Parent User pointed by [Monitors].([IdUser]) (FK_Monitors_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Monitors_Users

        public Monitor()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // Namedocument
    ///<summary>
    /// Справочник наименований документов для формирования
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Namedocument
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdNamedocument { get; set; } // IdNamedocument (Primary key)

        ///<summary>
        /// Наименование документа
        ///</summary>
        public string NameDocument { get; set; } // NameDocument (length: 128)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child BookAccountings where [BookAccounting].[IdNameBook] point to this entity (FK_BookAccounting_Namedocument)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BookAccounting> BookAccountings { get; set; } // BookAccounting.FK_BookAccounting_Namedocument
        /// <summary>
        /// Child Documents where [Document].[IdNamedocument] point to this entity (FK_Document_Namedocument)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Document> Documents { get; set; } // Document.FK_Document_Namedocument

        public Namedocument()
        {
            DateCreate = System.DateTime.Now;
            BookAccountings = new System.Collections.Generic.List<BookAccounting>();
            Documents = new System.Collections.Generic.List<Document>();
        }
    }

    // NameHostIpAdress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameHostIpAdress
    {
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)
        public string UserName { get; set; } // UserName (length: 256)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string NameComputer { get; set; } // NameComputer (length: 128)
        public string IpAdress { get; set; } // IpAdress (length: 128)
        public string NameHost { get; set; } // NameHost (length: 256)
        public string IpAdresDomain { get; set; } // IpAdresDomain (length: 256)
        public string Coment { get; set; } // Coment (length: 254)
        public string Name { get; set; } // Name (length: 64)
    }

    // NameMonitor
    ///<summary>
    /// Модели мониторов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameMonitor
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelMonitor { get; set; } // IdModelMonitor (Primary key)

        ///<summary>
        /// Наименование производителя
        ///</summary>
        public string NameManufacturer { get; set; } // NameManufacturer (length: 128)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Monitors where [Monitors].[IdModelMonitor] point to this entity (FK_Monitors_NameMonitor)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_NameMonitor

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [NameMonitor].([IdFullCategoria]) (FK_NameMonitor_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_NameMonitor_FullСategory

        public NameMonitor()
        {
            DataCreate = System.DateTime.Now;
            Monitors = new System.Collections.Generic.List<Monitor>();
        }
    }

    // NameSysBlock
    ///<summary>
    /// Наименование (Системного блока, Мануфактуры, Производителя)
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameSysBlock
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModelSysBlock { get; set; } // IdModelSysBlock (Primary key)

        ///<summary>
        /// Наименование компьютера
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)

        ///<summary>
        /// Ун категории оборудования (Тип, производитель, Модель) АКСИОК
        ///</summary>
        public int? IdFullCategoria { get; set; } // IdFullCategoria

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdModelSysBlock] point to this entity (FK_SysBlock_NameSysBlock)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_NameSysBlock

        // Foreign keys

        /// <summary>
        /// Parent FullСategory pointed by [NameSysBlock].([IdFullCategoria]) (FK_NameSysBlock_FullСategory)
        /// </summary>
        public virtual FullСategory FullСategory { get; set; } // FK_NameSysBlock_FullСategory

        public NameSysBlock()
        {
            DataCreate = System.DateTime.Now;
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
        }
    }

    // Organization
    ///<summary>
    /// Глобальные настройки организации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Organization
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Номер ИФНС
        ///</summary>
        public int NumberIfns { get; set; } // NumberIfns

        ///<summary>
        /// Код налогового органа
        ///</summary>
        public string CodeIfns { get; set; } // CodeIfns (length: 12)

        ///<summary>
        /// Адрес организации
        ///</summary>
        public string AddressOrganization { get; set; } // AddressOrganization (length: 1024)

        ///<summary>
        /// Наименование организации
        ///</summary>
        public string NameOrganization { get; set; } // NameOrganization (length: 512)

        ///<summary>
        /// Полное наименование организации
        ///</summary>
        public string NameFullOrganization { get; set; } // NameFullOrganization (length: 512)

        ///<summary>
        /// Руководитель организации
        ///</summary>
        public string NameFaceLeader { get; set; } // NameFaceLeader (length: 512)

        ///<summary>
        /// Именительный падеж наименование организации
        ///</summary>
        public string InameOrganization { get; set; } // InameOrganization (length: 512)

        ///<summary>
        /// Родительный падеж наименование организации
        ///</summary>
        public string RnameOrganization { get; set; } // RnameOrganization (length: 512)

        ///<summary>
        /// Дательный падеж наименование организации
        ///</summary>
        public string DnameOrganization { get; set; } // DnameOrganization (length: 512)

        ///<summary>
        /// Винительный падеж наименование организации
        ///</summary>
        public string VnameOrganization { get; set; } // VnameOrganization (length: 512)

        ///<summary>
        /// Творительный падеж наименование организации
        ///</summary>
        public string TnameOrganization { get; set; } // TnameOrganization (length: 512)

        ///<summary>
        /// Предложный падеж наименование организации
        ///</summary>
        public string PnameOrganization { get; set; } // PnameOrganization (length: 512)

        ///<summary>
        /// Материально ответственное лицо
        ///</summary>
        public string NameFace { get; set; } // NameFace (length: 512)

        ///<summary>
        /// Ответственный департамент
        ///</summary>
        public string NameDepartament { get; set; } // NameDepartament (length: 512)

        ///<summary>
        /// Комната ответственного
        ///</summary>
        public string Room { get; set; } // Room (length: 32)

        ///<summary>
        /// Почта организации
        ///</summary>
        public string Mail { get; set; } // Mail (length: 128)

        ///<summary>
        /// 5-значный код объекта
        ///</summary>
        public string CodeObject { get; set; } // CodeObject (length: 12)

        ///<summary>
        /// Сценарий входа
        ///</summary>
        public string ScenarioEntrance { get; set; } // ScenarioEntrance (length: 32)

        ///<summary>
        /// Ун из Users ответственного кадровой службы
        ///</summary>
        public int IdUserDks { get; set; } // IdUserDks

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        public Organization()
        {
            NumberIfns = 0;
            IdUserDks = 0;
            DataCreate = System.DateTime.Now;
        }
    }

    // Otdel
    ///<summary>
    /// Отделы ДКС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Otdel
    {

        ///<summary>
        /// Ун записи об отделе
        ///</summary>
        public int IdOtdel { get; set; } // IdOtdel (Primary key)

        ///<summary>
        /// Ун записи пльзователя о начальнике
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Код отдела
        ///</summary>
        public string CodeOtdel { get; set; } // CodeOtdel (length: 128)

        ///<summary>
        /// Наименование отдела
        ///</summary>
        public string NameOtdel { get; set; } // NameOtdel (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) Otdel pointed by [DepartmentRegulations].[IdOtdel] (FK_Otdel_DepartmentRegulations)
        /// </summary>
        [JsonIgnore]
        public virtual DepartmentRegulation DepartmentRegulation { get; set; } // DepartmentRegulations.FK_Otdel_DepartmentRegulations
        /// <summary>
        /// Parent (One-to-One) Otdel pointed by [OtdelPadeg].[IdOtdel] (FK_Otdel_OtdelPadeg)
        /// </summary>
        [JsonIgnore]
        public virtual OtdelPadeg OtdelPadeg { get; set; } // OtdelPadeg.FK_Otdel_OtdelPadeg
        /// <summary>
        /// Child ResourceIts where [ResourceIt].[IdOtdel] point to this entity (FK_Otdel_ResourceIt)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ResourceIt> ResourceIts { get; set; } // ResourceIt.FK_Otdel_ResourceIt
        /// <summary>
        /// Child Users where [Users].[IdOtdel] point to this entity (FK_Otdel_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Otdel_Users

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [Otdel].([IdUser]) (FK_Users_Otdel)
        /// </summary>
        public virtual User User { get; set; } // FK_Users_Otdel

        public Otdel()
        {
            DataCreate = System.DateTime.Now;
            ResourceIts = new System.Collections.Generic.List<ResourceIt>();
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // OtdelPadeg
    ///<summary>
    /// Таблица с падежами отделов
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtdelPadeg
    {

        ///<summary>
        /// Ун записи об отделе
        ///</summary>
        public int IdOtdel { get; set; } // IdOtdel (Primary key)

        ///<summary>
        /// Именительный падеж наименование отдела
        ///</summary>
        public string InameOtdel { get; set; } // InameOtdel (length: 256)

        ///<summary>
        /// Родительный падеж наименование отдела
        ///</summary>
        public string RnameOtdel { get; set; } // RnameOtdel (length: 256)

        ///<summary>
        /// Дательный падеж наименование отдела
        ///</summary>
        public string DnameOtdel { get; set; } // DnameOtdel (length: 256)

        ///<summary>
        /// Винительный падеж наименование отдела
        ///</summary>
        public string VnameOtdel { get; set; } // VnameOtdel (length: 256)

        ///<summary>
        /// Творительный падеж наименование отдела
        ///</summary>
        public string TnameOtdel { get; set; } // TnameOtdel (length: 256)

        ///<summary>
        /// Предложный падеж наименование отдела
        ///</summary>
        public string PnameOtdel { get; set; } // PnameOtdel (length: 256)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Otdel pointed by [OtdelPadeg].([IdOtdel]) (FK_Otdel_OtdelPadeg)
        /// </summary>
        public virtual Otdel Otdel { get; set; } // FK_Otdel_OtdelPadeg

        public OtdelPadeg()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // OtherAll
    ///<summary>
    /// Категория разное что не попало под классификацию
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtherAll
    {

        ///<summary>
        /// Ун записи о разном
        ///</summary>
        public int IdOtherAll { get; set; } // IdOtherAll (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун типа оборудования
        ///</summary>
        public int? IdTypeOther { get; set; } // IdTypeOther

        ///<summary>
        /// Ун модели оборудования
        ///</summary>
        public int? IdModelOther { get; set; } // IdModelOther

        ///<summary>
        /// Ун производителя оборудования
        ///</summary>
        public int? IdProizvoditelOther { get; set; } // IdProizvoditelOther

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [OtherAll].([IdNumberKabinet]) (FK_OtherAll_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_OtherAll_Kabinet

        /// <summary>
        /// Parent ModelOther pointed by [OtherAll].([IdModelOther]) (FK_OtherAll_ModelOther)
        /// </summary>
        public virtual ModelOther ModelOther { get; set; } // FK_OtherAll_ModelOther

        /// <summary>
        /// Parent ProizvoditelOther pointed by [OtherAll].([IdProizvoditelOther]) (FK_OtherAll_ProizvoditelOther)
        /// </summary>
        public virtual ProizvoditelOther ProizvoditelOther { get; set; } // FK_OtherAll_ProizvoditelOther

        /// <summary>
        /// Parent Statusing pointed by [OtherAll].([IdStatus]) (FK_OtherAll_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_OtherAll_Statusing

        /// <summary>
        /// Parent Supply pointed by [OtherAll].([IdSupply]) (FK_OtherAll_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_OtherAll_Supply

        /// <summary>
        /// Parent TypeOther pointed by [OtherAll].([IdTypeOther]) (FK_OtherAll_TypeOther)
        /// </summary>
        public virtual TypeOther TypeOther { get; set; } // FK_OtherAll_TypeOther

        /// <summary>
        /// Parent User pointed by [OtherAll].([IdUser]) (FK_OtherAll_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_OtherAll_Users

        public OtherAll()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // ParameterAct
    ///<summary>
    /// Параметры акта по категориям
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ParameterAct
    {

        ///<summary>
        /// Ун записи о параметре
        ///</summary>
        public int IdParameter { get; set; } // IdParameter (Primary key)

        ///<summary>
        /// Ун записи о классе параметра
        ///</summary>
        public int? IdClassParameter { get; set; } // IdClassParameter

        ///<summary>
        /// Требуется подстановка параметра или нет 1(Да)/0(Нет)
        ///</summary>
        public bool IsExistParameterReplace { get; set; } // IsExistParameterReplace

        ///<summary>
        /// Параметр
        ///</summary>
        public string Parameter { get; set; } // Parameter (length: 512)

        ///<summary>
        /// Выбор значения для акта
        ///</summary>
        public string SelectParameter { get; set; } // SelectParameter

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child Acts where [Act].[IdParameter] point to this entity (FK_ParameterAct_Act)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Act> Acts { get; set; } // Act.FK_ParameterAct_Act

        // Foreign keys

        /// <summary>
        /// Parent ClassParameterTemplate pointed by [ParameterAct].([IdClassParameter]) (FK_ClassParameterTemplate_ParameterAct)
        /// </summary>
        public virtual ClassParameterTemplate ClassParameterTemplate { get; set; } // FK_ClassParameterTemplate_ParameterAct

        public ParameterAct()
        {
            Acts = new System.Collections.Generic.List<Act>();
        }
    }

    // ParametrSupport
    ///<summary>
    /// Параметры для СТП запроса на шагах создания заявки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ParametrSupport
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdParametr { get; set; } // IdParametr (Primary key)

        ///<summary>
        /// Наименование шага СТП
        ///</summary>
        public string NameStepSupport { get; set; } // NameStepSupport (length: 15)

        ///<summary>
        /// Описание (наименование) параметра
        ///</summary>
        public string HelpParameter { get; set; } // HelpParameter (length: 1024)

        ///<summary>
        /// Наименование GUID параметра
        ///</summary>
        public string NameGuidParametr { get; set; } // NameGuidParametr (length: 512)

        ///<summary>
        /// Параметр
        ///</summary>
        public string Parametr { get; set; } // Parametr (length: 512)

        ///<summary>
        /// Параметр шага 3 файл (Base64)
        ///</summary>
        public byte[] ParameterStep3 { get; set; } // ParameterStep3 (length: 2147483647)

        ///<summary>
        /// Тип параметра вводимый выбираемый
        ///</summary>
        public string TypeParametr { get; set; } // TypeParametr (length: 64)

        ///<summary>
        /// Обязательный для СТП или нет 1-(Обязательный)/0-(Не обязательный)
        ///</summary>
        public bool? IsImportant { get; set; } // IsImportant

        ///<summary>
        /// Описание типа параметра
        ///</summary>
        public string NameParametrType { get; set; } // NameParametrType (length: 64)

        ///<summary>
        /// Запрос на выбор параметра
        ///</summary>
        public string SelectParametr { get; set; } // SelectParametr

        ///<summary>
        /// Наименование шаблона параметра
        ///</summary>
        public string TemplateParametrType { get; set; } // TemplateParametrType (length: 512)

        ///<summary>
        /// Дата создания
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TemplateSupportAndParametrSupports where [TemplateSupportAndParametrSupport].[IdParametr] point to this entity (FK_TemplateSupportAndParametrSupport_ParametrSupport)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TemplateSupportAndParametrSupport> TemplateSupportAndParametrSupports { get; set; } // TemplateSupportAndParametrSupport.FK_TemplateSupportAndParametrSupport_ParametrSupport

        public ParametrSupport()
        {
            DateCreate = System.DateTime.Now;
            TemplateSupportAndParametrSupports = new System.Collections.Generic.List<TemplateSupportAndParametrSupport>();
        }
    }

    // PassportEquipment
    ///<summary>
    /// Таблица ЭПО
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PassportEquipment
    {

        ///<summary>
        /// ID ЭПО
        ///</summary>
        public int ID { get; set; } // ID (Primary key via unique index UQ__Passport__3214EC26298E887B)

        ///<summary>
        /// СОУН
        ///</summary>
        public int Soun { get; set; } // Soun

        ///<summary>
        /// Объект ФНС России
        ///</summary>
        public string MifnsObject { get; set; } // MifnsObject (length: 512)

        ///<summary>
        /// Код объекта
        ///</summary>
        public int CodeObject { get; set; } // CodeObject

        ///<summary>
        /// Вид оборудования
        ///</summary>
        public string ViewObject { get; set; } // ViewObject (length: 1024)

        ///<summary>
        /// Тип оборудования
        ///</summary>
        public string TypeObject { get; set; } // TypeObject (length: 1024)

        ///<summary>
        /// Производитель
        ///</summary>
        public string ManufacturerObject { get; set; } // ManufacturerObject (length: 512)

        ///<summary>
        /// Модель
        ///</summary>
        public string ModelObject { get; set; } // ModelObject (length: 512)

        ///<summary>
        /// Комплект
        ///</summary>
        public string SetObject { get; set; } // SetObject (length: 32)

        ///<summary>
        /// Кластер
        ///</summary>
        public string ClusterObject { get; set; } // ClusterObject (length: 32)

        ///<summary>
        /// СТО Текущий год - 1
        ///</summary>
        public string StoPrevious { get; set; } // StoPrevious (length: 32)

        ///<summary>
        /// СТО Текущий год
        ///</summary>
        public string StoCurrent { get; set; } // StoCurrent (length: 32)

        ///<summary>
        /// СТО
        ///</summary>
        public string Sto { get; set; } // Sto (length: 32)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerialNumber { get; set; } // SerialNumber (length: 64)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 64)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventoryNumber { get; set; } // InventoryNumber (length: 64)

        ///<summary>
        /// Сервисный номер 2017
        ///</summary>
        public string ServiceNumber2017 { get; set; } // ServiceNumber2017 (length: 64)

        ///<summary>
        /// Не на балансе
        ///</summary>
        public string IsNotBalansObject { get; set; } // IsNotBalansObject (length: 128)

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)

        ///<summary>
        /// Год выпуска
        ///</summary>
        public int YearOfIssue { get; set; } // YearOfIssue

        ///<summary>
        /// Гарантия
        ///</summary>
        public System.DateTime Guarantee { get; set; } // Guarantee

        ///<summary>
        /// Cтатус обслуживания
        ///</summary>
        public string ServiceStatus { get; set; } // ServiceStatus (length: 256)

        ///<summary>
        /// Контракт на поставку
        ///</summary>
        public string SupplyContract { get; set; } // SupplyContract (length: 1024)

        ///<summary>
        /// Контракт на СТО
        ///</summary>
        public string ContractSto { get; set; } // ContractSto (length: 1024)

        ///<summary>
        /// Кол-во лицензий внутренних абонентов SIP
        ///</summary>
        public int? CountOfLicensesSip { get; set; } // CountOfLicensesSip

        ///<summary>
        /// Номер
        ///</summary>
        public string Number { get; set; } // Number (length: 128)

        ///<summary>
        /// Комментарии
        ///</summary>
        public string Comment { get; set; } // Comment (length: 128)

        ///<summary>
        /// Модель в соответствии с накладной/поставкой
        ///</summary>
        public string ModelDeliveryNote { get; set; } // ModelDeliveryNote (length: 512)

        ///<summary>
        /// Фактическая версия ОС
        ///</summary>
        public string ActualOsVersion { get; set; } // ActualOsVersion (length: 128)

        ///<summary>
        /// Версия фактической ОС
        ///</summary>
        public string VersionOs { get; set; } // VersionOs (length: 128)

        ///<summary>
        /// Наименование органа ЗАГС
        ///</summary>
        public string NameZags { get; set; } // NameZags (length: 256)

        ///<summary>
        /// Адрес органа ЗАГС
        ///</summary>
        public string AdressZags { get; set; } // AdressZags (length: 256)

        ///<summary>
        /// Номер договора передачи
        ///</summary>
        public string TransferAgreementNumber { get; set; } // TransferAgreementNumber (length: 256)

        ///<summary>
        /// На балансе
        ///</summary>
        public string IsNotNullBalansObject { get; set; } // IsNotNullBalansObject (length: 128)

        ///<summary>
        /// Назначение
        ///</summary>
        public string Ippointment { get; set; } // Ippointment (length: 128)

        ///<summary>
        /// Тип использования
        ///</summary>
        public string TypeUse { get; set; } // TypeUse (length: 128)

        ///<summary>
        /// Среда виртуализации
        ///</summary>
        public string VirtualizationEnvironment { get; set; } // VirtualizationEnvironment (length: 128)

        ///<summary>
        /// Отдел
        ///</summary>
        public string Department { get; set; } // Department (length: 256)

        ///<summary>
        /// Участок (здание)
        ///</summary>
        public string Plot { get; set; } // Plot (length: 256)

        ///<summary>
        /// Расположение. Этаж
        ///</summary>
        public string LocationFloor { get; set; } // LocationFloor (length: 64)

        ///<summary>
        /// Расположение. Комната
        ///</summary>
        public string LocationRoom { get; set; } // LocationRoom (length: 64)

        ///<summary>
        /// Комната
        ///</summary>
        public string Room { get; set; } // Room (length: 64)

        ///<summary>
        /// Версия ПС
        ///</summary>
        public string VersionPs { get; set; } // VersionPs (length: 128)

        ///<summary>
        /// Cетевое имя (NetBIOS)
        ///</summary>
        public string NetworkName { get; set; } // NetworkName (length: 64)

        ///<summary>
        /// IP адрес
        ///</summary>
        public string IpAdrees { get; set; } // IpAdrees (length: 64)

        ///<summary>
        /// Дополнительные IP адреса
        ///</summary>
        public string AdditionalIpAdrees { get; set; } // AdditionalIpAdrees (length: 64)

        ///<summary>
        /// IP адрес в СТК
        ///</summary>
        public string IpAdreesStk { get; set; } // IpAdreesStk (length: 64)

        ///<summary>
        /// IP адрес в СТК (для объектов без МикроРТУ)
        ///</summary>
        public string IpAdreesStkMikro { get; set; } // IpAdreesStkMikro (length: 64)

        ///<summary>
        /// MAC-адрес
        ///</summary>
        public string MacAdrees { get; set; } // MacAdrees (length: 64)

        ///<summary>
        /// Количество процессоров
        ///</summary>
        public int? CountProcessor { get; set; } // CountProcessor

        ///<summary>
        /// Количество ядер
        ///</summary>
        public int? CountCores { get; set; } // CountCores

        ///<summary>
        /// Частота процессора, МГц
        ///</summary>
        public string Mhz { get; set; } // Mhz (length: 64)

        ///<summary>
        /// ОЗУ (тип)
        ///</summary>
        public string TypeMemory { get; set; } // TypeMemory (length: 64)

        ///<summary>
        /// ОЗУ (размер)
        ///</summary>
        public string SizeMemory { get; set; } // SizeMemory (length: 64)

        ///<summary>
        /// Тип процессора
        ///</summary>
        public string TypeProcessor { get; set; } // TypeProcessor (length: 64)

        ///<summary>
        /// CD/DVD
        ///</summary>
        public string CdDvd { get; set; } // CdDvd (length: 64)

        ///<summary>
        /// FDD
        ///</summary>
        public string Fdd { get; set; } // Fdd (length: 64)

        ///<summary>
        /// RAID
        ///</summary>
        public string Raid { get; set; } // Raid (length: 64)

        ///<summary>
        /// Общее дисковое пространство, Gb
        ///</summary>
        public string PublicMemory { get; set; } // PublicMemory (length: 64)

        ///<summary>
        /// Количество HDD
        ///</summary>
        public string CountHdd { get; set; } // CountHdd (length: 64)

        ///<summary>
        /// Объем жесткого диска
        ///</summary>
        public string VolumeHdd { get; set; } // VolumeHdd (length: 64)

        ///<summary>
        /// Тип жесткого диска
        ///</summary>
        public string TypeHdd { get; set; } // TypeHdd (length: 64)

        ///<summary>
        /// Кол-во плат
        ///</summary>
        public int? CountBoards { get; set; } // CountBoards

        ///<summary>
        /// Кол-во свободных платомест
        ///</summary>
        public int? CountFreeBoards { get; set; } // CountFreeBoards

        ///<summary>
        /// Сетевая карта
        ///</summary>
        public string NetworkCard { get; set; } // NetworkCard (length: 64)

        ///<summary>
        /// Скорость сетевой карты
        ///</summary>
        public string SpeedNetworkCard { get; set; } // SpeedNetworkCard (length: 64)

        ///<summary>
        /// Кол-во внутр абон аналог
        ///</summary>
        public int? CountSubscribersAnalog { get; set; } // CountSubscribersAnalog

        ///<summary>
        /// Кол-во внутр абон цифровых
        ///</summary>
        public int? CountSubscribersDigital { get; set; } // CountSubscribersDigital

        ///<summary>
        /// Инвентарный номер ПК, к которому подключен
        ///</summary>
        public string InventoryNumberPc { get; set; } // InventoryNumberPc (length: 64)

        ///<summary>
        /// Инвентарный номер ИБП, к которому подключен
        ///</summary>
        public string InventoryNumberIbp { get; set; } // InventoryNumberIbp (length: 64)

        ///<summary>
        /// Инвентарный номер монитора
        ///</summary>
        public string InventoryNumberMonitor { get; set; } // InventoryNumberMonitor (length: 64)

        ///<summary>
        /// Сервисный номер монитора
        ///</summary>
        public string ServiceNumberMonitor { get; set; } // ServiceNumberMonitor (length: 64)

        ///<summary>
        /// Монитор, марка
        ///</summary>
        public string ModelMonitor { get; set; } // ModelMonitor (length: 128)

        ///<summary>
        /// Тип монитора
        ///</summary>
        public string TypeMonitor { get; set; } // TypeMonitor (length: 128)

        ///<summary>
        /// Размер экрана
        ///</summary>
        public string SizeMonitor { get; set; } // SizeMonitor (length: 128)

        ///<summary>
        /// Максимальное разрешение
        ///</summary>
        public string MaxSizeMonitor { get; set; } // MaxSizeMonitor (length: 128)

        ///<summary>
        /// Тип аналогового подключения городской ввод
        ///</summary>
        public string TypeAnalog { get; set; } // TypeAnalog (length: 128)

        ///<summary>
        /// Тип цифрового подключения городской ввод
        ///</summary>
        public string TypeDigital { get; set; } // TypeDigital (length: 128)

        ///<summary>
        /// Численность администраторов УАТС
        ///</summary>
        public int? CountAdmin { get; set; } // CountAdmin

        ///<summary>
        /// Номер Ключа
        ///</summary>
        public string NumberKey { get; set; } // NumberKey (length: 128)

        ///<summary>
        /// Марка стримера
        ///</summary>
        public string MarkaStrim { get; set; } // MarkaStrim (length: 128)

        ///<summary>
        /// Маркировка картриджей стримера
        ///</summary>
        public string MarkaKardStrim { get; set; } // MarkaKardStrim (length: 128)

        ///<summary>
        /// Операционная система
        ///</summary>
        public string Os { get; set; } // Os (length: 128)

        ///<summary>
        /// Сервис пак
        ///</summary>
        public string ServicePack { get; set; } // ServicePack (length: 128)

        ///<summary>
        /// Офисный пакет
        ///</summary>
        public string OfficePack { get; set; } // OfficePack (length: 128)

        ///<summary>
        /// Фамилия И.О.
        ///</summary>
        public string Fio { get; set; } // Fio (length: 128)

        ///<summary>
        /// Ответственный
        ///</summary>
        public string MainFio { get; set; } // MainFio (length: 128)

        ///<summary>
        /// Описание
        ///</summary>
        public string Info { get; set; } // Info (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public PassportEquipment()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Position
    ///<summary>
    /// Должности ДКС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Position
    {

        ///<summary>
        /// Ун записи о должности
        ///</summary>
        public int IdPosition { get; set; } // IdPosition (Primary key)

        ///<summary>
        /// Наименование должности
        ///</summary>
        public string NamePosition { get; set; } // NamePosition (length: 256)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdPosition] point to this entity (FK_Users_Position)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Position

        public Position()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Printer
    ///<summary>
    /// Принтеры
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Printer
    {

        ///<summary>
        /// Ун записи о принтере
        ///</summary>
        public int IdPrinter { get; set; } // IdPrinter (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Имя Принтера
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Заводской номер
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Инвентарный номер принтера
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)

        ///<summary>
        /// Ip Адрес принтера
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent FullModel pointed by [Printer].([IdModel]) (FK_Printer_FullModel)
        /// </summary>
        public virtual FullModel FullModel { get; set; } // FK_Printer_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [Printer].([IdProizvoditel]) (FK_Printer_FullProizvoditel)
        /// </summary>
        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_Printer_FullProizvoditel

        /// <summary>
        /// Parent Kabinet pointed by [Printer].([IdNumberKabinet]) (FK_Printer_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_Printer_Kabinet

        /// <summary>
        /// Parent Statusing pointed by [Printer].([IdStatus]) (FK_Printer_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Printer_Statusing

        /// <summary>
        /// Parent Supply pointed by [Printer].([IdSupply]) (FK_Printer_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Printer_Supply

        /// <summary>
        /// Parent User pointed by [Printer].([IdUser]) (FK_Printer_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Printer_Users

        public Printer()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // PrinterAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PrinterAndEpo
    {
        public string Пользователь { get; set; } // Пользователь (length: 256)
        public string Модельинвентаризации { get; set; } // Модель инвентаризации (length: 256)
        public int IDвЭПО { get; set; } // ID в ЭПО (Primary key)
        public string СерийныйномервБД { get; set; } // Серийный номер в БД (length: 128)
        public string СерийныйномервЭПО { get; set; } // Серийный номер в ЭПО (Primary key) (length: 64)
        public int СерийныйномернесоответствиеБДЭПО { get; set; } // Серийный номер несоответствие БД ЭПО (Primary key)
        public string ИнвентарныйномервБД { get; set; } // Инвентарный номер в БД (length: 128)
        public string ИнвентарныйномервЭПО { get; set; } // Инвентарный номер в ЭПО (length: 64)
        public int ИнвентарныйномернесоответствиеБДЭПО { get; set; } // Инвентарный номер несоответствие БД ЭПО (Primary key)
        public string ИмявБД { get; set; } // Имя в БД (length: 128)
        public string ИмявЭПО { get; set; } // Имя в ЭПО (length: 128)
        public int ИмянесоответствиеБДЭПО { get; set; } // Имя несоответствие БД ЭПО (Primary key)
        public string КомнатавБД { get; set; } // Комната в БД (length: 5)
        public string КомнатавЭПО { get; set; } // Комната в ЭПО (length: 64)
        public int КомнатанесоответствиеБДЭПО { get; set; } // Комната несоответствие БД ЭПО (Primary key)
    }

    // Producer
    ///<summary>
    /// Производитель оборудования АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Producer
    {

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Код оборудования
        ///</summary>
        public string Code { get; set; } // Code (length: 10)

        ///<summary>
        /// Производитель
        ///</summary>
        public string Name { get; set; } // Name (length: 512)

        ///<summary>
        /// Дата начала
        ///</summary>
        public System.DateTime? StartDate { get; set; } // StartDate

        ///<summary>
        /// Дата окончания
        ///</summary>
        public System.DateTime? EndDate { get; set; } // EndDate

        // Reverse navigation

        /// <summary>
        /// Child EpoDocuments where [EpoDocument].[IdProducer] point to this entity (FK_EpoDocument_Producer)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<EpoDocument> EpoDocuments { get; set; } // EpoDocument.FK_EpoDocument_Producer
        /// <summary>
        /// Child FullСategory where [FullСategory].[IdProducer] point to this entity (FK_FullСategory_Producer)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<FullСategory> FullСategory { get; set; } // FullСategory.FK_FullСategory_Producer

        public Producer()
        {
            EpoDocuments = new System.Collections.Generic.List<EpoDocument>();
            FullСategory = new System.Collections.Generic.List<FullСategory>();
        }
    }

    // ProizvoditelBlockPower
    ///<summary>
    /// Производители ИБП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ProizvoditelBlockPower
    {

        ///<summary>
        /// Ун записи о производителе ИБП
        ///</summary>
        public int IdProizvoditelBP { get; set; } // IdProizvoditelBP (Primary key)

        ///<summary>
        /// Наименование производителя ИБП
        ///</summary>
        public string Name { get; set; } // Name (length: 512)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdProizvoditelBP] point to this entity (FK_BlockPower_ProizvoditelBlockPower)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_ProizvoditelBlockPower

        public ProizvoditelBlockPower()
        {
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
        }
    }

    // ProizvoditelOther
    ///<summary>
    /// Производители для таблиц с Разным
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ProizvoditelOther
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdProizvoditelOther { get; set; } // IdProizvoditelOther (Primary key)

        ///<summary>
        /// Наименование разных производителей
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdProizvoditelOther] point to this entity (FK_OtherAll_ProizvoditelOther)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_ProizvoditelOther

        public ProizvoditelOther()
        {
            DataCreate = System.DateTime.Now;
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
        }
    }

    // Rb_Holidays
    ///<summary>
    /// Таблица праздничных/предпраздничных дней
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Rb_Holiday
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Праздничная дата
        ///</summary>
        public System.DateTime DateTime_Holiday { get; set; } // DateTime_Holiday

        ///<summary>
        /// Праздничная дата 1-(Праздничный)/0-(Предпраздничный)
        ///</summary>
        public bool IS_HOLIDAY { get; set; } // IS_HOLIDAY
    }

    // ResourceIt
    ///<summary>
    /// Ресурсы для журнала с доступами
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResourceIt
    {

        ///<summary>
        /// Ун ресурса
        ///</summary>
        public int IdResource { get; set; } // IdResource (Primary key)

        ///<summary>
        /// Наименование ресурса
        ///</summary>
        public string NameResource { get; set; } // NameResource (length: 512)

        ///<summary>
        /// Ун курирущего отдела
        ///</summary>
        public int? IdOtdel { get; set; } // IdOtdel

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child JournalAis3 where [JournalAis3].[IdResource] point to this entity (FK_ResourceIt_JournalAis3)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<JournalAis3> JournalAis3 { get; set; } // JournalAis3.FK_ResourceIt_JournalAis3

        // Foreign keys

        /// <summary>
        /// Parent Otdel pointed by [ResourceIt].([IdOtdel]) (FK_Otdel_ResourceIt)
        /// </summary>
        public virtual Otdel Otdel { get; set; } // FK_Otdel_ResourceIt

        public ResourceIt()
        {
            DateCreate = System.DateTime.Now;
            JournalAis3 = new System.Collections.Generic.List<JournalAis3>();
        }
    }

    // Rules
    ///<summary>
    /// Роли доступа инвентаризации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Rule
    {

        ///<summary>
        /// Ун роли
        ///</summary>
        public int IdRule { get; set; } // IdRule (Primary key)

        ///<summary>
        /// Наименование роли
        ///</summary>
        public string NameRules { get; set; } // NameRules (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child RuleAndUsers where [RuleAndUsers].[IdRule] point to this entity (FK_RuleAndUsers_Rules)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers.FK_RuleAndUsers_Rules

        public Rule()
        {
            DataCreate = System.DateTime.Now;
            RuleAndUsers = new System.Collections.Generic.List<RuleAndUser>();
        }
    }

    // RuleAndUsers
    ///<summary>
    /// Роли и пользователи системы
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleAndUser
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун роли
        ///</summary>
        public int IdRule { get; set; } // IdRule

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Rule pointed by [RuleAndUsers].([IdRule]) (FK_RuleAndUsers_Rules)
        /// </summary>
        public virtual Rule Rule { get; set; } // FK_RuleAndUsers_Rules

        /// <summary>
        /// Parent User pointed by [RuleAndUsers].([IdUser]) (FK_RuleAndUsers_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_RuleAndUsers_Users

        public RuleAndUser()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // RuleIfns
    ///<summary>
    /// Роли АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleIfn
    {

        ///<summary>
        /// Ун записи о роли
        ///</summary>
        public int IdRuleIfns { get; set; } // IdRuleIfns (Primary key)

        ///<summary>
        /// Ун записи о классификации
        ///</summary>
        public int IdApplicationsIfns { get; set; } // IdApplicationsIfns

        ///<summary>
        /// Наименование роли
        ///</summary>
        public string NameRule { get; set; } // NameRule

        ///<summary>
        /// Информация о роли
        ///</summary>
        public string Info { get; set; } // Info

        ///<summary>
        /// Категория роли
        ///</summary>
        public string Category { get; set; } // Category

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TemplateIfnsAndRuleIfns where [TemplateIfnsAndRuleIfns].[IdRuleIfns] point to this entity (FK_TemplateIfnsAndRuleIfns_RuleIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TemplateIfnsAndRuleIfn> TemplateIfnsAndRuleIfns { get; set; } // TemplateIfnsAndRuleIfns.FK_TemplateIfnsAndRuleIfns_RuleIfns
        /// <summary>
        /// Child UsersAis3TemplateAndRule where [UsersAis3TemplateAndRule].[IdRuleIfns] point to this entity (FK_UsersAis3TemplateAndRule_RuleIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<UsersAis3TemplateAndRule> UsersAis3TemplateAndRule { get; set; } // UsersAis3TemplateAndRule.FK_UsersAis3TemplateAndRule_RuleIfns

        // Foreign keys

        /// <summary>
        /// Parent ApplicationsIfn pointed by [RuleIfns].([IdApplicationsIfns]) (FK_RuleIfns_ApplicationsIfns)
        /// </summary>
        public virtual ApplicationsIfn ApplicationsIfn { get; set; } // FK_RuleIfns_ApplicationsIfns

        public RuleIfn()
        {
            DateCreate = System.DateTime.Now;
            TemplateIfnsAndRuleIfns = new System.Collections.Generic.List<TemplateIfnsAndRuleIfn>();
            UsersAis3TemplateAndRule = new System.Collections.Generic.List<UsersAis3TemplateAndRule>();
        }
    }

    // RuleNotTemplateUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleNotTemplateUser
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string NameRule { get; set; } // NameRule
        public int IdTemplateIfns { get; set; } // IdTemplateIfns (Primary key)
        public string NameTemplate { get; set; } // NameTemplate
    }

    // The table 'RuleUserReplace' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // RuleUserReplace
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleUserReplace
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public int? IdTemplateIfnsNew { get; set; } // IdTemplateIfnsNew
        public string NameNew { get; set; } // NameNew
        public int? CountUserRuleNew { get; set; } // CountUserRuleNew
        public int? IdTemplateIfnsOld { get; set; } // IdTemplateIfnsOld
        public string NameOld { get; set; } // NameOld
        public int? CountUserRuleOld { get; set; } // CountUserRuleOld
        public int? CountMaxRule { get; set; } // CountMaxRule
    }

    // ScanerAndCamer
    ///<summary>
    /// Сканеры и камеры
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ScanerAndCamer
    {

        ///<summary>
        /// Ун записи о сканере или камере
        ///</summary>
        public int IdScaner { get; set; } // IdScaner (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdProizvoditel { get; set; } // IdProizvoditel

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModel { get; set; } // IdModel

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Заводской номер
        ///</summary>
        public string ZavNumber { get; set; } // ZavNumber (length: 128)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Инвентарный номер сканера или камеры
        ///</summary>
        public string InventarNumber { get; set; } // InventarNumber (length: 128)

        ///<summary>
        /// Ip Адрес принтера
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent FullModel pointed by [ScanerAndCamer].([IdModel]) (FK_ScanerAndCamer_FullModel)
        /// </summary>
        public virtual FullModel FullModel { get; set; } // FK_ScanerAndCamer_FullModel

        /// <summary>
        /// Parent FullProizvoditel pointed by [ScanerAndCamer].([IdProizvoditel]) (FK_ScanerAndCamer_FullProizvoditel)
        /// </summary>
        public virtual FullProizvoditel FullProizvoditel { get; set; } // FK_ScanerAndCamer_FullProizvoditel

        /// <summary>
        /// Parent Kabinet pointed by [ScanerAndCamer].([IdNumberKabinet]) (FK_ScanerAndCamer_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_ScanerAndCamer_Kabinet

        /// <summary>
        /// Parent Statusing pointed by [ScanerAndCamer].([IdStatus]) (FK_ScanerAndCamer_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_ScanerAndCamer_Statusing

        /// <summary>
        /// Parent Supply pointed by [ScanerAndCamer].([IdSupply]) (FK_ScanerAndCamer_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_ScanerAndCamer_Supply

        /// <summary>
        /// Parent User pointed by [ScanerAndCamer].([IdUser]) (FK_ScanerAndCamer_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_ScanerAndCamer_Users

        public ScanerAndCamer()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // ScanerAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ScanerAndEpo
    {
        public string Пользователь { get; set; } // Пользователь (length: 256)
        public string Модельинвентаризации { get; set; } // Модель инвентаризации (length: 256)
        public int IDвЭПО { get; set; } // ID в ЭПО (Primary key)
        public string СерийныйномервБД { get; set; } // Серийный номер в БД (length: 128)
        public string СерийныйномервЭПО { get; set; } // Серийный номер в ЭПО (Primary key) (length: 64)
        public int СерийныйномернесоответствиеБДЭПО { get; set; } // Серийный номер несоответствие БД ЭПО (Primary key)
        public string ИнвентарныйномервБД { get; set; } // Инвентарный номер в БД (length: 128)
        public string ИнвентарныйномервЭПО { get; set; } // Инвентарный номер в ЭПО (length: 64)
        public int ИнвентарныйномернесоответствиеБДЭПО { get; set; } // Инвентарный номер несоответствие БД ЭПО (Primary key)
        public string ИмявБД { get; set; } // Имя в БД (length: 128)
        public string ИмявЭПО { get; set; } // Имя в ЭПО (length: 128)
        public int ИмянесоответствиеБДЭПО { get; set; } // Имя несоответствие БД ЭПО (Primary key)
        public string КомнатавБД { get; set; } // Комната в БД (length: 5)
        public string КомнатавЭПО { get; set; } // Комната в ЭПО (length: 64)
        public int КомнатанесоответствиеБДЭПО { get; set; } // Комната несоответствие БД ЭПО (Primary key)
    }

    // ServerEquipment
    ///<summary>
    /// Сервера
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ServerEquipment
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун производителя
        ///</summary>
        public int? IdManufacturerSeverEquipment { get; set; } // IdManufacturerSeverEquipment

        ///<summary>
        /// Ун модели
        ///</summary>
        public int? IdModelSeverEquipment { get; set; } // IdModelSeverEquipment

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Тип оборудования
        ///</summary>
        public int IdTypeServer { get; set; } // IdTypeServer

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 128)

        ///<summary>
        /// Наименование сервера
        ///</summary>
        public string NameServer { get; set; } // NameServer (length: 128)

        ///<summary>
        /// Ip адрес
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [ServerEquipment].([IdNumberKabinet]) (FK_ServerEquipment_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_ServerEquipment_Kabinet

        /// <summary>
        /// Parent ManufacturerSeverEquipment pointed by [ServerEquipment].([IdManufacturerSeverEquipment]) (FK_ServerEquipment_ManufacturerSeverEquipment)
        /// </summary>
        public virtual ManufacturerSeverEquipment ManufacturerSeverEquipment { get; set; } // FK_ServerEquipment_ManufacturerSeverEquipment

        /// <summary>
        /// Parent ModelSeverEquipment pointed by [ServerEquipment].([IdModelSeverEquipment]) (FK_ServerEquipment_ModelSeverEquipment)
        /// </summary>
        public virtual ModelSeverEquipment ModelSeverEquipment { get; set; } // FK_ServerEquipment_ModelSeverEquipment

        /// <summary>
        /// Parent Statusing pointed by [ServerEquipment].([IdStatus]) (FK_ServerEquipment_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_ServerEquipment_Statusing

        /// <summary>
        /// Parent Supply pointed by [ServerEquipment].([IdSupply]) (FK_ServerEquipment_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_ServerEquipment_Supply

        /// <summary>
        /// Parent TypeServer pointed by [ServerEquipment].([IdTypeServer]) (FK_ServerEquipment_TypeServer)
        /// </summary>
        public virtual TypeServer TypeServer { get; set; } // FK_ServerEquipment_TypeServer

        public ServerEquipment()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // ServiceModelInventory
    ///<summary>
    /// Адреса разбора xml для AutomatAis3Full.exe
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ServiceModelInventory
    {

        ///<summary>
        /// Ун записи о сервисе
        ///</summary>
        public int IdService { get; set; } // IdService (Primary key)

        ///<summary>
        /// Api сервиса
        ///</summary>
        public string ApiService { get; set; } // ApiService (length: 1024)

        ///<summary>
        /// Наименование файла xml
        ///</summary>
        public string ModelNameFileXml { get; set; } // ModelNameFileXml (length: 1024)

        ///<summary>
        /// Наименование типа класса С#
        ///</summary>
        public string TypeFileNameSpaceClass { get; set; } // TypeFileNameSpaceClass (length: 1024)

        ///<summary>
        /// Файл Dll
        ///</summary>
        public string FileNameDll { get; set; } // FileNameDll (length: 1024)

        ///<summary>
        /// Информация о файле
        ///</summary>
        public string FileInfoFile { get; set; } // FileInfoFile (length: 1024)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        public ServiceModelInventory()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // SigmentIfns
    ///<summary>
    /// Сегмент АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SigmentIfn
    {

        ///<summary>
        /// Ун записи о сегменте
        ///</summary>
        public int IdSigmentIfns { get; set; } // IdSigmentIfns (Primary key)

        ///<summary>
        /// Наименование сегмента
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child ApplicationsIfns where [ApplicationsIfns].[IdSigmentIfns] point to this entity (FK_ApplicationsIfns_SigmentIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ApplicationsIfn> ApplicationsIfns { get; set; } // ApplicationsIfns.FK_ApplicationsIfns_SigmentIfns

        public SigmentIfn()
        {
            DateCreate = System.DateTime.Now;
            ApplicationsIfns = new System.Collections.Generic.List<ApplicationsIfn>();
        }
    }

    // Statusing
    ///<summary>
    /// Статусы в инвенторизации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Statusing
    {

        ///<summary>
        /// Ун записи о статусе
        ///</summary>
        public int IdStatus { get; set; } // IdStatus (Primary key)

        ///<summary>
        /// Наименование статуса
        ///</summary>
        public string NameStatus { get; set; } // NameStatus (length: 64)

        ///<summary>
        /// Цвет статуса
        ///</summary>
        public string Color { get; set; } // Color (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdStatus] point to this entity (FK_BlockPower_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Statusing
        /// <summary>
        /// Child Mfus where [Mfu].[IdStatus] point to this entity (FK_Mfu_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Statusing
        /// <summary>
        /// Child Monitors where [Monitors].[IdStatus] point to this entity (FK_Statusing_Monitors)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Statusing_Monitors
        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdStatus] point to this entity (FK_OtherAll_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_Statusing
        /// <summary>
        /// Child Printers where [Printer].[IdStatus] point to this entity (FK_Printer_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Statusing
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdStatus] point to this entity (FK_ScanerAndCamer_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Statusing
        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdStatus] point to this entity (FK_ServerEquipment_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_Statusing
        /// <summary>
        /// Child Swithes where [Swithes].[IdStatus] point to this entity (FK_Swithes_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Statusing
        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdStatus] point to this entity (FK_SysBlock_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Statusing
        /// <summary>
        /// Child Telephons where [Telephon].[IdStatus] point to this entity (FK_Telephon_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Statusing
        /// <summary>
        /// Child Tokens where [Token].[IdStatus] point to this entity (FK_Token_Statusing)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Token> Tokens { get; set; } // Token.FK_Token_Statusing

        public Statusing()
        {
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
            Mfus = new System.Collections.Generic.List<Mfu>();
            Monitors = new System.Collections.Generic.List<Monitor>();
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
            Printers = new System.Collections.Generic.List<Printer>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
            Swithes = new System.Collections.Generic.List<Swithe>();
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
            Telephons = new System.Collections.Generic.List<Telephon>();
            Tokens = new System.Collections.Generic.List<Token>();
        }
    }

    // StatusProcessSynchronization
    ///<summary>
    /// Статусы синхронизации с PrintServer
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusProcessSynchronization
    {

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int IdStatus { get; set; } // IdStatus (Primary key)

        ///<summary>
        /// Наименование статуса PrintServer
        ///</summary>
        public string NameStatus { get; set; } // NameStatus (length: 258)

        ///<summary>
        /// Цвет статуса
        ///</summary>
        public string Color { get; set; } // Color (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child SynchronizationPrintServers where [SynchronizationPrintServer].[StatusFindPrintServerAndSynchronization] point to this entity (FK_SynchronizationPrintServer_StatusProcessSynchronization)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SynchronizationPrintServer> SynchronizationPrintServers { get; set; } // SynchronizationPrintServer.FK_SynchronizationPrintServer_StatusProcessSynchronization

        public StatusProcessSynchronization()
        {
            DateCreate = System.DateTime.Now;
            SynchronizationPrintServers = new System.Collections.Generic.List<SynchronizationPrintServer>();
        }
    }

    // StatusUser
    ///<summary>
    /// Статусы пользователей
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusUser
    {

        ///<summary>
        /// Ун записи о статусе пользователя
        ///</summary>
        public int IdStatusUser { get; set; } // IdStatusUser (Primary key)

        ///<summary>
        /// Наименование статуса
        ///</summary>
        public string StatusText { get; set; } // StatusText (length: 128)

        ///<summary>
        /// Цвет статуса
        ///</summary>
        public string ColorStatus { get; set; } // ColorStatus (length: 32)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[StatusActual] point to this entity (FK_Users_StatusUser)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_StatusUser

        public StatusUser()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // Supply
    ///<summary>
    /// Поставка контракт
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Supply
    {

        ///<summary>
        /// Ун записи о поставке
        ///</summary>
        public int IdSupply { get; set; } // IdSupply (Primary key)

        ///<summary>
        /// Сведения о постаки
        ///</summary>
        public string NameSupply { get; set; } // NameSupply (length: 512)

        ///<summary>
        /// Номер наименование контракта
        ///</summary>
        public string NameKontract { get; set; } // NameKontract (length: 512)

        ///<summary>
        /// Фактиктическая дата поставки
        ///</summary>
        public System.DateTime? DatePostavki { get; set; } // DatePostavki

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdSupply] point to this entity (FK_BlockPower_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Supply
        /// <summary>
        /// Child Mfus where [Mfu].[IdSupply] point to this entity (FK_Mfu_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Supply
        /// <summary>
        /// Child Monitors where [Monitors].[IdSupply] point to this entity (FK_Monitors_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Supply
        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdSupply] point to this entity (FK_OtherAll_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_Supply
        /// <summary>
        /// Child Printers where [Printer].[IdSupply] point to this entity (FK_Printer_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Supply
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdSupply] point to this entity (FK_ScanerAndCamer_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Supply
        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdSupply] point to this entity (FK_ServerEquipment_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_Supply
        /// <summary>
        /// Child Swithes where [Swithes].[IdSupply] point to this entity (FK_Swithes_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Supply
        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdSupply] point to this entity (FK_SysBlock_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Supply
        /// <summary>
        /// Child Telephons where [Telephon].[IdSupply] point to this entity (FK_Telephon_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Supply
        /// <summary>
        /// Child Tokens where [Token].[IdSupply] point to this entity (FK_Token_Supply)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Token> Tokens { get; set; } // Token.FK_Token_Supply

        public Supply()
        {
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
            Mfus = new System.Collections.Generic.List<Mfu>();
            Monitors = new System.Collections.Generic.List<Monitor>();
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
            Printers = new System.Collections.Generic.List<Printer>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
            Swithes = new System.Collections.Generic.List<Swithe>();
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
            Telephons = new System.Collections.Generic.List<Telephon>();
            Tokens = new System.Collections.Generic.List<Token>();
        }
    }

    // Swithes
    ///<summary>
    /// Коммутаторы и свичи
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Swithe
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdSwithes { get; set; } // IdSwithes (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун модели коммутатора/свича
        ///</summary>
        public int? IdModelSwithes { get; set; } // IdModelSwithes

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [Swithes].([IdNumberKabinet]) (FK_Swithes_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_Swithes_Kabinet

        /// <summary>
        /// Parent ModelSwithe pointed by [Swithes].([IdModelSwithes]) (FK_Swithes_ModelSwithes)
        /// </summary>
        public virtual ModelSwithe ModelSwithe { get; set; } // FK_Swithes_ModelSwithes

        /// <summary>
        /// Parent Statusing pointed by [Swithes].([IdStatus]) (FK_Swithes_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Swithes_Statusing

        /// <summary>
        /// Parent Supply pointed by [Swithes].([IdSupply]) (FK_Swithes_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Swithes_Supply

        /// <summary>
        /// Parent User pointed by [Swithes].([IdUser]) (FK_Swithes_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Swithes_Users

        public Swithe()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // SynchronizationPrintServer
    ///<summary>
    /// Отчет по синхронизации с PrintServer
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SynchronizationPrintServer
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Имя принтера PrintServer
        ///</summary>
        public string NamePrintServer { get; set; } // NamePrintServer (length: 128)

        ///<summary>
        /// Ip принтера PrintServer
        ///</summary>
        public string IpPrintServer { get; set; } // IpPrintServer (length: 64)

        ///<summary>
        /// Описание на PrintServer
        ///</summary>
        public string DescriptionPrinter { get; set; } // DescriptionPrinter (length: 1024)

        ///<summary>
        /// Web ссылка
        ///</summary>
        public string FullUrl { get; set; } // FullUrl (length: 1024)

        ///<summary>
        /// Серийный номер PrintServer
        ///</summary>
        public string SerNumberPrintServer { get; set; } // SerNumberPrintServer (length: 256)

        ///<summary>
        /// Старое наименование в БД
        ///</summary>
        public string OldNameDataBase { get; set; } // OldNameDataBase (length: 128)

        ///<summary>
        /// Новое наименование в БД
        ///</summary>
        public string NewNameDataBase { get; set; } // NewNameDataBase (length: 128)

        ///<summary>
        /// Старый Ip
        ///</summary>
        public string OldIpDataBase { get; set; } // OldIpDataBase (length: 64)

        ///<summary>
        /// Новый Ip
        ///</summary>
        public string NewIpDataBase { get; set; } // NewIpDataBase (length: 64)

        ///<summary>
        /// Признак мало тонера 1-Мало тонера, 0-Все впорядке
        ///</summary>
        public bool IsTonerLow { get; set; } // IsTonerLow

        ///<summary>
        /// Признак тонер закончился 0-Закончился тонера, 1-Все впорядке
        ///</summary>
        public bool HasToner { get; set; } // HasToner

        ///<summary>
        /// Признак отправки автоматической заявки если тонер &gt;10% Проблема (где брать логин и пароль)
        ///</summary>
        public bool IsSupportApplication { get; set; } // IsSupportApplication

        ///<summary>
        /// Дата и время создания заявки
        ///</summary>
        public System.DateTime? DateCreateSupportApplication { get; set; } // DateCreateSupportApplication

        ///<summary>
        /// Статус отработки записи
        ///</summary>
        public int? StatusFindPrintServerAndSynchronization { get; set; } // StatusFindPrintServerAndSynchronization

        ///<summary>
        /// Ошибка записи
        ///</summary>
        public string IsErrorInfo { get; set; } // IsErrorInfo

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent StatusProcessSynchronization pointed by [SynchronizationPrintServer].([StatusFindPrintServerAndSynchronization]) (FK_SynchronizationPrintServer_StatusProcessSynchronization)
        /// </summary>
        public virtual StatusProcessSynchronization StatusProcessSynchronization { get; set; } // FK_SynchronizationPrintServer_StatusProcessSynchronization

        public SynchronizationPrintServer()
        {
            IsTonerLow = false;
            HasToner = false;
            IsSupportApplication = false;
            DateCreate = System.DateTime.Now;
        }
    }

    // SynchronizationPrintServerToDataBase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SynchronizationPrintServerToDataBase
    {
        public int Id { get; set; } // Id (Primary key)
        public string NameModel { get; set; } // NameModel (length: 512)
        public string SerNumberPrintServer { get; set; } // SerNumberPrintServer (length: 256)
        public string NamePrintServer { get; set; } // NamePrintServer (length: 128)
        public string IpPrintServer { get; set; } // IpPrintServer (length: 64)
        public string DescriptionPrinter { get; set; } // DescriptionPrinter (length: 1024)
        public string FullUrl { get; set; } // FullUrl (length: 1024)
        public string OldNameDataBase { get; set; } // OldNameDataBase (length: 128)
        public string OldIpDataBase { get; set; } // OldIpDataBase (length: 64)
        public string NewNameDataBase { get; set; } // NewNameDataBase (length: 128)
        public string NewIpDataBase { get; set; } // NewIpDataBase (length: 64)
        public string IsTonerLowAndHas { get; set; } // IsTonerLowAndHas (length: 27)
        public string IsSupportApplicationDate { get; set; } // IsSupportApplicationDate
        public string Info { get; set; } // Info
        public string NameStatus { get; set; } // NameStatus (length: 258)
        public string Color { get; set; } // Color (length: 64)
    }

    // The table 'SynhronizationIp' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // SynhronizationIp
    ///<summary>
    /// Отчет по синхронизации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SynhronizationIp
    {

        ///<summary>
        /// Описание задачи
        ///</summary>
        public string Task { get; set; } // Task (length: 64)

        ///<summary>
        /// Ун системного блока участвавший в процесе
        ///</summary>
        public int? IdSysBlock { get; set; } // IdSysBlock

        ///<summary>
        /// Ун пользователя владелец
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Актуальный Ip из Active Derectory
        ///</summary>
        public string ActualIpAdress { get; set; } // ActualIpAdress (length: 128)

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)

        ///<summary>
        /// Старый Ip адрес в БД
        ///</summary>
        public string IpAdressOld { get; set; } // IpAdressOld (length: 128)

        ///<summary>
        /// Новый замененый Ip из Active Derectory
        ///</summary>
        public string IpAdressNew { get; set; } // IpAdressNew (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? Dates { get; set; } // Dates
    }

    // SysBlock
    ///<summary>
    /// Системные блоки
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SysBlock
    {

        ///<summary>
        /// Ун записи о системном блоки
        ///</summary>
        public int IdSysBlock { get; set; } // IdSysBlock (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун модели системного блока
        ///</summary>
        public int? IdModelSysBlock { get; set; } // IdModelSysBlock

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 128)

        ///<summary>
        /// Сериный номер
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string NameComputer { get; set; } // NameComputer (length: 128)

        ///<summary>
        /// Ip адрес
        ///</summary>
        public string IpAdress { get; set; } // IpAdress (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Tokens where [Token].[IdSysBlock] point to this entity (FK_Token_SysBlock)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Token> Tokens { get; set; } // Token.FK_Token_SysBlock

        // Foreign keys

        /// <summary>
        /// Parent Kabinet pointed by [SysBlock].([IdNumberKabinet]) (FK_SysBlock_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_SysBlock_Kabinet

        /// <summary>
        /// Parent NameSysBlock pointed by [SysBlock].([IdModelSysBlock]) (FK_SysBlock_NameSysBlock)
        /// </summary>
        public virtual NameSysBlock NameSysBlock { get; set; } // FK_SysBlock_NameSysBlock

        /// <summary>
        /// Parent Statusing pointed by [SysBlock].([IdStatus]) (FK_SysBlock_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_SysBlock_Statusing

        /// <summary>
        /// Parent Supply pointed by [SysBlock].([IdSupply]) (FK_SysBlock_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_SysBlock_Supply

        /// <summary>
        /// Parent User pointed by [SysBlock].([IdUser]) (FK_SysBlock_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_SysBlock_Users

        public SysBlock()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            Tokens = new System.Collections.Generic.List<Token>();
        }
    }

    // TableAllModel
    ///<summary>
    /// Таблица всех моделей и веток АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableAllModel
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdModel { get; set; } // IdModel (Primary key)

        ///<summary>
        /// Ун системы
        ///</summary>
        public int? IdSystems { get; set; } // IdSystems

        ///<summary>
        /// Ун папки
        ///</summary>
        public int? IdFolders { get; set; } // IdFolders

        ///<summary>
        /// Ун задачи
        ///</summary>
        public int? IdTasks { get; set; } // IdTasks

        ///<summary>
        /// Ун роли
        ///</summary>
        public int? IdRoles { get; set; } // IdRoles

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int? IdTemplate { get; set; } // IdTemplate

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent TableFolder pointed by [TableAllModel].([IdFolders]) (FK_TableAllModel_TableFolders)
        /// </summary>
        public virtual TableFolder TableFolder { get; set; } // FK_TableAllModel_TableFolders

        /// <summary>
        /// Parent TableRole pointed by [TableAllModel].([IdRoles]) (FK_TableAllModel_TableRoles)
        /// </summary>
        public virtual TableRole TableRole { get; set; } // FK_TableAllModel_TableRoles

        /// <summary>
        /// Parent TableSystem pointed by [TableAllModel].([IdSystems]) (FK_TableAllModel_TableSystems)
        /// </summary>
        public virtual TableSystem TableSystem { get; set; } // FK_TableAllModel_TableSystems

        /// <summary>
        /// Parent TableTask pointed by [TableAllModel].([IdTasks]) (FK_TableAllModel_TableTasks)
        /// </summary>
        public virtual TableTask TableTask { get; set; } // FK_TableAllModel_TableTasks

        /// <summary>
        /// Parent TableTemplate pointed by [TableAllModel].([IdTemplate]) (FK_TableAllModel_TableTemplate)
        /// </summary>
        public virtual TableTemplate TableTemplate { get; set; } // FK_TableAllModel_TableTemplate

        public TableAllModel()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // TableFolders
    ///<summary>
    /// Таблица всех папок АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableFolder
    {

        ///<summary>
        /// Ун папки
        ///</summary>
        public int IdFolders { get; set; } // IdFolders (Primary key)

        ///<summary>
        /// Наименование папки
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TableAllModels where [TableAllModel].[IdFolders] point to this entity (FK_TableAllModel_TableFolders)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TableAllModel> TableAllModels { get; set; } // TableAllModel.FK_TableAllModel_TableFolders

        public TableFolder()
        {
            DateCreate = System.DateTime.Now;
            TableAllModels = new System.Collections.Generic.List<TableAllModel>();
        }
    }

    // TableRoles
    ///<summary>
    /// Таблица всех ролей АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableRole
    {

        ///<summary>
        /// Ун роли
        ///</summary>
        public int IdRoles { get; set; } // IdRoles (Primary key)

        ///<summary>
        /// Наименование роли
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TableAllModels where [TableAllModel].[IdRoles] point to this entity (FK_TableAllModel_TableRoles)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TableAllModel> TableAllModels { get; set; } // TableAllModel.FK_TableAllModel_TableRoles

        public TableRole()
        {
            DateCreate = System.DateTime.Now;
            TableAllModels = new System.Collections.Generic.List<TableAllModel>();
        }
    }

    // TableSystems
    ///<summary>
    /// Таблица подсистем АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableSystem
    {

        ///<summary>
        /// Ун системы
        ///</summary>
        public int IdSystems { get; set; } // IdSystems (Primary key)

        ///<summary>
        /// Наименование системы
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TableAllModels where [TableAllModel].[IdSystems] point to this entity (FK_TableAllModel_TableSystems)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TableAllModel> TableAllModels { get; set; } // TableAllModel.FK_TableAllModel_TableSystems

        public TableSystem()
        {
            DateCreate = System.DateTime.Now;
            TableAllModels = new System.Collections.Generic.List<TableAllModel>();
        }
    }

    // TableTasks
    ///<summary>
    /// Таблица задач АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableTask
    {

        ///<summary>
        /// Ун задачи
        ///</summary>
        public int IdTasks { get; set; } // IdTasks (Primary key)

        ///<summary>
        /// Наименование задачи
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Тип задачи
        ///</summary>
        public string TypeTask { get; set; } // TypeTask

        ///<summary>
        /// Куратор
        ///</summary>
        public string Curator { get; set; } // Curator

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TableAllModels where [TableAllModel].[IdTasks] point to this entity (FK_TableAllModel_TableTasks)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TableAllModel> TableAllModels { get; set; } // TableAllModel.FK_TableAllModel_TableTasks

        public TableTask()
        {
            DateCreate = System.DateTime.Now;
            TableAllModels = new System.Collections.Generic.List<TableAllModel>();
        }
    }

    // TableTemplate
    ///<summary>
    /// Таблица шаблонов АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableTemplate
    {

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int IdTemplate { get; set; } // IdTemplate (Primary key)

        ///<summary>
        /// Наименование шаблона
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Категория шаблона
        ///</summary>
        public string Category { get; set; } // Category

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TableAllModels where [TableAllModel].[IdTemplate] point to this entity (FK_TableAllModel_TableTemplate)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TableAllModel> TableAllModels { get; set; } // TableAllModel.FK_TableAllModel_TableTemplate

        public TableTemplate()
        {
            DateCreate = System.DateTime.Now;
            TableAllModels = new System.Collections.Generic.List<TableAllModel>();
        }
    }

    // TaskAis3
    ///<summary>
    /// Наименование задач для журнала АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TaskAis3
    {

        ///<summary>
        /// Ун записи задачи
        ///</summary>
        public int IdTask { get; set; } // IdTask (Primary key)

        ///<summary>
        /// Наименование задачи
        ///</summary>
        public string NameTask { get; set; } // NameTask (length: 512)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child JournalAis3 where [JournalAis3].[IdTask] point to this entity (FK_TaskAis3_JournalAis3)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<JournalAis3> JournalAis3 { get; set; } // JournalAis3.FK_TaskAis3_JournalAis3

        public TaskAis3()
        {
            DateCreate = System.DateTime.Now;
            JournalAis3 = new System.Collections.Generic.List<JournalAis3>();
        }
    }

    // TecnicalOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TecnicalOtdel
    {
        public string NameOtdel { get; set; } // NameOtdel (length: 256)
        public string NameUser { get; set; } // NameUser (Primary key) (length: 256)
        public string NameClass { get; set; } // NameClass (Primary key) (length: 15)
        public string NameComputer { get; set; } // NameComputer (length: 256)
        public string SerNum { get; set; } // SerNum (length: 128)
        public string InventarNumSysBlok { get; set; } // InventarNumSysBlok (length: 128)
        public string NumberKabinet { get; set; } // NumberKabinet (length: 5)
        public string Coment { get; set; } // Coment (length: 254)
    }

    // Telephon
    ///<summary>
    /// Тедлефон
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Telephon
    {

        ///<summary>
        /// Ун записи телефона
        ///</summary>
        public int IdTelephon { get; set; } // IdTelephon (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун кабинета
        ///</summary>
        public int? IdNumberKabinet { get; set; } // IdNumberKabinet

        ///<summary>
        /// Наименование телефона
        ///</summary>
        public string NameTelephone { get; set; } // NameTelephone (length: 128)

        ///<summary>
        /// Телефон внутренний
        ///</summary>
        public string Telephon_ { get; set; } // Telephon (length: 32)

        ///<summary>
        /// Телефон городской
        ///</summary>
        public string TelephonUndeground { get; set; } // TelephonUndeground (length: 32)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNum { get; set; } // ServiceNum (length: 64)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerNumber { get; set; } // SerNumber (length: 64)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventarNum { get; set; } // InventarNum (length: 64)

        ///<summary>
        /// Ip адрес телефона
        ///</summary>
        public string IpTelephon { get; set; } // IpTelephon (length: 64)

        ///<summary>
        /// Mac адрес телефона
        ///</summary>
        public string MacTelephon { get; set; } // MacTelephon (length: 64)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун cтатуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Ун для справочника телевонов
        ///</summary>
        public int? IdCategoryHeaders { get; set; } // IdCategoryHeaders

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdTelephon] point to this entity (FK_Users_Telephon)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Telephon

        // Foreign keys

        /// <summary>
        /// Parent CategoryPhoneHeader pointed by [Telephon].([IdCategoryHeaders]) (FK_Telephon_CategoryPhoneHeaders)
        /// </summary>
        public virtual CategoryPhoneHeader CategoryPhoneHeader { get; set; } // FK_Telephon_CategoryPhoneHeaders

        /// <summary>
        /// Parent Kabinet pointed by [Telephon].([IdNumberKabinet]) (FK_Telephon_Kabinet)
        /// </summary>
        public virtual Kabinet Kabinet { get; set; } // FK_Telephon_Kabinet

        /// <summary>
        /// Parent Statusing pointed by [Telephon].([IdStatus]) (FK_Telephon_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Telephon_Statusing

        /// <summary>
        /// Parent Supply pointed by [Telephon].([IdSupply]) (FK_Telephon_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Telephon_Supply

        /// <summary>
        /// Parent User pointed by [Telephon].([IdUser]) (FK_Telephon_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Telephon_Users

        public Telephon()
        {
            WriteOffSign = false;
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // TemplateAllIfns
    ///<summary>
    /// Все шаблоны АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateAllIfn
    {

        ///<summary>
        /// Ун записи шаблона
        ///</summary>
        public int IdTemplateIfns { get; set; } // IdTemplateIfns (Primary key)

        ///<summary>
        /// Наименование шаблона
        ///</summary>
        public string Name { get; set; } // Name

        ///<summary>
        /// Информация о шаблона
        ///</summary>
        public string Info { get; set; } // Info

        ///<summary>
        /// Категория шаблона
        ///</summary>
        public string Category { get; set; } // Category

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child TemplateIfnsAndRuleIfns where [TemplateIfnsAndRuleIfns].[IdTemplateIfns] point to this entity (FK_TemplateIfnsAndRuleIfns_TemplateAllIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<TemplateIfnsAndRuleIfn> TemplateIfnsAndRuleIfns { get; set; } // TemplateIfnsAndRuleIfns.FK_TemplateIfnsAndRuleIfns_TemplateAllIfns
        /// <summary>
        /// Child UsersAis3TemplateAndRule where [UsersAis3TemplateAndRule].[IdTemplateIfns] point to this entity (FK_UsersAis3TemplateAndRule_TemplateAllIfns)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<UsersAis3TemplateAndRule> UsersAis3TemplateAndRule { get; set; } // UsersAis3TemplateAndRule.FK_UsersAis3TemplateAndRule_TemplateAllIfns

        public TemplateAllIfn()
        {
            DateCreate = System.DateTime.Now;
            TemplateIfnsAndRuleIfns = new System.Collections.Generic.List<TemplateIfnsAndRuleIfn>();
            UsersAis3TemplateAndRule = new System.Collections.Generic.List<UsersAis3TemplateAndRule>();
        }
    }

    // TemplateIfnsAndRuleIfns
    ///<summary>
    /// Связь шаблоны и роли
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateIfnsAndRuleIfn
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdTemplateAndRuleIfns { get; set; } // IdTemplateAndRuleIfns (Primary key)

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int? IdTemplateIfns { get; set; } // IdTemplateIfns

        ///<summary>
        /// Ун роли
        ///</summary>
        public int? IdRuleIfns { get; set; } // IdRuleIfns

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent RuleIfn pointed by [TemplateIfnsAndRuleIfns].([IdRuleIfns]) (FK_TemplateIfnsAndRuleIfns_RuleIfns)
        /// </summary>
        public virtual RuleIfn RuleIfn { get; set; } // FK_TemplateIfnsAndRuleIfns_RuleIfns

        /// <summary>
        /// Parent TemplateAllIfn pointed by [TemplateIfnsAndRuleIfns].([IdTemplateIfns]) (FK_TemplateIfnsAndRuleIfns_TemplateAllIfns)
        /// </summary>
        public virtual TemplateAllIfn TemplateAllIfn { get; set; } // FK_TemplateIfnsAndRuleIfns_TemplateAllIfns

        public TemplateIfnsAndRuleIfn()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // TemplateSupportAndParametrSupport
    ///<summary>
    /// Связующая таблица с параметры с шаблонами СТП
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateSupportAndParametrSupport
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Ун параметра
        ///</summary>
        public int? IdParametr { get; set; } // IdParametr

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int? IdTemplate { get; set; } // IdTemplate

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent FullTemplateSupport pointed by [TemplateSupportAndParametrSupport].([IdTemplate]) (FK_TemplateSupportAndParametrSupport_FullTemplateSupport)
        /// </summary>
        public virtual FullTemplateSupport FullTemplateSupport { get; set; } // FK_TemplateSupportAndParametrSupport_FullTemplateSupport

        /// <summary>
        /// Parent ParametrSupport pointed by [TemplateSupportAndParametrSupport].([IdParametr]) (FK_TemplateSupportAndParametrSupport_ParametrSupport)
        /// </summary>
        public virtual ParametrSupport ParametrSupport { get; set; } // FK_TemplateSupportAndParametrSupport_ParametrSupport

        public TemplateSupportAndParametrSupport()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // Token
    ///<summary>
    /// Таблица реестра токенов ИБ
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Token
    {

        ///<summary>
        /// Ун записи о токене
        ///</summary>
        public int IdToken { get; set; } // IdToken (Primary key)

        ///<summary>
        /// Ун записи о пользователе
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун поставки контракта
        ///</summary>
        public int? IdSupply { get; set; } // IdSupply

        ///<summary>
        /// Ун системного блока
        ///</summary>
        public int? IdSysBlock { get; set; } // IdSysBlock

        ///<summary>
        /// Производитель токена
        ///</summary>
        public string ProizvoditelName { get; set; } // ProizvoditelName (length: 256)

        ///<summary>
        /// Серийный номер токена
        ///</summary>
        public string SerNum { get; set; } // SerNum (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Coment { get; set; } // Coment (length: 254)

        ///<summary>
        /// Ун статуса
        ///</summary>
        public int? IdStatus { get; set; } // IdStatus

        ///<summary>
        /// Признак списания
        ///</summary>
        public bool WriteOffSign { get; set; } // WriteOffSign

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Statusing pointed by [Token].([IdStatus]) (FK_Token_Statusing)
        /// </summary>
        public virtual Statusing Statusing { get; set; } // FK_Token_Statusing

        /// <summary>
        /// Parent Supply pointed by [Token].([IdSupply]) (FK_Token_Supply)
        /// </summary>
        public virtual Supply Supply { get; set; } // FK_Token_Supply

        /// <summary>
        /// Parent SysBlock pointed by [Token].([IdSysBlock]) (FK_Token_SysBlock)
        /// </summary>
        public virtual SysBlock SysBlock { get; set; } // FK_Token_SysBlock

        /// <summary>
        /// Parent User pointed by [Token].([IdUser]) (FK_Token_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_Token_Users

        public Token()
        {
            WriteOffSign = false;
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
        }
    }

    // TypeOther
    ///<summary>
    /// Классификация типов разного оборудования
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeOther
    {

        ///<summary>
        /// Ун записи о типе
        ///</summary>
        public int IdTypeOther { get; set; } // IdTypeOther (Primary key)

        ///<summary>
        /// Наименование типа
        ///</summary>
        public string Name { get; set; } // Name (length: 128)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdTypeOther] point to this entity (FK_OtherAll_TypeOther)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_TypeOther

        public TypeOther()
        {
            DataCreate = System.DateTime.Now;
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
        }
    }

    // TypeServer
    ///<summary>
    /// Типы сервера
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeServer
    {

        ///<summary>
        /// Ун записи о типе сервера
        ///</summary>
        public int IdTypeServer { get; set; } // IdTypeServer (Primary key)

        ///<summary>
        /// Наименование типа сервера
        ///</summary>
        public string NameType { get; set; } // NameType (length: 256)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child ServerEquipments where [ServerEquipment].[IdTypeServer] point to this entity (FK_ServerEquipment_TypeServer)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ServerEquipment> ServerEquipments { get; set; } // ServerEquipment.FK_ServerEquipment_TypeServer

        public TypeServer()
        {
            DataCreate = System.DateTime.Now;
            ServerEquipments = new System.Collections.Generic.List<ServerEquipment>();
        }
    }

    // Users
    ///<summary>
    /// Пользователи ДКС
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class User
    {

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int IdUser { get; set; } // IdUser (Primary key)

        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string NameUser { get; set; } // NameUser (length: 256)

        ///<summary>
        /// Сокращенное имя пользователя для документов
        ///</summary>
        public string SmallName { get; set; } // SmallName (length: 128)

        ///<summary>
        /// Дата приема на работу
        ///</summary>
        public System.DateTime? DateInWork { get; set; } // DateInWork

        ///<summary>
        /// Ун отдела
        ///</summary>
        public int? IdOtdel { get; set; } // IdOtdel

        ///<summary>
        /// Ун должности
        ///</summary>
        public int? IdPosition { get; set; } // IdPosition

        ///<summary>
        /// Табельный номер
        ///</summary>
        public string TabelNumber { get; set; } // TabelNumber (length: 32)

        ///<summary>
        /// Ун телефона
        ///</summary>
        public int? IdTelephon { get; set; } // IdTelephon

        ///<summary>
        /// Ун статуса пользователя
        ///</summary>
        public int? StatusActual { get; set; } // StatusActual

        ///<summary>
        /// Ун истории
        ///</summary>
        public string IdHistory { get; set; } // IdHistory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) User pointed by [MailIdentifier].[IdUser] (FK_MailIdentifier_Users)
        /// </summary>
        [JsonIgnore]
        public virtual MailIdentifier MailIdentifier { get; set; } // MailIdentifier.FK_MailIdentifier_Users
        /// <summary>
        /// Child BlockPowers where [BlockPower].[IdUser] point to this entity (FK_BlockPower_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<BlockPower> BlockPowers { get; set; } // BlockPower.FK_BlockPower_Users
        /// <summary>
        /// Child Documents where [Document].[IdUser] point to this entity (FK_Users_Document)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Document> Documents { get; set; } // Document.FK_Users_Document
        /// <summary>
        /// Child JournalAis3 where [JournalAis3].[IdUser] point to this entity (FK_Users_JournalAis3)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<JournalAis3> JournalAis3 { get; set; } // JournalAis3.FK_Users_JournalAis3
        /// <summary>
        /// Child Mfus where [Mfu].[IdUser] point to this entity (FK_Mfu_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Mfu> Mfus { get; set; } // Mfu.FK_Mfu_Users
        /// <summary>
        /// Child Monitors where [Monitors].[IdUser] point to this entity (FK_Monitors_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Monitor> Monitors { get; set; } // Monitors.FK_Monitors_Users
        /// <summary>
        /// Child Otdels where [Otdel].[IdUser] point to this entity (FK_Users_Otdel)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Otdel> Otdels { get; set; } // Otdel.FK_Users_Otdel
        /// <summary>
        /// Child OtherAlls where [OtherAll].[IdUser] point to this entity (FK_OtherAll_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<OtherAll> OtherAlls { get; set; } // OtherAll.FK_OtherAll_Users
        /// <summary>
        /// Child Printers where [Printer].[IdUser] point to this entity (FK_Printer_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Printer> Printers { get; set; } // Printer.FK_Printer_Users
        /// <summary>
        /// Child RuleAndUsers where [RuleAndUsers].[IdUser] point to this entity (FK_RuleAndUsers_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers.FK_RuleAndUsers_Users
        /// <summary>
        /// Child ScanerAndCamers where [ScanerAndCamer].[IdUser] point to this entity (FK_ScanerAndCamer_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ScanerAndCamer> ScanerAndCamers { get; set; } // ScanerAndCamer.FK_ScanerAndCamer_Users
        /// <summary>
        /// Child Swithes where [Swithes].[IdUser] point to this entity (FK_Swithes_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Swithe> Swithes { get; set; } // Swithes.FK_Swithes_Users
        /// <summary>
        /// Child SysBlocks where [SysBlock].[IdUser] point to this entity (FK_SysBlock_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<SysBlock> SysBlocks { get; set; } // SysBlock.FK_SysBlock_Users
        /// <summary>
        /// Child Telephons where [Telephon].[IdUser] point to this entity (FK_Telephon_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Telephon> Telephons { get; set; } // Telephon.FK_Telephon_Users
        /// <summary>
        /// Child Tokens where [Token].[IdUser] point to this entity (FK_Token_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Token> Tokens { get; set; } // Token.FK_Token_Users

        // Foreign keys

        /// <summary>
        /// Parent Otdel pointed by [Users].([IdOtdel]) (FK_Otdel_Users)
        /// </summary>
        public virtual Otdel Otdel { get; set; } // FK_Otdel_Users

        /// <summary>
        /// Parent Position pointed by [Users].([IdPosition]) (FK_Users_Position)
        /// </summary>
        public virtual Position Position { get; set; } // FK_Users_Position

        /// <summary>
        /// Parent StatusUser pointed by [Users].([StatusActual]) (FK_Users_StatusUser)
        /// </summary>
        public virtual StatusUser StatusUser { get; set; } // FK_Users_StatusUser

        /// <summary>
        /// Parent Telephon pointed by [Users].([IdTelephon]) (FK_Users_Telephon)
        /// </summary>
        public virtual Telephon Telephon { get; set; } // FK_Users_Telephon

        public User()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            BlockPowers = new System.Collections.Generic.List<BlockPower>();
            Documents = new System.Collections.Generic.List<Document>();
            JournalAis3 = new System.Collections.Generic.List<JournalAis3>();
            Mfus = new System.Collections.Generic.List<Mfu>();
            Monitors = new System.Collections.Generic.List<Monitor>();
            Otdels = new System.Collections.Generic.List<Otdel>();
            OtherAlls = new System.Collections.Generic.List<OtherAll>();
            Printers = new System.Collections.Generic.List<Printer>();
            RuleAndUsers = new System.Collections.Generic.List<RuleAndUser>();
            ScanerAndCamers = new System.Collections.Generic.List<ScanerAndCamer>();
            Swithes = new System.Collections.Generic.List<Swithe>();
            SysBlocks = new System.Collections.Generic.List<SysBlock>();
            Telephons = new System.Collections.Generic.List<Telephon>();
            Tokens = new System.Collections.Generic.List<Token>();
        }
    }

    // UserRulesRuk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UserRulesRuk
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string NameTemplate { get; set; } // NameTemplate
        public int IdRuleIfns { get; set; } // IdRuleIfns (Primary key)
        public string NameRule { get; set; } // NameRule
    }

    // UsersAis3
    ///<summary>
    /// Пользователи АИС 3
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersAis3
    {

        ///<summary>
        /// Ун пользователя АИС 3
        ///</summary>
        public int IdUser { get; set; } // IdUser (Primary key)

        ///<summary>
        /// Имя  пользователя АИС 3
        ///</summary>
        public string NameUser { get; set; } // NameUser (length: 1024)

        ///<summary>
        /// Код ИФНС АИС 3
        ///</summary>
        public string CodeIfns { get; set; } // CodeIfns (length: 10)

        ///<summary>
        /// Табельный номер АИС 3
        ///</summary>
        public string TabelNumber { get; set; } // TabelNumber (length: 32)

        ///<summary>
        /// Отдел АИС 3
        ///</summary>
        public string Department { get; set; } // Department (length: 512)

        ///<summary>
        /// Должность АИС 3
        ///</summary>
        public string Position { get; set; } // Position (length: 1024)

        ///<summary>
        /// Организация АИС 3
        ///</summary>
        public string Organization { get; set; } // Organization (length: 512)

        ///<summary>
        /// Статус блокировки АИС 3
        ///</summary>
        public string Bloking { get; set; } // Bloking (length: 32)

        ///<summary>
        /// Номер в AD АИС 3
        ///</summary>
        public string NumberActiveDirectory { get; set; } // NumberActiveDirectory (length: 64)

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Reverse navigation

        /// <summary>
        /// Child UsersAis3TemplateAndRule where [UsersAis3TemplateAndRule].[IdUser] point to this entity (FK_UsersAis3TemplateAndRule_UsersAis3)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<UsersAis3TemplateAndRule> UsersAis3TemplateAndRule { get; set; } // UsersAis3TemplateAndRule.FK_UsersAis3TemplateAndRule_UsersAis3

        public UsersAis3()
        {
            DateCreate = System.DateTime.Now;
            UsersAis3TemplateAndRule = new System.Collections.Generic.List<UsersAis3TemplateAndRule>();
        }
    }

    // UsersAis3TemplateAndRule
    ///<summary>
    /// Связка пользователей с ролями ишаблонами
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersAis3TemplateAndRule
    {

        ///<summary>
        /// Ун записи
        ///</summary>
        public int IdTemlateRuleAll { get; set; } // IdTemlateRuleAll (Primary key)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int IdUser { get; set; } // IdUser

        ///<summary>
        /// Ун шаблона
        ///</summary>
        public int? IdTemplateIfns { get; set; } // IdTemplateIfns

        ///<summary>
        /// Ун роли
        ///</summary>
        public int? IdRuleIfns { get; set; } // IdRuleIfns

        ///<summary>
        /// Роль отстутствует привязка к шаблону
        ///</summary>
        public int? IdRuleIfnsNotTemplate { get; set; } // IdRuleIfnsNotTemplate

        ///<summary>
        /// Роль отстутствует в АИС 3
        ///</summary>
        public string NameRuleNothing { get; set; } // NameRuleNothing

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate

        // Foreign keys

        /// <summary>
        /// Parent RuleIfn pointed by [UsersAis3TemplateAndRule].([IdRuleIfns]) (FK_UsersAis3TemplateAndRule_RuleIfns)
        /// </summary>
        public virtual RuleIfn RuleIfn { get; set; } // FK_UsersAis3TemplateAndRule_RuleIfns

        /// <summary>
        /// Parent TemplateAllIfn pointed by [UsersAis3TemplateAndRule].([IdTemplateIfns]) (FK_UsersAis3TemplateAndRule_TemplateAllIfns)
        /// </summary>
        public virtual TemplateAllIfn TemplateAllIfn { get; set; } // FK_UsersAis3TemplateAndRule_TemplateAllIfns

        /// <summary>
        /// Parent UsersAis3 pointed by [UsersAis3TemplateAndRule].([IdUser]) (FK_UsersAis3TemplateAndRule_UsersAis3)
        /// </summary>
        public virtual UsersAis3 UsersAis3 { get; set; } // FK_UsersAis3TemplateAndRule_UsersAis3

        public UsersAis3TemplateAndRule()
        {
            DateCreate = System.DateTime.Now;
        }
    }

    // UsersDoubleRulesTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersDoubleRulesTemplate
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public int IdTemplateIfns { get; set; } // IdTemplateIfns (Primary key)
        public string NameTemplate { get; set; } // NameTemplate
        public int IdRuleIfns { get; set; } // IdRuleIfns (Primary key)
        public string NameRule { get; set; } // NameRule
    }

    // UsersIsActualsStat
    ///<summary>
    /// Таблица вывода отчета последней актуализации
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersIsActualsStat
    {

        ///<summary>
        /// Ун записи актуализации
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Тип произошедшего
        ///</summary>
        public string ChangeType { get; set; } // ChangeType (length: 100)

        ///<summary>
        /// Ун пользователя
        ///</summary>
        public int? IdUser { get; set; } // IdUser

        ///<summary>
        /// Имя пользователя
        ///</summary>
        public string NameUsers { get; set; } // NameUsers (length: 256)

        ///<summary>
        /// Сокращенное имя пользователя
        ///</summary>
        public string SmallNameUsers { get; set; } // SmallNameUsers (length: 256)

        ///<summary>
        /// Ун отдела
        ///</summary>
        public int? IdOtdel { get; set; } // IdOtdel

        ///<summary>
        /// Ун должности
        ///</summary>
        public int? IdPosition { get; set; } // IdPosition

        ///<summary>
        /// Табельный номер
        ///</summary>
        public string TabelNumber { get; set; } // TabelNumber (length: 32)

        ///<summary>
        /// Актуальный статус
        ///</summary>
        public bool? StatusActual { get; set; } // StatusActual

        ///<summary>
        /// Дата записи
        ///</summary>
        public System.DateTime? DateCreate { get; set; } // DateCreate
    }

    // The table 'UsersIsBloking' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // UsersIsBloking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersIsBloking
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string Department { get; set; } // Department (length: 512)
        public string Position { get; set; } // Position (length: 1024)
        public string NumberActiveDirectory { get; set; } // NumberActiveDirectory (length: 64)
        public string NameTemplate { get; set; } // NameTemplate
        public string NameRule { get; set; } // NameRule
        public string NameRuleNothing { get; set; } // NameRuleNothing
    }

    // UsersNotTechnical
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersNotTechnical
    {
        public int IdUser { get; set; } // IdUser (Primary key)
        public string NameUser { get; set; } // NameUser (Primary key) (length: 256)
        public string SmallName { get; set; } // SmallName (length: 128)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string NamePosition { get; set; } // NamePosition (length: 256)
        public string NameOtdel { get; set; } // NameOtdel (length: 256)
    }

    // The table 'UsersRuleOld' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // UsersRuleOld
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersRuleOld
    {
        public string NameUser { get; set; } // NameUser (length: 1024)
        public string TabelNumber { get; set; } // TabelNumber (length: 32)
        public string Department { get; set; } // Department (length: 512)
        public string Position { get; set; } // Position (length: 1024)
        public string NumberActiveDirectory { get; set; } // NumberActiveDirectory (length: 64)
        public string NameRuleNothing { get; set; } // NameRuleNothing
    }

    // ValueCharacteristicJson
    ///<summary>
    /// Расширяющие атрибуты ЭПО АКСИОК
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ValueCharacteristicJson
    {

        ///<summary>
        /// Ун объекта
        ///</summary>
        public int Id { get; set; } // Id (Primary key)

        ///<summary>
        /// Не на балансе
        ///</summary>
        public string NotOnBalance { get; set; } // NotOnBalance (length: 256)

        ///<summary>
        /// Требует замены
        ///</summary>
        public bool RequiresReplacement { get; set; } // RequiresReplacement

        ///<summary>
        /// Назначение
        ///</summary>
        public string Appointment { get; set; } // Appointment (length: 128)

        ///<summary>
        /// Среда виртуализации
        ///</summary>
        public string VirtualizationEnvironment { get; set; } // VirtualizationEnvironment (length: 128)

        ///<summary>
        /// Участок (Здание)
        ///</summary>
        public string Building { get; set; } // Building (length: 128)

        ///<summary>
        /// Расположение. Этаж
        ///</summary>
        public string FloorLocation { get; set; } // FloorLocation (length: 128)

        ///<summary>
        /// Расположение. Комната
        ///</summary>
        public string RoomLocation { get; set; } // RoomLocation (length: 128)

        ///<summary>
        /// Комната
        ///</summary>
        public string Room { get; set; } // Room (length: 128)

        ///<summary>
        /// Отдел
        ///</summary>
        public string Division { get; set; } // Division (length: 256)

        ///<summary>
        /// Актуальная версия ОС
        ///</summary>
        public string ActualOsVersion { get; set; } // ActualOsVersion (length: 128)

        ///<summary>
        /// Версия фактической ОС
        ///</summary>
        public string OsActualVersion { get; set; } // OsActualVersion (length: 128)

        ///<summary>
        /// Наименование загса
        ///</summary>
        public string ZagsName { get; set; } // ZagsName (length: 128)

        ///<summary>
        /// Адрес загса
        ///</summary>
        public string ZagsAddress { get; set; } // ZagsAddress (length: 128)

        ///<summary>
        /// Тип использования
        ///</summary>
        public string TypeOfUse { get; set; } // TypeOfUse (length: 128)

        ///<summary>
        /// Модель соответствия отправки
        ///</summary>
        public string ModelInDeliveryAccordance { get; set; } // ModelInDeliveryAccordance (length: 128)

        ///<summary>
        /// Номер трансфера
        ///</summary>
        public string TransferContractNumber { get; set; } // TransferContractNumber (length: 128)

        ///<summary>
        /// Версия ПС
        ///</summary>
        public string PsVersion { get; set; } // PsVersion (length: 128)

        ///<summary>
        /// Сетевое имя (NetBIOS)
        ///</summary>
        public string NetBiosName { get; set; } // NetBiosName (length: 128)

        ///<summary>
        /// IP адрес
        ///</summary>
        public string IpAddress { get; set; } // IpAddress (length: 128)

        ///<summary>
        /// Дополнительные IP адреса
        ///</summary>
        public string AdditionalIPs { get; set; } // AdditionalIPs (length: 128)

        ///<summary>
        /// Количество процессоров
        ///</summary>
        public int? CpuCount { get; set; } // CpuCount

        ///<summary>
        /// Количество ядер
        ///</summary>
        public int? CoreCount { get; set; } // CoreCount

        ///<summary>
        /// Тип процессора
        ///</summary>
        public string CpuType { get; set; } // CpuType (length: 128)

        ///<summary>
        /// Частота процессора, МГц
        ///</summary>
        public int? CpuFrequencyMhz { get; set; } // CpuFrequencyMhz

        ///<summary>
        /// ОЗУ (тип)
        ///</summary>
        public string RamType { get; set; } // RamType (length: 128)

        ///<summary>
        /// ОЗУ (размер)
        ///</summary>
        public int? RamSize { get; set; } // RamSize

        ///<summary>
        /// CD/DVD
        ///</summary>
        public string CdOrDvd { get; set; } // CdOrDvd (length: 128)

        ///<summary>
        /// FDD
        ///</summary>
        public string Fdd { get; set; } // Fdd (length: 128)

        ///<summary>
        /// RAID
        ///</summary>
        public string Raid { get; set; } // Raid (length: 128)

        ///<summary>
        /// Общее дисковое пространство, Gb
        ///</summary>
        public int? TotalDiskSpaceGb { get; set; } // TotalDiskSpaceGb

        ///<summary>
        /// Количество HDD
        ///</summary>
        public int? HddCount { get; set; } // HddCount

        ///<summary>
        /// Объем жесткого диска
        ///</summary>
        public int? HddSize { get; set; } // HddSize

        ///<summary>
        /// Тип жесткого диска
        ///</summary>
        public string HddType { get; set; } // HddType (length: 128)

        ///<summary>
        /// Кол-во плат
        ///</summary>
        public int? BoardsNumber { get; set; } // BoardsNumber

        ///<summary>
        /// Кол-во свободных плат
        ///</summary>
        public int? FreeBoardsNumber { get; set; } // FreeBoardsNumber

        ///<summary>
        /// Сетевая карта
        ///</summary>
        public string NetworkAdapter { get; set; } // NetworkAdapter (length: 128)

        ///<summary>
        /// Скорость сетевой карты
        ///</summary>
        public int? NetworkAdapterSpeed { get; set; } // NetworkAdapterSpeed

        ///<summary>
        /// Кол-во внутр абон аналог
        ///</summary>
        public int? InternalAnalogNumber { get; set; } // InternalAnalogNumber

        ///<summary>
        /// Кол-во внутр абон цифровых
        ///</summary>
        public int? InternalDigitNumber { get; set; } // InternalDigitNumber

        ///<summary>
        /// Инвентарный номер ПК, к которому подключен
        ///</summary>
        public string ConnectedPcInventoryNumber { get; set; } // ConnectedPcInventoryNumber (length: 128)

        ///<summary>
        /// Инвентарный номер ИБП, к которому подключен
        ///</summary>
        public string ConnectedUpsInventoryNumber { get; set; } // ConnectedUpsInventoryNumber (length: 128)

        ///<summary>
        /// Инвентарный номер монитора
        ///</summary>
        public string DisplayInventoryNumber { get; set; } // DisplayInventoryNumber (length: 128)

        ///<summary>
        /// Сервисный номер монитора
        ///</summary>
        public string DisplayServiceNumber { get; set; } // DisplayServiceNumber (length: 128)

        ///<summary>
        /// Монитор, марка
        ///</summary>
        public string DisplayBrand { get; set; } // DisplayBrand (length: 128)

        ///<summary>
        /// Тип монитора
        ///</summary>
        public string DisplayType { get; set; } // DisplayType (length: 128)

        ///<summary>
        /// Размер экрана
        ///</summary>
        public string DisplaySize { get; set; } // DisplaySize (length: 128)

        ///<summary>
        /// Максимальное разрешение
        ///</summary>
        public string DisplayMaxResolution { get; set; } // DisplayMaxResolution (length: 128)

        ///<summary>
        /// Тип аналогового подключения городской ввод
        ///</summary>
        public string TypeOfAnalogConnection { get; set; } // TypeOfAnalogConnection (length: 128)

        ///<summary>
        /// Тип цифрового подключения городской ввод
        ///</summary>
        public string TypeOfDigitConnection { get; set; } // TypeOfDigitConnection (length: 128)

        ///<summary>
        /// Численность администраторов УАТС
        ///</summary>
        public int? AdminsCount { get; set; } // AdminsCount

        ///<summary>
        /// Номер ключа
        ///</summary>
        public string KeyNumber { get; set; } // KeyNumber (length: 128)

        ///<summary>
        /// Марка стримера
        ///</summary>
        public string StreamerBrand { get; set; } // StreamerBrand (length: 128)

        ///<summary>
        /// Маркировка картриджей стримера
        ///</summary>
        public string StreamerCartridgeMark { get; set; } // StreamerCartridgeMark (length: 128)

        ///<summary>
        /// Операционная система
        ///</summary>
        public string OperatingSystem { get; set; } // OperatingSystem (length: 128)

        ///<summary>
        /// Сервис пак
        ///</summary>
        public string ServicePack { get; set; } // ServicePack (length: 128)

        ///<summary>
        /// Офисный пакет
        ///</summary>
        public string OfficeSuite { get; set; } // OfficeSuite (length: 128)

        ///<summary>
        /// Фамилия И.О.
        ///</summary>
        public string Fio { get; set; } // Fio (length: 128)

        ///<summary>
        /// Ответственный
        ///</summary>
        public string ResponsiblePerson { get; set; } // ResponsiblePerson (length: 128)

        ///<summary>
        /// Описание
        ///</summary>
        public string Description { get; set; } // Description (length: 128)

        ///<summary>
        /// МАК Адресс
        ///</summary>
        public string MacAddress { get; set; } // MacAddress (length: 128)

        ///<summary>
        /// Гарантия
        ///</summary>
        public System.DateTime? Guarantee { get; set; } // Guarantee

        ///<summary>
        /// Год выпуска
        ///</summary>
        public string YearOfIssue { get; set; } // YearOfIssue (length: 128)

        ///<summary>
        /// Имя компьютера
        ///</summary>
        public string ComputerName { get; set; } // ComputerName (length: 128)

        ///<summary>
        /// Инвентарный номер
        ///</summary>
        public string InventoryNumber { get; set; } // InventoryNumber (length: 128)

        ///<summary>
        /// Комментарий
        ///</summary>
        public string Comments { get; set; } // Comments (length: 128)

        ///<summary>
        /// Контракт
        ///</summary>
        public string SupplyContract { get; set; } // SupplyContract (length: 128)

        ///<summary>
        /// Контракт СТО
        ///</summary>
        public string ContractSto { get; set; } // ContractSto (length: 128)

        ///<summary>
        /// Сервисный номер
        ///</summary>
        public string ServiceNumber { get; set; } // ServiceNumber (length: 128)

        ///<summary>
        /// Серийный номер
        ///</summary>
        public string SerialNumber { get; set; } // SerialNumber (length: 128)

        ///<summary>
        /// Сервер почты
        ///</summary>
        public string MailServer { get; set; } // MailServer (length: 128)

        ///<summary>
        /// Сервер Файлвола
        ///</summary>
        public string FirewallMailServer { get; set; } // FirewallMailServer (length: 128)

        ///<summary>
        /// Файлвол ВКС
        ///</summary>
        public string FirewallForVks { get; set; } // FirewallForVks (length: 128)

        // Foreign keys

        /// <summary>
        /// Parent EpoDocument pointed by [ValueCharacteristicJson].([Id]) (FK_ValueCharacteristicJson_EpoDocument)
        /// </summary>
        public virtual EpoDocument EpoDocument { get; set; } // FK_ValueCharacteristicJson_EpoDocument
    }

    #endregion

    #region POCO Configuration

    // Act
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ActConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Act>
    {
        public ActConfiguration()
            : this("dbo")
        {
        }

        public ActConfiguration(string schema)
        {
            ToTable("Act", schema);
            HasKey(x => x.IdAct);

            Property(x => x.IdAct).HasColumnName(@"IdAct").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsOptional();
            Property(x => x.IdParameter).HasColumnName(@"IdParameter").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClasificationAct).WithMany(b => b.Acts).HasForeignKey(c => c.IdClasification).WillCascadeOnDelete(false); // FK_ClasificationAct_Act
            HasOptional(a => a.ParameterAct).WithMany(b => b.Acts).HasForeignKey(c => c.IdParameter).WillCascadeOnDelete(false); // FK_ParameterAct_Act
        }
    }

    // AksiokAllModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AksiokAllModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AksiokAllModel>
    {
        public AksiokAllModelConfiguration()
            : this("dbo")
        {
        }

        public AksiokAllModelConfiguration(string schema)
        {
            ToTable("AksiokAllModel", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.Soun, x.CanDelete, x.CreateDate, x.IsKit, x.YearOfIssue });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Soun).HasColumnName(@"Soun").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.KindEquipmentName).HasColumnName(@"KindEquipmentName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameType).HasColumnName(@"NameType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameProducer).HasColumnName(@"NameProducer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NumberDoc).HasColumnName(@"NumberDoc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Author).HasColumnName(@"Author").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.CanDelete).HasColumnName(@"CanDelete").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NumberContractDelivery).HasColumnName(@"NumberContractDelivery").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameContractDelivery).HasColumnName(@"NameContractDelivery").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ContractDateDeliveryContract).HasColumnName(@"ContractDateDeliveryContract").HasColumnType("datetime").IsOptional();
            Property(x => x.ExecutorDeliveryContract).HasColumnName(@"ExecutorDeliveryContract").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NumberContractSto).HasColumnName(@"NumberContractSto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameContractSto).HasColumnName(@"NameContractSto").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ContractDateSto).HasColumnName(@"ContractDateSto").HasColumnType("datetime").IsOptional();
            Property(x => x.ExecutorSto).HasColumnName(@"ExecutorSto").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.AgencyName).HasColumnName(@"AgencyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ComputerName).HasColumnName(@"ComputerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerialNumber).HasColumnName(@"SerialNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Identifier).HasColumnName(@"Identifier").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventoryNumber).HasColumnName(@"InventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IsKit).HasColumnName(@"IsKit").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ActNumber).HasColumnName(@"ActNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ActDate).HasColumnName(@"ActDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ExpertiseStatus).HasColumnName(@"ExpertiseStatus").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IndividualServiceNumber).HasColumnName(@"IndividualServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NotOnBalance).HasColumnName(@"NotOnBalance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.YearOfIssue).HasColumnName(@"YearOfIssue").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ExploitationStartYear).HasColumnName(@"ExploitationStartYear").HasColumnType("int").IsOptional();
            Property(x => x.Guarantee).HasColumnName(@"Guarantee").HasColumnType("datetime").IsOptional();
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ServiceStatus).HasColumnName(@"ServiceStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
        }
    }

    // AllIpServerSelect
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllIpServerSelectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllIpServerSelect>
    {
        public AllIpServerSelectConfiguration()
            : this("dbo")
        {
        }

        public AllIpServerSelectConfiguration(string schema)
        {
            ToTable("AllIpServerSelect", schema);
            HasKey(x => new { x.Id, x.InfoStatusReport, x.ColorStatus });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameServer).HasColumnName(@"NameServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.FullIpAdressDataBase).HasColumnName(@"FullIpAdressDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InfoStatusReport).HasColumnName(@"InfoStatusReport").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ColorStatus).HasColumnName(@"ColorStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AllTechnics
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTechnicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllTechnic>
    {
        public AllTechnicConfiguration()
            : this("dbo")
        {
        }

        public AllTechnicConfiguration(string schema)
        {
            ToTable("AllTechnics", schema);
            HasKey(x => new { x.Id, x.IdCategoriaSupport, x.Item, x.WriteOffSign, x.AutoSupport, x.LogicsButton });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdCategoriaSupport).HasColumnName(@"IdCategoriaSupport").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Item).HasColumnName(@"Item").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(13).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameType).HasColumnName(@"NameType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameManufacturer).HasColumnName(@"NameManufacturer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameServer).HasColumnName(@"NameServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Mac).HasColumnName(@"Mac").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();
            Property(x => x.Telephon).HasColumnName(@"Telephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.NameKontract).HasColumnName(@"NameKontract").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameSupply).HasColumnName(@"NameSupply").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DatePostavki).HasColumnName(@"DatePostavki").HasColumnType("date").IsOptional();
            Property(x => x.AutoSupport).HasColumnName(@"AutoSupport").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeToner).HasColumnName(@"TypeToner").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AllTelephon
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTelephonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllTelephon>
    {
        public AllTelephonConfiguration()
            : this("dbo")
        {
        }

        public AllTelephonConfiguration(string schema)
        {
            ToTable("AllTelephon", schema);
            HasKey(x => x.ФИО);

            Property(x => x.ФИО).HasColumnName(@"ФИО").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Коментарий).HasColumnName(@"Коментарий").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.Отдел).HasColumnName(@"Отдел").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Номеркабинета).HasColumnName(@"Номер кабинета").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.Внутреннийтелефон).HasColumnName(@"Внутренний телефон").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Городскойтелефон).HasColumnName(@"Городской телефон").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Серийныйномер).HasColumnName(@"Серийный номер").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IPТелефона).HasColumnName(@"IP Телефона").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MACАдрестелефона).HasColumnName(@"MAC Адрес телефона").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
        }
    }

    // AllTemplateAndTree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AllTemplateAndTreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllTemplateAndTree>
    {
        public AllTemplateAndTreeConfiguration()
            : this("dbo")
        {
        }

        public AllTemplateAndTreeConfiguration(string schema)
        {
            ToTable("AllTemplateAndTree", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Path).HasColumnName(@"Path").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // AnaliticaSysBlokAndMonitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AnaliticaSysBlokAndMonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AnaliticaSysBlokAndMonitor>
    {
        public AnaliticaSysBlokAndMonitorConfiguration()
            : this("dbo")
        {
        }

        public AnaliticaSysBlokAndMonitorConfiguration(string schema)
        {
            ToTable("AnaliticaSysBlokAndMonitors", schema);
            HasKey(x => x.NameMonitor);

            Property(x => x.UsersSysBlok).HasColumnName(@"UsersSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TabelNumberSysBlok).HasColumnName(@"TabelNumberSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameSupplySysBlok).HasColumnName(@"NameSupplySysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameKontractSysBlok).HasColumnName(@"NameKontractSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DatePostavkiSysBlok).HasColumnName(@"DatePostavkiSysBlok").HasColumnType("date").IsOptional();
            Property(x => x.NumberKabinetSysBlok).HasColumnName(@"NumberKabinetSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.StatusingSysBlock).HasColumnName(@"StatusingSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameComputerSysBlock).HasColumnName(@"NameComputerSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumSysBlock).HasColumnName(@"ServiceNumSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNumSysBlock).HasColumnName(@"SerNumSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ComputerNameSysBlock).HasColumnName(@"ComputerNameSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdressSysBlock).HasColumnName(@"IpAdressSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameNameMonitor).HasColumnName(@"NameNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TabelNumberNameMonitor).HasColumnName(@"TabelNumberNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameSupplyNameMonitor).HasColumnName(@"NameSupplyNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameKontractNameMonitor).HasColumnName(@"NameKontractNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DatePostavkiNameMonitor).HasColumnName(@"DatePostavkiNameMonitor").HasColumnType("date").IsOptional();
            Property(x => x.NumberKabinetNameMonitor).HasColumnName(@"NumberKabinetNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.StatusingMonitors).HasColumnName(@"StatusingMonitors").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameMonitor).HasColumnName(@"NameMonitor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SerNumNameMonitor).HasColumnName(@"SerNumNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumMonitorNameMonitor).HasColumnName(@"InventarNumMonitorNameMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // AnalysisEpoAndInventarka
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class AnalysisEpoAndInventarkaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AnalysisEpoAndInventarka>
    {
        public AnalysisEpoAndInventarkaConfiguration()
            : this("dbo")
        {
        }

        public AnalysisEpoAndInventarkaConfiguration(string schema)
        {
            ToTable("AnalysisEpoAndInventarka", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IsPrint).HasColumnName(@"IsPrint").HasColumnType("bit").IsRequired();
            Property(x => x.NameInfoReport).HasColumnName(@"NameInfoReport").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameListXlsx).HasColumnName(@"NameListXlsx").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NameFileXlsx).HasColumnName(@"NameFileXlsx").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ViewReport).HasColumnName(@"ViewReport").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ApplicationsIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ApplicationsIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ApplicationsIfn>
    {
        public ApplicationsIfnConfiguration()
            : this("dbo")
        {
        }

        public ApplicationsIfnConfiguration(string schema)
        {
            ToTable("ApplicationsIfns", schema);
            HasKey(x => x.IdApplicationsIfns);

            Property(x => x.IdApplicationsIfns).HasColumnName(@"IdApplicationsIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdSigmentIfns).HasColumnName(@"IdSigmentIfns").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.SigmentIfn).WithMany(b => b.ApplicationsIfns).HasForeignKey(c => c.IdSigmentIfns); // FK_ApplicationsIfns_SigmentIfns
        }
    }

    // BlockPower
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BlockPower>
    {
        public BlockPowerConfiguration()
            : this("dbo")
        {
        }

        public BlockPowerConfiguration(string schema)
        {
            ToTable("BlockPower", schema);
            HasKey(x => x.IdBlockPowers);

            Property(x => x.IdBlockPowers).HasColumnName(@"IdBlockPowers").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdProizvoditelBP).HasColumnName(@"IdProizvoditelBP").HasColumnType("int").IsOptional();
            Property(x => x.IdModelBP).HasColumnName(@"IdModelBP").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_BlockPower_Kabinet
            HasOptional(a => a.ModelBlockPower).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdModelBP).WillCascadeOnDelete(false); // FK_BlockPower_ModelBlockPower
            HasOptional(a => a.ProizvoditelBlockPower).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdProizvoditelBP).WillCascadeOnDelete(false); // FK_BlockPower_ProizvoditelBlockPower
            HasOptional(a => a.Statusing).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_BlockPower_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_BlockPower_Supply
            HasOptional(a => a.User).WithMany(b => b.BlockPowers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_BlockPower_Users
        }
    }

    // BookAccounting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BookAccountingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BookAccounting>
    {
        public BookAccountingConfiguration()
            : this("dbo")
        {
        }

        public BookAccountingConfiguration(string schema)
        {
            ToTable("BookAccounting", schema);
            HasKey(x => x.IdBook);

            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNameBook).HasColumnName(@"IdNameBook").HasColumnType("int").IsOptional();
            Property(x => x.IdKeys).HasColumnName(@"IdKeys").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.ClassName).HasColumnName(@"ClassName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsFileExists).HasColumnName(@"IsFileExists").HasColumnType("bit").IsOptional();
            Property(x => x.NameBook).HasColumnName(@"NameBook").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Book).HasColumnName(@"Book").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Namedocument).WithMany(b => b.BookAccountings).HasForeignKey(c => c.IdNameBook).WillCascadeOnDelete(false); // FK_BookAccounting_Namedocument
        }
    }

    // BookModels
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class BookModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BookModel>
    {
        public BookModelConfiguration()
            : this("dbo")
        {
        }

        public BookModelConfiguration(string schema)
        {
            ToTable("BookModels", schema);
            HasKey(x => new { x.Keys, x.Id, x.IdBook, x.LogicsButton });

            Property(x => x.RowNum).HasColumnName(@"RowNum").HasColumnType("bigint").IsOptional();
            Property(x => x.Keys).HasColumnName(@"Keys").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Model).HasColumnName(@"Model").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdBook).HasColumnName(@"IdBook").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // Calendar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CalendarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Calendar>
    {
        public CalendarConfiguration()
            : this("dbo")
        {
        }

        public CalendarConfiguration(string schema)
        {
            ToTable("Calendar", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DescriptionVKS).HasColumnName(@"DescriptionVKS").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.FullDescription).HasColumnName(@"FullDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdVKS).HasColumnName(@"IdVKS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(126);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsSTP).HasColumnName(@"IsSTP").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CalendarVksStp
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CalendarVksStpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CalendarVksStp>
    {
        public CalendarVksStpConfiguration()
            : this("dbo")
        {
        }

        public CalendarVksStpConfiguration(string schema)
        {
            ToTable("CalendarVksStp", schema);
            HasKey(x => new { x.Id, x.IsSTP });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DescriptionVKS).HasColumnName(@"DescriptionVKS").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.FullDescription).HasColumnName(@"FullDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdVKS).HasColumnName(@"IdVKS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(126);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsSTP).HasColumnName(@"IsSTP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(22).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // CalendarVksStpView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CalendarVksStpViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CalendarVksStpView>
    {
        public CalendarVksStpViewConfiguration()
            : this("dbo")
        {
        }

        public CalendarVksStpViewConfiguration(string schema)
        {
            ToTable("CalendarVksStpView", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.IsSTP });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DescriptionVKS).HasColumnName(@"DescriptionVKS").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.FullDescription).HasColumnName(@"FullDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdVKS).HasColumnName(@"IdVKS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(126);
            Property(x => x.DateStart).HasColumnName(@"DateStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateFinish).HasColumnName(@"DateFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IsSTP).HasColumnName(@"IsSTP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(22).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // CategoriaTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CategoriaTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CategoriaTemplate>
    {
        public CategoriaTemplateConfiguration()
            : this("dbo")
        {
        }

        public CategoriaTemplateConfiguration(string schema)
        {
            ToTable("CategoriaTemplate", schema);
            HasKey(x => x.IdCategiria);

            Property(x => x.IdCategiria).HasColumnName(@"IdCategiria").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameEngCategoria).HasColumnName(@"NameEngCategoria").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameRusCategoria).HasColumnName(@"NameRusCategoria").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // CategoryPhoneHeaders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CategoryPhoneHeaderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CategoryPhoneHeader>
    {
        public CategoryPhoneHeaderConfiguration()
            : this("dbo")
        {
        }

        public CategoryPhoneHeaderConfiguration(string schema)
        {
            ToTable("CategoryPhoneHeaders", schema);
            HasKey(x => x.IdCategoryHeaders);

            Property(x => x.IdCategoryHeaders).HasColumnName(@"IdCategoryHeaders").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameHeaders).HasColumnName(@"NameHeaders").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ClasificationAct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClasificationActConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClasificationAct>
    {
        public ClasificationActConfiguration()
            : this("dbo")
        {
        }

        public ClasificationActConfiguration(string schema)
        {
            ToTable("ClasificationAct", schema);
            HasKey(x => x.IdClasification);

            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameClasification).HasColumnName(@"NameClasification").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Classification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClassificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Classification>
    {
        public ClassificationConfiguration()
            : this("dbo")
        {
        }

        public ClassificationConfiguration(string schema)
        {
            ToTable("Classification", schema);
            HasKey(x => x.IdClasification);

            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameClass).HasColumnName(@"NameClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ClassParameterTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ClassParameterTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClassParameterTemplate>
    {
        public ClassParameterTemplateConfiguration()
            : this("dbo")
        {
        }

        public ClassParameterTemplateConfiguration(string schema)
        {
            ToTable("ClassParameterTemplate", schema);
            HasKey(x => x.IdClassParameter);

            Property(x => x.IdClassParameter).HasColumnName(@"IdClassParameter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameClassParameter).HasColumnName(@"NameClassParameter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ComputerIpAdressSynhronization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ComputerIpAdressSynhronizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ComputerIpAdressSynhronization>
    {
        public ComputerIpAdressSynhronizationConfiguration()
            : this("dbo")
        {
        }

        public ComputerIpAdressSynhronizationConfiguration(string schema)
        {
            ToTable("ComputerIpAdressSynhronization", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameHost).HasColumnName(@"NameHost").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.StatusIp).HasColumnName(@"StatusIp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MacAdress).HasColumnName(@"MacAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ComputersAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ComputersAndEpoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ComputersAndEpo>
    {
        public ComputersAndEpoConfiguration()
            : this("dbo")
        {
        }

        public ComputersAndEpoConfiguration(string schema)
        {
            ToTable("ComputersAndEpo", schema);
            HasKey(x => new { x.IDвЭПО, x.СерийныйномервЭПО, x.СерийныйномернесоответствиеБДЭПО, x.ИнвентарныйномернесоответствиеБДЭПО, x.ИмянесоответствиеБДЭПО, x.КомнатанесоответствиеБДЭПО });

            Property(x => x.Пользователь).HasColumnName(@"Пользователь").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Модельинвентаризации).HasColumnName(@"Модель инвентаризации").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IDвЭПО).HasColumnName(@"ID в ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномервБД).HasColumnName(@"Серийный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.СерийныйномервЭПО).HasColumnName(@"Серийный номер в ЭПО").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномернесоответствиеБДЭПО).HasColumnName(@"Серийный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИнвентарныйномервБД).HasColumnName(@"Инвентарный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИнвентарныйномервЭПО).HasColumnName(@"Инвентарный номер в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ИнвентарныйномернесоответствиеБДЭПО).HasColumnName(@"Инвентарный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИмявБД).HasColumnName(@"Имя в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмявЭПО).HasColumnName(@"Имя в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмянесоответствиеБДЭПО).HasColumnName(@"Имя несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.КомнатавБД).HasColumnName(@"Комната в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.КомнатавЭПО).HasColumnName(@"Комната в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.КомнатанесоответствиеБДЭПО).HasColumnName(@"Комната несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // ContractOnSto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ContractOnStoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ContractOnSto>
    {
        public ContractOnStoConfiguration()
            : this("dbo")
        {
        }

        public ContractOnStoConfiguration(string schema)
        {
            ToTable("ContractOnSto", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ContractDate).HasColumnName(@"ContractDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Executor).HasColumnName(@"Executor").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // CopySave
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CopySaveConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CopySave>
    {
        public CopySaveConfiguration()
            : this("dbo")
        {
        }

        public CopySaveConfiguration(string schema)
        {
            ToTable("CopySave", schema);
            HasKey(x => x.IdCopySave);

            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameCopySave).HasColumnName(@"NameCopySave").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // DeliveryContract
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DeliveryContractConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeliveryContract>
    {
        public DeliveryContractConfiguration()
            : this("dbo")
        {
        }

        public DeliveryContractConfiguration(string schema)
        {
            ToTable("DeliveryContract", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ContractDate).HasColumnName(@"ContractDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Executor).HasColumnName(@"Executor").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // DepartmentRegulations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DepartmentRegulationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DepartmentRegulation>
    {
        public DepartmentRegulationConfiguration()
            : this("dbo")
        {
        }

        public DepartmentRegulationConfiguration(string schema)
        {
            ToTable("DepartmentRegulations", schema);
            HasKey(x => x.IdOtdel);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Regulations).HasColumnName(@"Regulations").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Otdel).WithOptional(b => b.DepartmentRegulation).WillCascadeOnDelete(false); // FK_Otdel_DepartmentRegulations
        }
    }

    // Document
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Document>
    {
        public DocumentConfiguration()
            : this("dbo")
        {
        }

        public DocumentConfiguration(string schema)
        {
            ToTable("Document", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsOptional();
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.InfoUserFile).HasColumnName(@"InfoUserFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsFileExists).HasColumnName(@"IsFileExists").HasColumnType("bit").IsOptional();
            Property(x => x.Namefile).HasColumnName(@"Namefile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Document_).HasColumnName(@"Document").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Namedocument).WithMany(b => b.Documents).HasForeignKey(c => c.IdNamedocument).WillCascadeOnDelete(false); // FK_Document_Namedocument
            HasOptional(a => a.User).WithMany(b => b.Documents).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Users_Document
        }
    }

    // DocumentModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DocumentModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DocumentModel>
    {
        public DocumentModelConfiguration()
            : this("dbo")
        {
        }

        public DocumentModelConfiguration(string schema)
        {
            ToTable("DocumentModel", schema);
            HasKey(x => new { x.Id, x.LogicsButton });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsOptional();
            Property(x => x.InfoUserFile).HasColumnName(@"InfoUserFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsFileExists).HasColumnName(@"IsFileExists").HasColumnType("bit").IsOptional();
            Property(x => x.Namefile).HasColumnName(@"Namefile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeFile).HasColumnName(@"TypeFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IsActual).HasColumnName(@"IsActual").HasColumnType("bit").IsOptional();
            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // DoubleComputersName
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DoubleComputersNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DoubleComputersName>
    {
        public DoubleComputersNameConfiguration()
            : this("dbo")
        {
        }

        public DoubleComputersNameConfiguration(string schema)
        {
            ToTable("DoubleComputersName", schema);
            HasKey(x => x.IdSysBlock);

            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // EmptyMonitorSupply38
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EmptyMonitorSupply38Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmptyMonitorSupply38>
    {
        public EmptyMonitorSupply38Configuration()
            : this("dbo")
        {
        }

        public EmptyMonitorSupply38Configuration(string schema)
        {
            ToTable("EmptyMonitorSupply38", schema);
            HasKey(x => new { x.Производитель, x.Модель, x.Годвыпуска, x.Гарантия });

            Property(x => x.Типоборудования).HasColumnName(@"Тип оборудования").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.Производитель).HasColumnName(@"Производитель").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Модель).HasColumnName(@"Модель").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Серийныйномер).HasColumnName(@"Серийный номер").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Сервисныйномер).HasColumnName(@"Сервисный номер").HasColumnType("int").IsOptional();
            Property(x => x.Инвентарныйномер).HasColumnName(@"Инвентарный номер").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Годвыпуска).HasColumnName(@"Год выпуска").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Гарантия).HasColumnName(@"Гарантия").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Имякомпьютера).HasColumnName(@"Имя компьютера").HasColumnType("int").IsOptional();
            Property(x => x.IPадрес).HasColumnName(@"IP адрес").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Комментарии).HasColumnName(@"Комментарии").HasColumnType("int").IsOptional();
        }
    }

    // EmptySysBlokSupply40
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EmptySysBlokSupply40Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmptySysBlokSupply40>
    {
        public EmptySysBlokSupply40Configuration()
            : this("dbo")
        {
        }

        public EmptySysBlokSupply40Configuration(string schema)
        {
            ToTable("EmptySysBlokSupply40", schema);
            HasKey(x => new { x.Типоборудования, x.Производитель, x.Годвыпуска, x.Гарантия });

            Property(x => x.Типоборудования).HasColumnName(@"Тип оборудования").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(23).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Производитель).HasColumnName(@"Производитель").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(3).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Модель).HasColumnName(@"Модель").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Серийныйномер).HasColumnName(@"Серийный номер").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Сервисныйномер).HasColumnName(@"Сервисный номер").HasColumnType("int").IsOptional();
            Property(x => x.Инвентарныйномер).HasColumnName(@"Инвентарный номер").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Годвыпуска).HasColumnName(@"Год выпуска").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Гарантия).HasColumnName(@"Гарантия").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Имякомпьютера).HasColumnName(@"Имя компьютера").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.IPадрес).HasColumnName(@"IP адрес").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Комментарии).HasColumnName(@"Комментарии").HasColumnType("int").IsOptional();
        }
    }

    // EpoDocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EpoDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EpoDocument>
    {
        public EpoDocumentConfiguration()
            : this("dbo")
        {
        }

        public EpoDocumentConfiguration(string schema)
        {
            ToTable("EpoDocument", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdEpoDocument).HasColumnName(@"IdEpoDocument").HasColumnType("int").IsOptional();
            Property(x => x.IdEquipmentType).HasColumnName(@"IdEquipmentType").HasColumnType("int").IsOptional();
            Property(x => x.IdProducer).HasColumnName(@"IdProducer").HasColumnType("int").IsOptional();
            Property(x => x.IdEquipmentModel).HasColumnName(@"IdEquipmentModel").HasColumnType("int").IsOptional();
            Property(x => x.IdDeliveryContract).HasColumnName(@"IdDeliveryContract").HasColumnType("int").IsOptional();
            Property(x => x.IdContractOnSto).HasColumnName(@"IdContractOnSto").HasColumnType("int").IsOptional();
            Property(x => x.IdFile).HasColumnName(@"IdFile").HasColumnType("int").IsOptional();
            Property(x => x.IdExpertiseFile).HasColumnName(@"IdExpertiseFile").HasColumnType("int").IsOptional();
            Property(x => x.ComputerName).HasColumnName(@"ComputerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerialNumber).HasColumnName(@"SerialNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Identifier).HasColumnName(@"Identifier").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventoryNumber).HasColumnName(@"InventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IsKit).HasColumnName(@"IsKit").HasColumnType("bit").IsRequired();
            Property(x => x.EquipmentStateSto).HasColumnName(@"EquipmentStateSto").HasColumnType("int").IsOptional();
            Property(x => x.EquipmentState).HasColumnName(@"EquipmentState").HasColumnType("int").IsOptional();
            Property(x => x.ActNumber).HasColumnName(@"ActNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ActDate).HasColumnName(@"ActDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DateOfStatement).HasColumnName(@"DateOfStatement").HasColumnType("datetime").IsOptional();
            Property(x => x.ExpertiseStatus).HasColumnName(@"ExpertiseStatus").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IndividualServiceNumber).HasColumnName(@"IndividualServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NotOnBalance).HasColumnName(@"NotOnBalance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.YearOfIssue).HasColumnName(@"YearOfIssue").HasColumnType("int").IsRequired();
            Property(x => x.ExploitationStartYear).HasColumnName(@"ExploitationStartYear").HasColumnType("int").IsOptional();
            Property(x => x.Guarantee).HasColumnName(@"Guarantee").HasColumnType("datetime").IsOptional();
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ServiceStatus).HasColumnName(@"ServiceStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.OsActualVersion).HasColumnName(@"OsActualVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ActualOsVersion).HasColumnName(@"ActualOsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Appointment).HasColumnName(@"Appointment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeOfUse).HasColumnName(@"TypeOfUse").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Division).HasColumnName(@"Division").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ModelInDeliveryAccordance).HasColumnName(@"ModelInDeliveryAccordance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Building).HasColumnName(@"Building").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FloorLocation).HasColumnName(@"FloorLocation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.RoomLocation).HasColumnName(@"RoomLocation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PsVersion).HasColumnName(@"PsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.BoardsNumber).HasColumnName(@"BoardsNumber").HasColumnType("int").IsOptional();
            Property(x => x.FreeBoardsNumber).HasColumnName(@"FreeBoardsNumber").HasColumnType("int").IsOptional();
            Property(x => x.InternalAnalogNumber).HasColumnName(@"InternalAnalogNumber").HasColumnType("int").IsOptional();
            Property(x => x.InternalDigitNumber).HasColumnName(@"InternalDigitNumber").HasColumnType("int").IsOptional();
            Property(x => x.TypeOfAnalogConnection).HasColumnName(@"TypeOfAnalogConnection").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeOfDigitConnection).HasColumnName(@"TypeOfDigitConnection").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.AdminsCount).HasColumnName(@"AdminsCount").HasColumnType("int").IsOptional();
            Property(x => x.KeyNumber).HasColumnName(@"KeyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RequiresReplacement).HasColumnName(@"RequiresReplacement").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasOptional(a => a.ContractOnSto).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdContractOnSto).WillCascadeOnDelete(false); // FK_EpoDocument_ContractOnSto
            HasOptional(a => a.DeliveryContract).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdDeliveryContract).WillCascadeOnDelete(false); // FK_EpoDocument_DeliveryContract
            HasOptional(a => a.EquipmentModel).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdEquipmentModel).WillCascadeOnDelete(false); // FK_EpoDocument_EquipmentModel
            HasOptional(a => a.EquipmentType).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdEquipmentType).WillCascadeOnDelete(false); // FK_EpoDocument_EquipmentType
            HasOptional(a => a.ExpertiseFile).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdExpertiseFile).WillCascadeOnDelete(false); // FK_EpoDocument_ExpertiseFile
            HasOptional(a => a.File).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdFile).WillCascadeOnDelete(false); // FK_EpoDocument_File
            HasOptional(a => a.ModelDocumentType).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdEpoDocument).WillCascadeOnDelete(false); // FK_EpoDocument_ModelDocumentType
            HasOptional(a => a.Producer).WithMany(b => b.EpoDocuments).HasForeignKey(c => c.IdProducer).WillCascadeOnDelete(false); // FK_EpoDocument_Producer
        }
    }

    // EquipmentModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentModel>
    {
        public EquipmentModelConfiguration()
            : this("dbo")
        {
        }

        public EquipmentModelConfiguration(string schema)
        {
            ToTable("EquipmentModel", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsOptional();
        }
    }

    // EquipmentSto
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentStoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentSto>
    {
        public EquipmentStoConfiguration()
            : this("dbo")
        {
        }

        public EquipmentStoConfiguration(string schema)
        {
            ToTable("EquipmentSto", schema);
            HasKey(x => new { x.ID, x.Soun, x.MifnsObject, x.CodeObject, x.ViewObject, x.TypeObject, x.ManufacturerObject, x.ModelObject, x.SetObject, x.ClusterObject, x.StoPrevious, x.StoCurrent, x.Sto, x.SerialNumber, x.YearOfIssue, x.Guarantee, x.SupplyContract });

            Property(x => x.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Soun).HasColumnName(@"Soun").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MifnsObject).HasColumnName(@"MifnsObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CodeObject).HasColumnName(@"CodeObject").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ViewObject).HasColumnName(@"ViewObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ManufacturerObject).HasColumnName(@"ManufacturerObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ModelObject).HasColumnName(@"ModelObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SetObject).HasColumnName(@"SetObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClusterObject).HasColumnName(@"ClusterObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StoPrevious).HasColumnName(@"StoPrevious").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StoCurrent).HasColumnName(@"StoCurrent").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sto).HasColumnName(@"Sto").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SerialNumber).HasColumnName(@"SerialNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumber).HasColumnName(@"InventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber2017).HasColumnName(@"ServiceNumber2017").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IsNotBalansObject).HasColumnName(@"IsNotBalansObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.YearOfIssue).HasColumnName(@"YearOfIssue").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Guarantee).HasColumnName(@"Guarantee").HasColumnType("smalldatetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceStatus).HasColumnName(@"ServiceStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SupplyContract).HasColumnName(@"SupplyContract").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ContractSto).HasColumnName(@"ContractSto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CountOfLicensesSip).HasColumnName(@"CountOfLicensesSip").HasColumnType("int").IsOptional();
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ModelDeliveryNote).HasColumnName(@"ModelDeliveryNote").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ActualOsVersion).HasColumnName(@"ActualOsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VersionOs).HasColumnName(@"VersionOs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameZags).HasColumnName(@"NameZags").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.AdressZags).HasColumnName(@"AdressZags").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TransferAgreementNumber).HasColumnName(@"TransferAgreementNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsNotNullBalansObject).HasColumnName(@"IsNotNullBalansObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Ippointment).HasColumnName(@"Ippointment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeUse).HasColumnName(@"TypeUse").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VirtualizationEnvironment).HasColumnName(@"VirtualizationEnvironment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Department).HasColumnName(@"Department").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Plot).HasColumnName(@"Plot").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.LocationFloor).HasColumnName(@"LocationFloor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.LocationRoom).HasColumnName(@"LocationRoom").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Room).HasColumnName(@"Room").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.VersionPs).HasColumnName(@"VersionPs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NetworkName).HasColumnName(@"NetworkName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdrees).HasColumnName(@"IpAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.AdditionalIpAdrees).HasColumnName(@"AdditionalIpAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdreesStk).HasColumnName(@"IpAdreesStk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdreesStkMikro).HasColumnName(@"IpAdreesStkMikro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MacAdrees).HasColumnName(@"MacAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountProcessor).HasColumnName(@"CountProcessor").HasColumnType("int").IsOptional();
            Property(x => x.CountCores).HasColumnName(@"CountCores").HasColumnType("int").IsOptional();
            Property(x => x.Mhz).HasColumnName(@"Mhz").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeMemory).HasColumnName(@"TypeMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SizeMemory).HasColumnName(@"SizeMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeProcessor).HasColumnName(@"TypeProcessor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CdDvd).HasColumnName(@"CdDvd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Fdd).HasColumnName(@"Fdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Raid).HasColumnName(@"Raid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.PublicMemory).HasColumnName(@"PublicMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountHdd).HasColumnName(@"CountHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.VolumeHdd).HasColumnName(@"VolumeHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeHdd).HasColumnName(@"TypeHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountBoards).HasColumnName(@"CountBoards").HasColumnType("int").IsOptional();
            Property(x => x.CountFreeBoards).HasColumnName(@"CountFreeBoards").HasColumnType("int").IsOptional();
            Property(x => x.NetworkCard).HasColumnName(@"NetworkCard").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SpeedNetworkCard).HasColumnName(@"SpeedNetworkCard").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountSubscribersAnalog).HasColumnName(@"CountSubscribersAnalog").HasColumnType("int").IsOptional();
            Property(x => x.CountSubscribersDigital).HasColumnName(@"CountSubscribersDigital").HasColumnType("int").IsOptional();
            Property(x => x.InventoryNumberPc).HasColumnName(@"InventoryNumberPc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumberIbp).HasColumnName(@"InventoryNumberIbp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumberMonitor).HasColumnName(@"InventoryNumberMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumberMonitor).HasColumnName(@"ServiceNumberMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ModelMonitor).HasColumnName(@"ModelMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeMonitor).HasColumnName(@"TypeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SizeMonitor).HasColumnName(@"SizeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MaxSizeMonitor).HasColumnName(@"MaxSizeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeAnalog).HasColumnName(@"TypeAnalog").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeDigital).HasColumnName(@"TypeDigital").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CountAdmin).HasColumnName(@"CountAdmin").HasColumnType("int").IsOptional();
            Property(x => x.NumberKey).HasColumnName(@"NumberKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MarkaStrim).HasColumnName(@"MarkaStrim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MarkaKardStrim).HasColumnName(@"MarkaKardStrim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Os).HasColumnName(@"Os").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServicePack).HasColumnName(@"ServicePack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OfficePack).HasColumnName(@"OfficePack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Fio).HasColumnName(@"Fio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MainFio).HasColumnName(@"MainFio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Info).HasColumnName(@"Info").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // EquipmentType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EquipmentTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentType>
    {
        public EquipmentTypeConfiguration()
            : this("dbo")
        {
        }

        public EquipmentTypeConfiguration(string schema)
        {
            ToTable("EquipmentType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsOptional();
        }
    }

    // Error
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Error>
    {
        public ErrorConfiguration()
            : this("dbo")
        {
        }

        public ErrorConfiguration(string schema)
        {
            ToTable("Error", schema);
            HasKey(x => new { x.NameCategory, x.WriteOffSign });

            Property(x => x.ErrorModel).HasColumnName(@"ErrorModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(96);
            Property(x => x.SmallName).HasColumnName(@"SmallName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameCategory).HasColumnName(@"NameCategory").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(19).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Model).HasColumnName(@"Model").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // ErrorTokenUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ErrorTokenUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ErrorTokenUser>
    {
        public ErrorTokenUserConfiguration()
            : this("dbo")
        {
        }

        public ErrorTokenUserConfiguration(string schema)
        {
            ToTable("ErrorTokenUser", schema);
            HasKey(x => x.IdToken);

            Property(x => x.IdToken).HasColumnName(@"IdToken").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SmallName).HasColumnName(@"SmallName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SmallNameU1).HasColumnName(@"SmallNameU1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNumSysBlock).HasColumnName(@"SerNumSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputerSysBlock).HasColumnName(@"NameComputerSysBlock").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNumFact).HasColumnName(@"SerNumFact").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputerFact).HasColumnName(@"NameComputerFact").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // ErrorUsersNotActual
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ErrorUsersNotActualConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ErrorUsersNotActual>
    {
        public ErrorUsersNotActualConfiguration()
            : this("dbo")
        {
        }

        public ErrorUsersNotActualConfiguration(string schema)
        {
            ToTable("ErrorUsersNotActual", schema);
            HasKey(x => new { x.StatusText, x.NameCategory });

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("int").IsOptional();
            Property(x => x.StatusText).HasColumnName(@"StatusText").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ColorStatus).HasColumnName(@"ColorStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameCategory).HasColumnName(@"NameCategory").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(14).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Model).HasColumnName(@"Model").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
        }
    }

    // EventProcess
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class EventProcessConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EventProcess>
    {
        public EventProcessConfiguration()
            : this("dbo")
        {
        }

        public EventProcessConfiguration(string schema)
        {
            ToTable("EventProcess", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameProcess).HasColumnName(@"NameProcess").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DayX).HasColumnName(@"DayX").HasColumnType("int").IsOptional();
            Property(x => x.HoursX).HasColumnName(@"HoursX").HasColumnType("int").IsOptional();
            Property(x => x.MinutesX).HasColumnName(@"MinutesX").HasColumnType("int").IsOptional();
            Property(x => x.ParametersEvent).HasColumnName(@"ParametersEvent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsComplete).HasColumnName(@"IsComplete").HasColumnType("bit").IsOptional();
            Property(x => x.DataStart).HasColumnName(@"DataStart").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DataFinish).HasColumnName(@"DataFinish").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // ExpertiseFile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ExpertiseFileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExpertiseFile>
    {
        public ExpertiseFileConfiguration()
            : this("dbo")
        {
        }

        public ExpertiseFileConfiguration(string schema)
        {
            ToTable("ExpertiseFile", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // File
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<File>
    {
        public FileConfiguration()
            : this("dbo")
        {
        }

        public FileConfiguration(string schema)
        {
            ToTable("File", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // FullModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullModel>
    {
        public FullModelConfiguration()
            : this("dbo")
        {
        }

        public FullModelConfiguration(string schema)
        {
            ToTable("FullModel", schema);
            HasKey(x => x.IdModel);

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.UrlModel).HasColumnName(@"UrlModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.AutoSupport).HasColumnName(@"AutoSupport").HasColumnType("bit").IsRequired();
            Property(x => x.TypeToner).HasColumnName(@"TypeToner").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdClasification).HasColumnName(@"IdClasification").HasColumnType("int").IsRequired();
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.FullModels).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_FullModel_FullСategory
            HasRequired(a => a.Classification).WithMany(b => b.FullModels).HasForeignKey(c => c.IdClasification).WillCascadeOnDelete(false); // FK_FullModel_Classification
        }
    }

    // FullProizvoditel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullProizvoditelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullProizvoditel>
    {
        public FullProizvoditelConfiguration()
            : this("dbo")
        {
        }

        public FullProizvoditelConfiguration(string schema)
        {
            ToTable("FullProizvoditel", schema);
            HasKey(x => x.IdProizvoditel);

            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameProizvoditel).HasColumnName(@"NameProizvoditel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // FullTemplateSupport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullTemplateSupportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullTemplateSupport>
    {
        public FullTemplateSupportConfiguration()
            : this("dbo")
        {
        }

        public FullTemplateSupportConfiguration(string schema)
        {
            ToTable("FullTemplateSupport", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.InfoTemplate).HasColumnName(@"InfoTemplate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IdCategiria).HasColumnName(@"IdCategiria").HasColumnType("int").IsRequired();
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IsVisibleUserLk).HasColumnName(@"IsVisibleUserLk").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.CategoriaTemplate).WithMany(b => b.FullTemplateSupports).HasForeignKey(c => c.IdCategiria).WillCascadeOnDelete(false); // FK_FullTemplateSupport_CategoriaTemplate
        }
    }

    // FullСategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class FullСategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FullСategory>
    {
        public FullСategoryConfiguration()
            : this("dbo")
        {
        }

        public FullСategoryConfiguration(string schema)
        {
            ToTable("FullСategory", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdEquipmentType).HasColumnName(@"IdEquipmentType").HasColumnType("int").IsOptional();
            Property(x => x.IdProducer).HasColumnName(@"IdProducer").HasColumnType("int").IsOptional();
            Property(x => x.IdEquipmentModel).HasColumnName(@"IdEquipmentModel").HasColumnType("int").IsOptional();
            Property(x => x.IsSignOfRelevance).HasColumnName(@"IsSignOfRelevance").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.EquipmentModel).WithMany(b => b.FullСategory).HasForeignKey(c => c.IdEquipmentModel).WillCascadeOnDelete(false); // FK_FullСategory_EquipmentModel
            HasOptional(a => a.EquipmentType).WithMany(b => b.FullСategory).HasForeignKey(c => c.IdEquipmentType).WillCascadeOnDelete(false); // FK_FullСategory_EquipmentType
            HasOptional(a => a.Producer).WithMany(b => b.FullСategory).HasForeignKey(c => c.IdProducer).WillCascadeOnDelete(false); // FK_FullСategory_Producer
        }
    }

    // History
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class HistoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<History>
    {
        public HistoryConfiguration()
            : this("dbo")
        {
        }

        public HistoryConfiguration(string schema)
        {
            ToTable("History", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.NameModelClass).HasColumnName(@"NameModelClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.OldModelColums).HasColumnName(@"OldModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NewModelColums).HasColumnName(@"NewModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // HistoryLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class HistoryLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HistoryLog>
    {
        public HistoryLogConfiguration()
            : this("dbo")
        {
        }

        public HistoryLogConfiguration(string schema)
        {
            ToTable("HistoryLog", schema);
            HasKey(x => x.NameUser);

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameModelClass).HasColumnName(@"NameModelClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.OldModelColums).HasColumnName(@"OldModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NewModelColums).HasColumnName(@"NewModelColums").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoColumn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoColumnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoColumn>
    {
        public InfoColumnConfiguration()
            : this("dbo")
        {
        }

        public InfoColumnConfiguration(string schema)
        {
            ToTable("InfoColumn", schema);
            HasKey(x => new { x.Id, x.IdTable });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTable).HasColumnName(@"IdTable").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameColumn).HasColumnName(@"NameColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoColumn_).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.InfoTable).WithMany(b => b.InfoColumns).HasForeignKey(c => c.IdTable).WillCascadeOnDelete(false); // FK_InfoColumn_InfoTable
        }
    }

    // InfoLogic
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoLogicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoLogic>
    {
        public InfoLogicConfiguration()
            : this("dbo")
        {
        }

        public InfoLogicConfiguration(string schema)
        {
            ToTable("InfoLogic", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InfoProcedure).HasColumnName(@"InfoProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ParamProcedure).HasColumnName(@"ParamProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameProcedure).HasColumnName(@"NameProcedure").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoTable>
    {
        public InfoTableConfiguration()
            : this("dbo")
        {
        }

        public InfoTableConfiguration(string schema)
        {
            ToTable("InfoTable", schema);
            HasKey(x => x.IdTable);

            Property(x => x.IdTable).HasColumnName(@"IdTable").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTable).HasColumnName(@"NameTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoTable_).HasColumnName(@"InfoTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsDeleteDataStartNew).HasColumnName(@"IsDeleteDataStartNew").HasColumnType("bit").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoView>
    {
        public InfoViewConfiguration()
            : this("dbo")
        {
        }

        public InfoViewConfiguration(string schema)
        {
            ToTable("InfoView", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameView).HasColumnName(@"NameView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NameViewColumns).HasColumnName(@"NameViewColumns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InfoColumn).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.FormatView).HasColumnName(@"FormatView").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.IsVisible).HasColumnName(@"IsVisible").HasColumnType("bit").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // InventarNotHostName
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InventarNotHostNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InventarNotHostName>
    {
        public InventarNotHostNameConfiguration()
            : this("dbo")
        {
        }

        public InventarNotHostNameConfiguration(string schema)
        {
            ToTable("InventarNotHostName", schema);
            HasKey(x => x.IdSysBlock);

            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameUsers).HasColumnName(@"NameUsers").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Invent).HasColumnName(@"Invent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
        }
    }

    // JournalAis3
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class JournalAis3Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JournalAis3>
    {
        public JournalAis3Configuration()
            : this("dbo")
        {
        }

        public JournalAis3Configuration(string schema)
        {
            ToTable("JournalAis3", schema);
            HasKey(x => x.IdJournal);

            Property(x => x.IdJournal).HasColumnName(@"IdJournal").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTask).HasColumnName(@"IdTask").HasColumnType("int").IsRequired();
            Property(x => x.IdResource).HasColumnName(@"IdResource").HasColumnType("int").IsRequired();
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.NameTarget).HasColumnName(@"NameTarget").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.TaskUser).HasColumnName(@"TaskUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateTask).HasColumnName(@"DateTask").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.User).WithMany(b => b.JournalAis3).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Users_JournalAis3
            HasRequired(a => a.ResourceIt).WithMany(b => b.JournalAis3).HasForeignKey(c => c.IdResource).WillCascadeOnDelete(false); // FK_ResourceIt_JournalAis3
            HasRequired(a => a.TaskAis3).WithMany(b => b.JournalAis3).HasForeignKey(c => c.IdTask).WillCascadeOnDelete(false); // FK_TaskAis3_JournalAis3
        }
    }

    // Kabinet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class KabinetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Kabinet>
    {
        public KabinetConfiguration()
            : this("dbo")
        {
        }

        public KabinetConfiguration(string schema)
        {
            ToTable("Kabinet", schema);
            HasKey(x => x.IdNumberKabinet);

            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // LogicaSelect
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class LogicaSelectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogicaSelect>
    {
        public LogicaSelectConfiguration()
            : this("dbo")
        {
        }

        public LogicaSelectConfiguration(string schema)
        {
            ToTable("LogicaSelect", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SelectInfo).HasColumnName(@"SelectInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameDll).HasColumnName(@"NameDll").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FindNameSpace).HasColumnName(@"FindNameSpace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsResultXml).HasColumnName(@"IsResultXml").HasColumnType("bit").IsOptional();
            Property(x => x.NameReportList).HasColumnName(@"NameReportList").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameReportFile).HasColumnName(@"NameReportFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SelectedParametr).HasColumnName(@"SelectedParametr").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SelectUser).HasColumnName(@"SelectUser").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailGroup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailGroupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailGroup>
    {
        public MailGroupConfiguration()
            : this("dbo")
        {
        }

        public MailGroupConfiguration(string schema)
        {
            ToTable("MailGroup", schema);
            HasKey(x => x.IdGroupMail);

            Property(x => x.IdGroupMail).HasColumnName(@"IdGroupMail").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdOtdelNumber).HasColumnName(@"IdOtdelNumber").HasColumnType("int").IsRequired();
            Property(x => x.NameGroup).HasColumnName(@"NameGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailIdentifier
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailIdentifierConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailIdentifier>
    {
        public MailIdentifierConfiguration()
            : this("dbo")
        {
        }

        public MailIdentifierConfiguration(string schema)
        {
            ToTable("MailIdentifier", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IdGroupMail).HasColumnName(@"IdGroupMail").HasColumnType("int").IsOptional();
            Property(x => x.IdentifierUser).HasColumnName(@"IdentifierUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.MailGroup).WithMany(b => b.MailIdentifiers).HasForeignKey(c => c.IdGroupMail).WillCascadeOnDelete(false); // FK_MailIdentifier_MailGroup
            HasRequired(a => a.User).WithOptional(b => b.MailIdentifier); // FK_MailIdentifier_Users
        }
    }

    // MailIn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailInConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailIn>
    {
        public MailInConfiguration()
            : this("dbo")
        {
        }

        public MailInConfiguration(string schema)
        {
            ToTable("MailIn", schema);
            HasKey(x => new { x.Id, x.IdMail, x.MailAdress, x.IsFile });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MailAdressSend).HasColumnName(@"MailAdressSend").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdress).HasColumnName(@"MailAdress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsFile).HasColumnName(@"IsFile").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateInputServer).HasColumnName(@"DateInputServer").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailInView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailInViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailInView>
    {
        public MailInViewConfiguration()
            : this("dbo")
        {
        }

        public MailInViewConfiguration(string schema)
        {
            ToTable("MailInView", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.IdMail, x.MailAdress, x.IsFile });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MailAdressSend).HasColumnName(@"MailAdressSend").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdress).HasColumnName(@"MailAdress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsFile).HasColumnName(@"IsFile").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateInputServer).HasColumnName(@"DateInputServer").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailLotusOutlookIn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailLotusOutlookInConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailLotusOutlookIn>
    {
        public MailLotusOutlookInConfiguration()
            : this("dbo")
        {
        }

        public MailLotusOutlookInConfiguration(string schema)
        {
            ToTable("MailLotusOutlookIn", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.MailAdressSend).HasColumnName(@"MailAdressSend").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdress).HasColumnName(@"MailAdress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Body).HasColumnName(@"Body").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.FullPathFile).HasColumnName(@"FullPathFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameFile).HasColumnName(@"NameFile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.FileMail).HasColumnName(@"FileMail").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.DateInputServer).HasColumnName(@"DateInputServer").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailLotusOutlookOut
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailLotusOutlookOutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailLotusOutlookOut>
    {
        public MailLotusOutlookOutConfiguration()
            : this("dbo")
        {
        }

        public MailLotusOutlookOutConfiguration(string schema)
        {
            ToTable("MailLotusOutlookOut", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.MailAdressIn).HasColumnName(@"MailAdressIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdressOut).HasColumnName(@"MailAdressOut").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Body).HasColumnName(@"Body").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.FullPathListFile).HasColumnName(@"FullPathListFile").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NameFileZip).HasColumnName(@"NameFileZip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.FileMailZip).HasColumnName(@"FileMailZip").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.ErrorMail).HasColumnName(@"ErrorMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailOut
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailOutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailOut>
    {
        public MailOutConfiguration()
            : this("dbo")
        {
        }

        public MailOutConfiguration(string schema)
        {
            ToTable("MailOut", schema);
            HasKey(x => new { x.Id, x.IdMail, x.MailAdressOut, x.IsFile });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MailAdressIn).HasColumnName(@"MailAdressIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdressOut).HasColumnName(@"MailAdressOut").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsFile).HasColumnName(@"IsFile").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ErrorMail).HasColumnName(@"ErrorMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // MailOutView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MailOutViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MailOutView>
    {
        public MailOutViewConfiguration()
            : this("dbo")
        {
        }

        public MailOutViewConfiguration(string schema)
        {
            ToTable("MailOutView", schema);
            HasKey(x => new { x.LogicsButton, x.Id, x.IdMail, x.MailAdressOut, x.IsFile });

            Property(x => x.LogicsButton).HasColumnName(@"LogicsButton").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdMail).HasColumnName(@"IdMail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MailAdressIn).HasColumnName(@"MailAdressIn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MailAdressOut).HasColumnName(@"MailAdressOut").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SubjectMail).HasColumnName(@"SubjectMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IsFile).HasColumnName(@"IsFile").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ErrorMail).HasColumnName(@"ErrorMail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ManufacturerSeverEquipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ManufacturerSeverEquipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ManufacturerSeverEquipment>
    {
        public ManufacturerSeverEquipmentConfiguration()
            : this("dbo")
        {
        }

        public ManufacturerSeverEquipmentConfiguration(string schema)
        {
            ToTable("ManufacturerSeverEquipment", schema);
            HasKey(x => x.IdManufacturerSeverEquipment);

            Property(x => x.IdManufacturerSeverEquipment).HasColumnName(@"IdManufacturerSeverEquipment").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameManufacturer).HasColumnName(@"NameManufacturer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Mfu
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MfuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Mfu>
    {
        public MfuConfiguration()
            : this("dbo")
        {
        }

        public MfuConfiguration(string schema)
        {
            ToTable("Mfu", schema);
            HasKey(x => x.IdMfu);

            Property(x => x.IdMfu).HasColumnName(@"IdMfu").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdCopySave).HasColumnName(@"IdCopySave").HasColumnType("int").IsOptional();
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.CopySave).WithMany(b => b.Mfus).HasForeignKey(c => c.IdCopySave).WillCascadeOnDelete(false); // FK_Mfu_CopySave
            HasOptional(a => a.FullModel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Mfu_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Mfus).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Mfu_FullProizvoditel
            HasOptional(a => a.Kabinet).WithMany(b => b.Mfus).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Mfu_Kabinet
            HasOptional(a => a.Statusing).WithMany(b => b.Mfus).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Mfu_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.Mfus).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Mfu_Supply
            HasOptional(a => a.User).WithMany(b => b.Mfus).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Mfu_Users
        }
    }

    // MfuAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MfuAndEpoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MfuAndEpo>
    {
        public MfuAndEpoConfiguration()
            : this("dbo")
        {
        }

        public MfuAndEpoConfiguration(string schema)
        {
            ToTable("MfuAndEpo", schema);
            HasKey(x => new { x.IDвЭПО, x.СерийныйномервЭПО, x.СерийныйномернесоответствиеБДЭПО, x.ИнвентарныйномернесоответствиеБДЭПО, x.ИмянесоответствиеБДЭПО, x.КомнатанесоответствиеБДЭПО });

            Property(x => x.Пользователь).HasColumnName(@"Пользователь").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Модельинвентаризации).HasColumnName(@"Модель инвентаризации").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IDвЭПО).HasColumnName(@"ID в ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномервБД).HasColumnName(@"Серийный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.СерийныйномервЭПО).HasColumnName(@"Серийный номер в ЭПО").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномернесоответствиеБДЭПО).HasColumnName(@"Серийный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИнвентарныйномервБД).HasColumnName(@"Инвентарный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИнвентарныйномервЭПО).HasColumnName(@"Инвентарный номер в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ИнвентарныйномернесоответствиеБДЭПО).HasColumnName(@"Инвентарный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИмявБД).HasColumnName(@"Имя в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмявЭПО).HasColumnName(@"Имя в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмянесоответствиеБДЭПО).HasColumnName(@"Имя несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.КомнатавБД).HasColumnName(@"Комната в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.КомнатавЭПО).HasColumnName(@"Комната в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.КомнатанесоответствиеБДЭПО).HasColumnName(@"Комната несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // ModelBlockPower
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelBlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelBlockPower>
    {
        public ModelBlockPowerConfiguration()
            : this("dbo")
        {
        }

        public ModelBlockPowerConfiguration(string schema)
        {
            ToTable("ModelBlockPower", schema);
            HasKey(x => x.IdModelBP);

            Property(x => x.IdModelBP).HasColumnName(@"IdModelBP").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.ModelBlockPowers).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_ModelBlockPower_FullСategory
        }
    }

    // ModelDocumentType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelDocumentTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelDocumentType>
    {
        public ModelDocumentTypeConfiguration()
            : this("dbo")
        {
        }

        public ModelDocumentTypeConfiguration(string schema)
        {
            ToTable("ModelDocumentType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Soun).HasColumnName(@"Soun").HasColumnType("int").IsRequired();
            Property(x => x.DocumentType).HasColumnName(@"DocumentType").HasColumnType("int").IsRequired();
            Property(x => x.KindEquipmentName).HasColumnName(@"KindEquipmentName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CategoriesTruName).HasColumnName(@"CategoriesTruName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Author).HasColumnName(@"Author").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.CanDelete).HasColumnName(@"CanDelete").HasColumnType("bit").IsRequired();
            Property(x => x.AgencyName).HasColumnName(@"AgencyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired();
        }
    }

    // ModelOtdels
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelOtdel>
    {
        public ModelOtdelConfiguration()
            : this("dbo")
        {
        }

        public ModelOtdelConfiguration(string schema)
        {
            ToTable("ModelOtdels", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GuidOtdel).HasColumnName(@"GuidOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ModelOther
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelOtherConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelOther>
    {
        public ModelOtherConfiguration()
            : this("dbo")
        {
        }

        public ModelOtherConfiguration(string schema)
        {
            ToTable("ModelOther", schema);
            HasKey(x => x.IdModelOther);

            Property(x => x.IdModelOther).HasColumnName(@"IdModelOther").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.ModelOthers).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_ModelOther_FullСategory
        }
    }

    // ModelPosition
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelPositionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelPosition>
    {
        public ModelPositionConfiguration()
            : this("dbo")
        {
        }

        public ModelPositionConfiguration(string schema)
        {
            ToTable("ModelPosition", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GuidPosition).HasColumnName(@"GuidPosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(124);
            Property(x => x.NamePosition).HasColumnName(@"NamePosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ModelSeverEquipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelSeverEquipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelSeverEquipment>
    {
        public ModelSeverEquipmentConfiguration()
            : this("dbo")
        {
        }

        public ModelSeverEquipmentConfiguration(string schema)
        {
            ToTable("ModelSeverEquipment", schema);
            HasKey(x => x.IdModelSeverEquipment);

            Property(x => x.IdModelSeverEquipment).HasColumnName(@"IdModelSeverEquipment").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.ModelSeverEquipments).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_ModelSeverEquipment_FullСategory
        }
    }

    // ModelSwithes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ModelSwitheConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ModelSwithe>
    {
        public ModelSwitheConfiguration()
            : this("dbo")
        {
        }

        public ModelSwitheConfiguration(string schema)
        {
            ToTable("ModelSwithes", schema);
            HasKey(x => x.IdModelSwithes);

            Property(x => x.IdModelSwithes).HasColumnName(@"IdModelSwithes").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CountPort).HasColumnName(@"CountPort").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.ModelSwithes).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_ModelSwithes_FullСategory
        }
    }

    // Monitors
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class MonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Monitor>
    {
        public MonitorConfiguration()
            : this("dbo")
        {
        }

        public MonitorConfiguration(string schema)
        {
            ToTable("Monitors", schema);
            HasKey(x => x.IdMonitor);

            Property(x => x.IdMonitor).HasColumnName(@"IdMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumMonitor).HasColumnName(@"InventarNumMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.Monitors).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Monitors_Kabinet
            HasOptional(a => a.NameMonitor).WithMany(b => b.Monitors).HasForeignKey(c => c.IdModelMonitor).WillCascadeOnDelete(false); // FK_Monitors_NameMonitor
            HasOptional(a => a.Statusing).WithMany(b => b.Monitors).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Statusing_Monitors
            HasOptional(a => a.Supply).WithMany(b => b.Monitors).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Monitors_Supply
            HasOptional(a => a.User).WithMany(b => b.Monitors).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Monitors_Users
        }
    }

    // Namedocument
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NamedocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Namedocument>
    {
        public NamedocumentConfiguration()
            : this("dbo")
        {
        }

        public NamedocumentConfiguration(string schema)
        {
            ToTable("Namedocument", schema);
            HasKey(x => x.IdNamedocument);

            Property(x => x.IdNamedocument).HasColumnName(@"IdNamedocument").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDocument).HasColumnName(@"NameDocument").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // NameHostIpAdress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameHostIpAdressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameHostIpAdress>
    {
        public NameHostIpAdressConfiguration()
            : this("dbo")
        {
        }

        public NameHostIpAdressConfiguration(string schema)
        {
            ToTable("NameHostIpAdress", schema);
            HasKey(x => x.IdSysBlock);

            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameHost).HasColumnName(@"NameHost").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IpAdresDomain).HasColumnName(@"IpAdresDomain").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
        }
    }

    // NameMonitor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameMonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameMonitor>
    {
        public NameMonitorConfiguration()
            : this("dbo")
        {
        }

        public NameMonitorConfiguration(string schema)
        {
            ToTable("NameMonitor", schema);
            HasKey(x => x.IdModelMonitor);

            Property(x => x.IdModelMonitor).HasColumnName(@"IdModelMonitor").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameManufacturer).HasColumnName(@"NameManufacturer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.NameMonitors).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_NameMonitor_FullСategory
        }
    }

    // NameSysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class NameSysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NameSysBlock>
    {
        public NameSysBlockConfiguration()
            : this("dbo")
        {
        }

        public NameSysBlockConfiguration(string schema)
        {
            ToTable("NameSysBlock", schema);
            HasKey(x => x.IdModelSysBlock);

            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdFullCategoria).HasColumnName(@"IdFullCategoria").HasColumnType("int").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullСategory).WithMany(b => b.NameSysBlocks).HasForeignKey(c => c.IdFullCategoria).WillCascadeOnDelete(false); // FK_NameSysBlock_FullСategory
        }
    }

    // Organization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OrganizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Organization>
    {
        public OrganizationConfiguration()
            : this("dbo")
        {
        }

        public OrganizationConfiguration(string schema)
        {
            ToTable("Organization", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NumberIfns).HasColumnName(@"NumberIfns").HasColumnType("int").IsRequired();
            Property(x => x.CodeIfns).HasColumnName(@"CodeIfns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.AddressOrganization).HasColumnName(@"AddressOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameOrganization).HasColumnName(@"NameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameFullOrganization).HasColumnName(@"NameFullOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameFaceLeader).HasColumnName(@"NameFaceLeader").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.InameOrganization).HasColumnName(@"InameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.RnameOrganization).HasColumnName(@"RnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DnameOrganization).HasColumnName(@"DnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.VnameOrganization).HasColumnName(@"VnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.TnameOrganization).HasColumnName(@"TnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.PnameOrganization).HasColumnName(@"PnameOrganization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameFace).HasColumnName(@"NameFace").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameDepartament).HasColumnName(@"NameDepartament").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Room).HasColumnName(@"Room").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Mail).HasColumnName(@"Mail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CodeObject).HasColumnName(@"CodeObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.ScenarioEntrance).HasColumnName(@"ScenarioEntrance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdUserDks).HasColumnName(@"IdUserDks").HasColumnType("int").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Otdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Otdel>
    {
        public OtdelConfiguration()
            : this("dbo")
        {
        }

        public OtdelConfiguration(string schema)
        {
            ToTable("Otdel", schema);
            HasKey(x => x.IdOtdel);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.CodeOtdel).HasColumnName(@"CodeOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.User).WithMany(b => b.Otdels).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Users_Otdel
        }
    }

    // OtdelPadeg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtdelPadegConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OtdelPadeg>
    {
        public OtdelPadegConfiguration()
            : this("dbo")
        {
        }

        public OtdelPadegConfiguration(string schema)
        {
            ToTable("OtdelPadeg", schema);
            HasKey(x => x.IdOtdel);

            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InameOtdel).HasColumnName(@"InameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RnameOtdel).HasColumnName(@"RnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DnameOtdel).HasColumnName(@"DnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.VnameOtdel).HasColumnName(@"VnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TnameOtdel).HasColumnName(@"TnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PnameOtdel).HasColumnName(@"PnameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Otdel).WithOptional(b => b.OtdelPadeg).WillCascadeOnDelete(false); // FK_Otdel_OtdelPadeg
        }
    }

    // OtherAll
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class OtherAllConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OtherAll>
    {
        public OtherAllConfiguration()
            : this("dbo")
        {
        }

        public OtherAllConfiguration(string schema)
        {
            ToTable("OtherAll", schema);
            HasKey(x => x.IdOtherAll);

            Property(x => x.IdOtherAll).HasColumnName(@"IdOtherAll").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdTypeOther).HasColumnName(@"IdTypeOther").HasColumnType("int").IsOptional();
            Property(x => x.IdModelOther).HasColumnName(@"IdModelOther").HasColumnType("int").IsOptional();
            Property(x => x.IdProizvoditelOther).HasColumnName(@"IdProizvoditelOther").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_OtherAll_Kabinet
            HasOptional(a => a.ModelOther).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdModelOther).WillCascadeOnDelete(false); // FK_OtherAll_ModelOther
            HasOptional(a => a.ProizvoditelOther).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdProizvoditelOther).WillCascadeOnDelete(false); // FK_OtherAll_ProizvoditelOther
            HasOptional(a => a.Statusing).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_OtherAll_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_OtherAll_Supply
            HasOptional(a => a.TypeOther).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdTypeOther).WillCascadeOnDelete(false); // FK_OtherAll_TypeOther
            HasOptional(a => a.User).WithMany(b => b.OtherAlls).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_OtherAll_Users
        }
    }

    // ParameterAct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ParameterActConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ParameterAct>
    {
        public ParameterActConfiguration()
            : this("dbo")
        {
        }

        public ParameterActConfiguration(string schema)
        {
            ToTable("ParameterAct", schema);
            HasKey(x => x.IdParameter);

            Property(x => x.IdParameter).HasColumnName(@"IdParameter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdClassParameter).HasColumnName(@"IdClassParameter").HasColumnType("int").IsOptional();
            Property(x => x.IsExistParameterReplace).HasColumnName(@"IsExistParameterReplace").HasColumnType("bit").IsRequired();
            Property(x => x.Parameter).HasColumnName(@"Parameter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SelectParameter).HasColumnName(@"SelectParameter").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClassParameterTemplate).WithMany(b => b.ParameterActs).HasForeignKey(c => c.IdClassParameter).WillCascadeOnDelete(false); // FK_ClassParameterTemplate_ParameterAct
        }
    }

    // ParametrSupport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ParametrSupportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ParametrSupport>
    {
        public ParametrSupportConfiguration()
            : this("dbo")
        {
        }

        public ParametrSupportConfiguration(string schema)
        {
            ToTable("ParametrSupport", schema);
            HasKey(x => x.IdParametr);

            Property(x => x.IdParametr).HasColumnName(@"IdParametr").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameStepSupport).HasColumnName(@"NameStepSupport").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.HelpParameter).HasColumnName(@"HelpParameter").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.NameGuidParametr).HasColumnName(@"NameGuidParametr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Parametr).HasColumnName(@"Parametr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ParameterStep3).HasColumnName(@"ParameterStep3").HasColumnType("image").IsOptional().HasMaxLength(2147483647);
            Property(x => x.TypeParametr).HasColumnName(@"TypeParametr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IsImportant).HasColumnName(@"IsImportant").HasColumnType("bit").IsOptional();
            Property(x => x.NameParametrType).HasColumnName(@"NameParametrType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SelectParametr).HasColumnName(@"SelectParametr").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TemplateParametrType).HasColumnName(@"TemplateParametrType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // PassportEquipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PassportEquipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PassportEquipment>
    {
        public PassportEquipmentConfiguration()
            : this("dbo")
        {
        }

        public PassportEquipmentConfiguration(string schema)
        {
            ToTable("PassportEquipment", schema);
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Soun).HasColumnName(@"Soun").HasColumnType("int").IsRequired();
            Property(x => x.MifnsObject).HasColumnName(@"MifnsObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.CodeObject).HasColumnName(@"CodeObject").HasColumnType("int").IsRequired();
            Property(x => x.ViewObject).HasColumnName(@"ViewObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TypeObject).HasColumnName(@"TypeObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ManufacturerObject).HasColumnName(@"ManufacturerObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ModelObject).HasColumnName(@"ModelObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SetObject).HasColumnName(@"SetObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ClusterObject).HasColumnName(@"ClusterObject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.StoPrevious).HasColumnName(@"StoPrevious").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.StoCurrent).HasColumnName(@"StoCurrent").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Sto).HasColumnName(@"Sto").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.SerialNumber).HasColumnName(@"SerialNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumber).HasColumnName(@"InventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumber2017).HasColumnName(@"ServiceNumber2017").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IsNotBalansObject).HasColumnName(@"IsNotBalansObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.YearOfIssue).HasColumnName(@"YearOfIssue").HasColumnType("int").IsRequired();
            Property(x => x.Guarantee).HasColumnName(@"Guarantee").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.ServiceStatus).HasColumnName(@"ServiceStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SupplyContract).HasColumnName(@"SupplyContract").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ContractSto).HasColumnName(@"ContractSto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CountOfLicensesSip).HasColumnName(@"CountOfLicensesSip").HasColumnType("int").IsOptional();
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ModelDeliveryNote).HasColumnName(@"ModelDeliveryNote").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ActualOsVersion).HasColumnName(@"ActualOsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VersionOs).HasColumnName(@"VersionOs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameZags).HasColumnName(@"NameZags").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.AdressZags).HasColumnName(@"AdressZags").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.TransferAgreementNumber).HasColumnName(@"TransferAgreementNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IsNotNullBalansObject).HasColumnName(@"IsNotNullBalansObject").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Ippointment).HasColumnName(@"Ippointment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeUse).HasColumnName(@"TypeUse").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VirtualizationEnvironment).HasColumnName(@"VirtualizationEnvironment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Department).HasColumnName(@"Department").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Plot).HasColumnName(@"Plot").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.LocationFloor).HasColumnName(@"LocationFloor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.LocationRoom).HasColumnName(@"LocationRoom").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Room).HasColumnName(@"Room").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.VersionPs).HasColumnName(@"VersionPs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NetworkName).HasColumnName(@"NetworkName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdrees).HasColumnName(@"IpAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.AdditionalIpAdrees).HasColumnName(@"AdditionalIpAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdreesStk).HasColumnName(@"IpAdreesStk").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpAdreesStkMikro).HasColumnName(@"IpAdreesStkMikro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MacAdrees).HasColumnName(@"MacAdrees").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountProcessor).HasColumnName(@"CountProcessor").HasColumnType("int").IsOptional();
            Property(x => x.CountCores).HasColumnName(@"CountCores").HasColumnType("int").IsOptional();
            Property(x => x.Mhz).HasColumnName(@"Mhz").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeMemory).HasColumnName(@"TypeMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SizeMemory).HasColumnName(@"SizeMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeProcessor).HasColumnName(@"TypeProcessor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CdDvd).HasColumnName(@"CdDvd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Fdd).HasColumnName(@"Fdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Raid).HasColumnName(@"Raid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.PublicMemory).HasColumnName(@"PublicMemory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountHdd).HasColumnName(@"CountHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.VolumeHdd).HasColumnName(@"VolumeHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.TypeHdd).HasColumnName(@"TypeHdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountBoards).HasColumnName(@"CountBoards").HasColumnType("int").IsOptional();
            Property(x => x.CountFreeBoards).HasColumnName(@"CountFreeBoards").HasColumnType("int").IsOptional();
            Property(x => x.NetworkCard).HasColumnName(@"NetworkCard").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SpeedNetworkCard).HasColumnName(@"SpeedNetworkCard").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CountSubscribersAnalog).HasColumnName(@"CountSubscribersAnalog").HasColumnType("int").IsOptional();
            Property(x => x.CountSubscribersDigital).HasColumnName(@"CountSubscribersDigital").HasColumnType("int").IsOptional();
            Property(x => x.InventoryNumberPc).HasColumnName(@"InventoryNumberPc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumberIbp).HasColumnName(@"InventoryNumberIbp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventoryNumberMonitor).HasColumnName(@"InventoryNumberMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ServiceNumberMonitor).HasColumnName(@"ServiceNumberMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ModelMonitor).HasColumnName(@"ModelMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeMonitor).HasColumnName(@"TypeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SizeMonitor).HasColumnName(@"SizeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MaxSizeMonitor).HasColumnName(@"MaxSizeMonitor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeAnalog).HasColumnName(@"TypeAnalog").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeDigital).HasColumnName(@"TypeDigital").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CountAdmin).HasColumnName(@"CountAdmin").HasColumnType("int").IsOptional();
            Property(x => x.NumberKey).HasColumnName(@"NumberKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MarkaStrim).HasColumnName(@"MarkaStrim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MarkaKardStrim).HasColumnName(@"MarkaKardStrim").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Os).HasColumnName(@"Os").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServicePack).HasColumnName(@"ServicePack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OfficePack).HasColumnName(@"OfficePack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Fio).HasColumnName(@"Fio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MainFio).HasColumnName(@"MainFio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Info).HasColumnName(@"Info").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Position
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PositionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Position>
    {
        public PositionConfiguration()
            : this("dbo")
        {
        }

        public PositionConfiguration(string schema)
        {
            ToTable("Position", schema);
            HasKey(x => x.IdPosition);

            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NamePosition).HasColumnName(@"NamePosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Printer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PrinterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Printer>
    {
        public PrinterConfiguration()
            : this("dbo")
        {
        }

        public PrinterConfiguration(string schema)
        {
            ToTable("Printer", schema);
            HasKey(x => x.IdPrinter);

            Property(x => x.IdPrinter).HasColumnName(@"IdPrinter").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullModel).WithMany(b => b.Printers).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_Printer_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.Printers).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_Printer_FullProizvoditel
            HasOptional(a => a.Kabinet).WithMany(b => b.Printers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Printer_Kabinet
            HasOptional(a => a.Statusing).WithMany(b => b.Printers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Printer_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.Printers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Printer_Supply
            HasOptional(a => a.User).WithMany(b => b.Printers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Printer_Users
        }
    }

    // PrinterAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class PrinterAndEpoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PrinterAndEpo>
    {
        public PrinterAndEpoConfiguration()
            : this("dbo")
        {
        }

        public PrinterAndEpoConfiguration(string schema)
        {
            ToTable("PrinterAndEpo", schema);
            HasKey(x => new { x.IDвЭПО, x.СерийныйномервЭПО, x.СерийныйномернесоответствиеБДЭПО, x.ИнвентарныйномернесоответствиеБДЭПО, x.ИмянесоответствиеБДЭПО, x.КомнатанесоответствиеБДЭПО });

            Property(x => x.Пользователь).HasColumnName(@"Пользователь").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Модельинвентаризации).HasColumnName(@"Модель инвентаризации").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IDвЭПО).HasColumnName(@"ID в ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномервБД).HasColumnName(@"Серийный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.СерийныйномервЭПО).HasColumnName(@"Серийный номер в ЭПО").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномернесоответствиеБДЭПО).HasColumnName(@"Серийный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИнвентарныйномервБД).HasColumnName(@"Инвентарный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИнвентарныйномервЭПО).HasColumnName(@"Инвентарный номер в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ИнвентарныйномернесоответствиеБДЭПО).HasColumnName(@"Инвентарный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИмявБД).HasColumnName(@"Имя в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмявЭПО).HasColumnName(@"Имя в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмянесоответствиеБДЭПО).HasColumnName(@"Имя несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.КомнатавБД).HasColumnName(@"Комната в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.КомнатавЭПО).HasColumnName(@"Комната в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.КомнатанесоответствиеБДЭПО).HasColumnName(@"Комната несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // Producer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ProducerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Producer>
    {
        public ProducerConfiguration()
            : this("dbo")
        {
        }

        public ProducerConfiguration(string schema)
        {
            ToTable("Producer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsOptional();
        }
    }

    // ProizvoditelBlockPower
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ProizvoditelBlockPowerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProizvoditelBlockPower>
    {
        public ProizvoditelBlockPowerConfiguration()
            : this("dbo")
        {
        }

        public ProizvoditelBlockPowerConfiguration(string schema)
        {
            ToTable("ProizvoditelBlockPower", schema);
            HasKey(x => x.IdProizvoditelBP);

            Property(x => x.IdProizvoditelBP).HasColumnName(@"IdProizvoditelBP").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ProizvoditelOther
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ProizvoditelOtherConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProizvoditelOther>
    {
        public ProizvoditelOtherConfiguration()
            : this("dbo")
        {
        }

        public ProizvoditelOtherConfiguration(string schema)
        {
            ToTable("ProizvoditelOther", schema);
            HasKey(x => x.IdProizvoditelOther);

            Property(x => x.IdProizvoditelOther).HasColumnName(@"IdProizvoditelOther").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Rb_Holidays
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Rb_HolidayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rb_Holiday>
    {
        public Rb_HolidayConfiguration()
            : this("dbo")
        {
        }

        public Rb_HolidayConfiguration(string schema)
        {
            ToTable("Rb_Holidays", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DateTime_Holiday).HasColumnName(@"DateTime_Holiday").HasColumnType("smalldatetime").IsRequired();
            Property(x => x.IS_HOLIDAY).HasColumnName(@"IS_HOLIDAY").HasColumnType("bit").IsRequired();
        }
    }

    // ResourceIt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResourceItConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResourceIt>
    {
        public ResourceItConfiguration()
            : this("dbo")
        {
        }

        public ResourceItConfiguration(string schema)
        {
            ToTable("ResourceIt", schema);
            HasKey(x => x.IdResource);

            Property(x => x.IdResource).HasColumnName(@"IdResource").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameResource).HasColumnName(@"NameResource").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.Otdel).WithMany(b => b.ResourceIts).HasForeignKey(c => c.IdOtdel).WillCascadeOnDelete(false); // FK_Otdel_ResourceIt
        }
    }

    // Rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rule>
    {
        public RuleConfiguration()
            : this("dbo")
        {
        }

        public RuleConfiguration(string schema)
        {
            ToTable("Rules", schema);
            HasKey(x => x.IdRule);

            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameRules).HasColumnName(@"NameRules").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // RuleAndUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleAndUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RuleAndUser>
    {
        public RuleAndUserConfiguration()
            : this("dbo")
        {
        }

        public RuleAndUserConfiguration(string schema)
        {
            ToTable("RuleAndUsers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired();
            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Rule).WithMany(b => b.RuleAndUsers).HasForeignKey(c => c.IdRule).WillCascadeOnDelete(false); // FK_RuleAndUsers_Rules
            HasRequired(a => a.User).WithMany(b => b.RuleAndUsers).HasForeignKey(c => c.IdUser); // FK_RuleAndUsers_Users
        }
    }

    // RuleIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RuleIfn>
    {
        public RuleIfnConfiguration()
            : this("dbo")
        {
        }

        public RuleIfnConfiguration(string schema)
        {
            ToTable("RuleIfns", schema);
            HasKey(x => x.IdRuleIfns);

            Property(x => x.IdRuleIfns).HasColumnName(@"IdRuleIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdApplicationsIfns).HasColumnName(@"IdApplicationsIfns").HasColumnType("int").IsRequired();
            Property(x => x.NameRule).HasColumnName(@"NameRule").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Info).HasColumnName(@"Info").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.ApplicationsIfn).WithMany(b => b.RuleIfns).HasForeignKey(c => c.IdApplicationsIfns); // FK_RuleIfns_ApplicationsIfns
        }
    }

    // RuleNotTemplateUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleNotTemplateUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RuleNotTemplateUser>
    {
        public RuleNotTemplateUserConfiguration()
            : this("dbo")
        {
        }

        public RuleNotTemplateUserConfiguration(string schema)
        {
            ToTable("RuleNotTemplateUser", schema);
            HasKey(x => x.IdTemplateIfns);

            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameRule).HasColumnName(@"NameRule").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdTemplateIfns).HasColumnName(@"IdTemplateIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // ScanerAndCamer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ScanerAndCamerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScanerAndCamer>
    {
        public ScanerAndCamerConfiguration()
            : this("dbo")
        {
        }

        public ScanerAndCamerConfiguration(string schema)
        {
            ToTable("ScanerAndCamer", schema);
            HasKey(x => x.IdScaner);

            Property(x => x.IdScaner).HasColumnName(@"IdScaner").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdProizvoditel).HasColumnName(@"IdProizvoditel").HasColumnType("int").IsOptional();
            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ZavNumber).HasColumnName(@"ZavNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumber).HasColumnName(@"InventarNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullModel).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdModel).WillCascadeOnDelete(false); // FK_ScanerAndCamer_FullModel
            HasOptional(a => a.FullProizvoditel).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdProizvoditel).WillCascadeOnDelete(false); // FK_ScanerAndCamer_FullProizvoditel
            HasOptional(a => a.Kabinet).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Kabinet
            HasOptional(a => a.Statusing).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Supply
            HasOptional(a => a.User).WithMany(b => b.ScanerAndCamers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_ScanerAndCamer_Users
        }
    }

    // ScanerAndEpo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ScanerAndEpoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScanerAndEpo>
    {
        public ScanerAndEpoConfiguration()
            : this("dbo")
        {
        }

        public ScanerAndEpoConfiguration(string schema)
        {
            ToTable("ScanerAndEpo", schema);
            HasKey(x => new { x.IDвЭПО, x.СерийныйномервЭПО, x.СерийныйномернесоответствиеБДЭПО, x.ИнвентарныйномернесоответствиеБДЭПО, x.ИмянесоответствиеБДЭПО, x.КомнатанесоответствиеБДЭПО });

            Property(x => x.Пользователь).HasColumnName(@"Пользователь").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Модельинвентаризации).HasColumnName(@"Модель инвентаризации").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IDвЭПО).HasColumnName(@"ID в ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномервБД).HasColumnName(@"Серийный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.СерийныйномервЭПО).HasColumnName(@"Серийный номер в ЭПО").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.СерийныйномернесоответствиеБДЭПО).HasColumnName(@"Серийный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИнвентарныйномервБД).HasColumnName(@"Инвентарный номер в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИнвентарныйномервЭПО).HasColumnName(@"Инвентарный номер в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ИнвентарныйномернесоответствиеБДЭПО).HasColumnName(@"Инвентарный номер несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ИмявБД).HasColumnName(@"Имя в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмявЭПО).HasColumnName(@"Имя в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ИмянесоответствиеБДЭПО).HasColumnName(@"Имя несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.КомнатавБД).HasColumnName(@"Комната в БД").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.КомнатавЭПО).HasColumnName(@"Комната в ЭПО").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.КомнатанесоответствиеБДЭПО).HasColumnName(@"Комната несоответствие БД ЭПО").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // ServerEquipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ServerEquipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServerEquipment>
    {
        public ServerEquipmentConfiguration()
            : this("dbo")
        {
        }

        public ServerEquipmentConfiguration(string schema)
        {
            ToTable("ServerEquipment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdManufacturerSeverEquipment).HasColumnName(@"IdManufacturerSeverEquipment").HasColumnType("int").IsOptional();
            Property(x => x.IdModelSeverEquipment).HasColumnName(@"IdModelSeverEquipment").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdTypeServer).HasColumnName(@"IdTypeServer").HasColumnType("int").IsRequired();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameServer).HasColumnName(@"NameServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_ServerEquipment_Kabinet
            HasOptional(a => a.ManufacturerSeverEquipment).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdManufacturerSeverEquipment).WillCascadeOnDelete(false); // FK_ServerEquipment_ManufacturerSeverEquipment
            HasOptional(a => a.ModelSeverEquipment).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdModelSeverEquipment).WillCascadeOnDelete(false); // FK_ServerEquipment_ModelSeverEquipment
            HasOptional(a => a.Statusing).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_ServerEquipment_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_ServerEquipment_Supply
            HasRequired(a => a.TypeServer).WithMany(b => b.ServerEquipments).HasForeignKey(c => c.IdTypeServer).WillCascadeOnDelete(false); // FK_ServerEquipment_TypeServer
        }
    }

    // ServiceModelInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ServiceModelInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceModelInventory>
    {
        public ServiceModelInventoryConfiguration()
            : this("dbo")
        {
        }

        public ServiceModelInventoryConfiguration(string schema)
        {
            ToTable("ServiceModelInventory", schema);
            HasKey(x => x.IdService);

            Property(x => x.IdService).HasColumnName(@"IdService").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ApiService).HasColumnName(@"ApiService").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ModelNameFileXml).HasColumnName(@"ModelNameFileXml").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TypeFileNameSpaceClass).HasColumnName(@"TypeFileNameSpaceClass").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FileNameDll).HasColumnName(@"FileNameDll").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FileInfoFile).HasColumnName(@"FileInfoFile").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // SigmentIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SigmentIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SigmentIfn>
    {
        public SigmentIfnConfiguration()
            : this("dbo")
        {
        }

        public SigmentIfnConfiguration(string schema)
        {
            ToTable("SigmentIfns", schema);
            HasKey(x => x.IdSigmentIfns);

            Property(x => x.IdSigmentIfns).HasColumnName(@"IdSigmentIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Statusing
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Statusing>
    {
        public StatusingConfiguration()
            : this("dbo")
        {
        }

        public StatusingConfiguration(string schema)
        {
            ToTable("Statusing", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // StatusProcessSynchronization
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusProcessSynchronizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusProcessSynchronization>
    {
        public StatusProcessSynchronizationConfiguration()
            : this("dbo")
        {
        }

        public StatusProcessSynchronizationConfiguration(string schema)
        {
            ToTable("StatusProcessSynchronization", schema);
            HasKey(x => x.IdStatus);

            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(258);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // StatusUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class StatusUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusUser>
    {
        public StatusUserConfiguration()
            : this("dbo")
        {
        }

        public StatusUserConfiguration(string schema)
        {
            ToTable("StatusUser", schema);
            HasKey(x => x.IdStatusUser);

            Property(x => x.IdStatusUser).HasColumnName(@"IdStatusUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StatusText).HasColumnName(@"StatusText").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ColorStatus).HasColumnName(@"ColorStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Supply
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SupplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Supply>
    {
        public SupplyConfiguration()
            : this("dbo")
        {
        }

        public SupplyConfiguration(string schema)
        {
            ToTable("Supply", schema);
            HasKey(x => x.IdSupply);

            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameSupply).HasColumnName(@"NameSupply").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameKontract).HasColumnName(@"NameKontract").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DatePostavki).HasColumnName(@"DatePostavki").HasColumnType("date").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Swithes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SwitheConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Swithe>
    {
        public SwitheConfiguration()
            : this("dbo")
        {
        }

        public SwitheConfiguration(string schema)
        {
            ToTable("Swithes", schema);
            HasKey(x => x.IdSwithes);

            Property(x => x.IdSwithes).HasColumnName(@"IdSwithes").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdModelSwithes).HasColumnName(@"IdModelSwithes").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.Swithes).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Swithes_Kabinet
            HasOptional(a => a.ModelSwithe).WithMany(b => b.Swithes).HasForeignKey(c => c.IdModelSwithes).WillCascadeOnDelete(false); // FK_Swithes_ModelSwithes
            HasOptional(a => a.Statusing).WithMany(b => b.Swithes).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Swithes_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.Swithes).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Swithes_Supply
            HasOptional(a => a.User).WithMany(b => b.Swithes).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Swithes_Users
        }
    }

    // SynchronizationPrintServer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SynchronizationPrintServerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SynchronizationPrintServer>
    {
        public SynchronizationPrintServerConfiguration()
            : this("dbo")
        {
        }

        public SynchronizationPrintServerConfiguration(string schema)
        {
            ToTable("SynchronizationPrintServer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NamePrintServer).HasColumnName(@"NamePrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpPrintServer).HasColumnName(@"IpPrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DescriptionPrinter).HasColumnName(@"DescriptionPrinter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FullUrl).HasColumnName(@"FullUrl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.SerNumberPrintServer).HasColumnName(@"SerNumberPrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.OldNameDataBase).HasColumnName(@"OldNameDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NewNameDataBase).HasColumnName(@"NewNameDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OldIpDataBase).HasColumnName(@"OldIpDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NewIpDataBase).HasColumnName(@"NewIpDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IsTonerLow).HasColumnName(@"IsTonerLow").HasColumnType("bit").IsRequired();
            Property(x => x.HasToner).HasColumnName(@"HasToner").HasColumnType("bit").IsRequired();
            Property(x => x.IsSupportApplication).HasColumnName(@"IsSupportApplication").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreateSupportApplication).HasColumnName(@"DateCreateSupportApplication").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.StatusFindPrintServerAndSynchronization).HasColumnName(@"StatusFindPrintServerAndSynchronization").HasColumnType("int").IsOptional();
            Property(x => x.IsErrorInfo).HasColumnName(@"IsErrorInfo").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.StatusProcessSynchronization).WithMany(b => b.SynchronizationPrintServers).HasForeignKey(c => c.StatusFindPrintServerAndSynchronization).WillCascadeOnDelete(false); // FK_SynchronizationPrintServer_StatusProcessSynchronization
        }
    }

    // SynchronizationPrintServerToDataBase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SynchronizationPrintServerToDataBaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SynchronizationPrintServerToDataBase>
    {
        public SynchronizationPrintServerToDataBaseConfiguration()
            : this("dbo")
        {
        }

        public SynchronizationPrintServerToDataBaseConfiguration(string schema)
        {
            ToTable("SynchronizationPrintServerToDataBase", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameModel).HasColumnName(@"NameModel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.SerNumberPrintServer).HasColumnName(@"SerNumberPrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NamePrintServer).HasColumnName(@"NamePrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpPrintServer).HasColumnName(@"IpPrintServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DescriptionPrinter).HasColumnName(@"DescriptionPrinter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.FullUrl).HasColumnName(@"FullUrl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.OldNameDataBase).HasColumnName(@"OldNameDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OldIpDataBase).HasColumnName(@"OldIpDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NewNameDataBase).HasColumnName(@"NewNameDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NewIpDataBase).HasColumnName(@"NewIpDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IsTonerLowAndHas).HasColumnName(@"IsTonerLowAndHas").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(27);
            Property(x => x.IsSupportApplicationDate).HasColumnName(@"IsSupportApplicationDate").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Info).HasColumnName(@"Info").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.NameStatus).HasColumnName(@"NameStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(258);
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
        }
    }

    // SysBlock
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SysBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SysBlock>
    {
        public SysBlockConfiguration()
            : this("dbo")
        {
        }

        public SysBlockConfiguration(string schema)
        {
            ToTable("SysBlock", schema);
            HasKey(x => x.IdSysBlock);

            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdModelSysBlock).HasColumnName(@"IdModelSysBlock").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAdress).HasColumnName(@"IpAdress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Kabinet).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_SysBlock_Kabinet
            HasOptional(a => a.NameSysBlock).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdModelSysBlock).WillCascadeOnDelete(false); // FK_SysBlock_NameSysBlock
            HasOptional(a => a.Statusing).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_SysBlock_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_SysBlock_Supply
            HasOptional(a => a.User).WithMany(b => b.SysBlocks).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_SysBlock_Users
        }
    }

    // TableAllModel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableAllModelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableAllModel>
    {
        public TableAllModelConfiguration()
            : this("dbo")
        {
        }

        public TableAllModelConfiguration(string schema)
        {
            ToTable("TableAllModel", schema);
            HasKey(x => x.IdModel);

            Property(x => x.IdModel).HasColumnName(@"IdModel").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdSystems).HasColumnName(@"IdSystems").HasColumnType("int").IsOptional();
            Property(x => x.IdFolders).HasColumnName(@"IdFolders").HasColumnType("int").IsOptional();
            Property(x => x.IdTasks).HasColumnName(@"IdTasks").HasColumnType("int").IsOptional();
            Property(x => x.IdRoles).HasColumnName(@"IdRoles").HasColumnType("int").IsOptional();
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.TableFolder).WithMany(b => b.TableAllModels).HasForeignKey(c => c.IdFolders); // FK_TableAllModel_TableFolders
            HasOptional(a => a.TableRole).WithMany(b => b.TableAllModels).HasForeignKey(c => c.IdRoles); // FK_TableAllModel_TableRoles
            HasOptional(a => a.TableSystem).WithMany(b => b.TableAllModels).HasForeignKey(c => c.IdSystems); // FK_TableAllModel_TableSystems
            HasOptional(a => a.TableTask).WithMany(b => b.TableAllModels).HasForeignKey(c => c.IdTasks); // FK_TableAllModel_TableTasks
            HasOptional(a => a.TableTemplate).WithMany(b => b.TableAllModels).HasForeignKey(c => c.IdTemplate); // FK_TableAllModel_TableTemplate
        }
    }

    // TableFolders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableFolderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableFolder>
    {
        public TableFolderConfiguration()
            : this("dbo")
        {
        }

        public TableFolderConfiguration(string schema)
        {
            ToTable("TableFolders", schema);
            HasKey(x => x.IdFolders);

            Property(x => x.IdFolders).HasColumnName(@"IdFolders").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TableRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableRoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableRole>
    {
        public TableRoleConfiguration()
            : this("dbo")
        {
        }

        public TableRoleConfiguration(string schema)
        {
            ToTable("TableRoles", schema);
            HasKey(x => x.IdRoles);

            Property(x => x.IdRoles).HasColumnName(@"IdRoles").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TableSystems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableSystemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableSystem>
    {
        public TableSystemConfiguration()
            : this("dbo")
        {
        }

        public TableSystemConfiguration(string schema)
        {
            ToTable("TableSystems", schema);
            HasKey(x => x.IdSystems);

            Property(x => x.IdSystems).HasColumnName(@"IdSystems").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TableTasks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableTaskConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableTask>
    {
        public TableTaskConfiguration()
            : this("dbo")
        {
        }

        public TableTaskConfiguration(string schema)
        {
            ToTable("TableTasks", schema);
            HasKey(x => x.IdTasks);

            Property(x => x.IdTasks).HasColumnName(@"IdTasks").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.TypeTask).HasColumnName(@"TypeTask").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Curator).HasColumnName(@"Curator").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TableTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TableTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TableTemplate>
    {
        public TableTemplateConfiguration()
            : this("dbo")
        {
        }

        public TableTemplateConfiguration(string schema)
        {
            ToTable("TableTemplate", schema);
            HasKey(x => x.IdTemplate);

            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TaskAis3
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TaskAis3Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaskAis3>
    {
        public TaskAis3Configuration()
            : this("dbo")
        {
        }

        public TaskAis3Configuration(string schema)
        {
            ToTable("TaskAis3", schema);
            HasKey(x => x.IdTask);

            Property(x => x.IdTask).HasColumnName(@"IdTask").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTask).HasColumnName(@"NameTask").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsRequired();
        }
    }

    // TecnicalOtdel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TecnicalOtdelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TecnicalOtdel>
    {
        public TecnicalOtdelConfiguration()
            : this("dbo")
        {
        }

        public TecnicalOtdelConfiguration(string schema)
        {
            ToTable("TecnicalOtdel", schema);
            HasKey(x => new { x.NameUser, x.NameClass });

            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameClass).HasColumnName(@"NameClass").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameComputer).HasColumnName(@"NameComputer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventarNumSysBlok).HasColumnName(@"InventarNumSysBlok").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NumberKabinet).HasColumnName(@"NumberKabinet").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
        }
    }

    // Telephon
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TelephonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Telephon>
    {
        public TelephonConfiguration()
            : this("dbo")
        {
        }

        public TelephonConfiguration(string schema)
        {
            ToTable("Telephon", schema);
            HasKey(x => x.IdTelephon);

            Property(x => x.IdTelephon).HasColumnName(@"IdTelephon").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdNumberKabinet).HasColumnName(@"IdNumberKabinet").HasColumnType("int").IsOptional();
            Property(x => x.NameTelephone).HasColumnName(@"NameTelephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Telephon_).HasColumnName(@"Telephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.TelephonUndeground).HasColumnName(@"TelephonUndeground").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ServiceNum).HasColumnName(@"ServiceNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.SerNumber).HasColumnName(@"SerNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.InventarNum).HasColumnName(@"InventarNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.IpTelephon).HasColumnName(@"IpTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MacTelephon).HasColumnName(@"MacTelephon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.IdCategoryHeaders).HasColumnName(@"IdCategoryHeaders").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.CategoryPhoneHeader).WithMany(b => b.Telephons).HasForeignKey(c => c.IdCategoryHeaders).WillCascadeOnDelete(false); // FK_Telephon_CategoryPhoneHeaders
            HasOptional(a => a.Kabinet).WithMany(b => b.Telephons).HasForeignKey(c => c.IdNumberKabinet).WillCascadeOnDelete(false); // FK_Telephon_Kabinet
            HasOptional(a => a.Statusing).WithMany(b => b.Telephons).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Telephon_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.Telephons).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Telephon_Supply
            HasOptional(a => a.User).WithMany(b => b.Telephons).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Telephon_Users
        }
    }

    // TemplateAllIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateAllIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateAllIfn>
    {
        public TemplateAllIfnConfiguration()
            : this("dbo")
        {
        }

        public TemplateAllIfnConfiguration(string schema)
        {
            ToTable("TemplateAllIfns", schema);
            HasKey(x => x.IdTemplateIfns);

            Property(x => x.IdTemplateIfns).HasColumnName(@"IdTemplateIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Info).HasColumnName(@"Info").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TemplateIfnsAndRuleIfns
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateIfnsAndRuleIfnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateIfnsAndRuleIfn>
    {
        public TemplateIfnsAndRuleIfnConfiguration()
            : this("dbo")
        {
        }

        public TemplateIfnsAndRuleIfnConfiguration(string schema)
        {
            ToTable("TemplateIfnsAndRuleIfns", schema);
            HasKey(x => x.IdTemplateAndRuleIfns);

            Property(x => x.IdTemplateAndRuleIfns).HasColumnName(@"IdTemplateAndRuleIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTemplateIfns).HasColumnName(@"IdTemplateIfns").HasColumnType("int").IsOptional();
            Property(x => x.IdRuleIfns).HasColumnName(@"IdRuleIfns").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.RuleIfn).WithMany(b => b.TemplateIfnsAndRuleIfns).HasForeignKey(c => c.IdRuleIfns); // FK_TemplateIfnsAndRuleIfns_RuleIfns
            HasOptional(a => a.TemplateAllIfn).WithMany(b => b.TemplateIfnsAndRuleIfns).HasForeignKey(c => c.IdTemplateIfns); // FK_TemplateIfnsAndRuleIfns_TemplateAllIfns
        }
    }

    // TemplateSupportAndParametrSupport
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TemplateSupportAndParametrSupportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateSupportAndParametrSupport>
    {
        public TemplateSupportAndParametrSupportConfiguration()
            : this("dbo")
        {
        }

        public TemplateSupportAndParametrSupportConfiguration(string schema)
        {
            ToTable("TemplateSupportAndParametrSupport", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdParametr).HasColumnName(@"IdParametr").HasColumnType("int").IsOptional();
            Property(x => x.IdTemplate).HasColumnName(@"IdTemplate").HasColumnType("int").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.FullTemplateSupport).WithMany(b => b.TemplateSupportAndParametrSupports).HasForeignKey(c => c.IdTemplate).WillCascadeOnDelete(false); // FK_TemplateSupportAndParametrSupport_FullTemplateSupport
            HasOptional(a => a.ParametrSupport).WithMany(b => b.TemplateSupportAndParametrSupports).HasForeignKey(c => c.IdParametr).WillCascadeOnDelete(false); // FK_TemplateSupportAndParametrSupport_ParametrSupport
        }
    }

    // Token
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TokenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Token>
    {
        public TokenConfiguration()
            : this("dbo")
        {
        }

        public TokenConfiguration(string schema)
        {
            ToTable("Token", schema);
            HasKey(x => x.IdToken);

            Property(x => x.IdToken).HasColumnName(@"IdToken").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdSupply).HasColumnName(@"IdSupply").HasColumnType("int").IsOptional();
            Property(x => x.IdSysBlock).HasColumnName(@"IdSysBlock").HasColumnType("int").IsOptional();
            Property(x => x.ProizvoditelName).HasColumnName(@"ProizvoditelName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SerNum).HasColumnName(@"SerNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Coment).HasColumnName(@"Coment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(254);
            Property(x => x.IdStatus).HasColumnName(@"IdStatus").HasColumnType("int").IsOptional();
            Property(x => x.WriteOffSign).HasColumnName(@"WriteOffSign").HasColumnType("bit").IsRequired();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Statusing).WithMany(b => b.Tokens).HasForeignKey(c => c.IdStatus).WillCascadeOnDelete(false); // FK_Token_Statusing
            HasOptional(a => a.Supply).WithMany(b => b.Tokens).HasForeignKey(c => c.IdSupply).WillCascadeOnDelete(false); // FK_Token_Supply
            HasOptional(a => a.SysBlock).WithMany(b => b.Tokens).HasForeignKey(c => c.IdSysBlock).WillCascadeOnDelete(false); // FK_Token_SysBlock
            HasOptional(a => a.User).WithMany(b => b.Tokens).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_Token_Users
        }
    }

    // TypeOther
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeOtherConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeOther>
    {
        public TypeOtherConfiguration()
            : this("dbo")
        {
        }

        public TypeOtherConfiguration(string schema)
        {
            ToTable("TypeOther", schema);
            HasKey(x => x.IdTypeOther);

            Property(x => x.IdTypeOther).HasColumnName(@"IdTypeOther").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TypeServer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeServerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeServer>
    {
        public TypeServerConfiguration()
            : this("dbo")
        {
        }

        public TypeServerConfiguration(string schema)
        {
            ToTable("TypeServer", schema);
            HasKey(x => x.IdTypeServer);

            Property(x => x.IdTypeServer).HasColumnName(@"IdTypeServer").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameType).HasColumnName(@"NameType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Users
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {
            ToTable("Users", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SmallName).HasColumnName(@"SmallName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DateInWork).HasColumnName(@"DateInWork").HasColumnType("smalldatetime").IsOptional();
            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();
            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdTelephon).HasColumnName(@"IdTelephon").HasColumnType("int").IsOptional();
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("int").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Otdel).WithMany(b => b.Users).HasForeignKey(c => c.IdOtdel).WillCascadeOnDelete(false); // FK_Otdel_Users
            HasOptional(a => a.Position).WithMany(b => b.Users).HasForeignKey(c => c.IdPosition).WillCascadeOnDelete(false); // FK_Users_Position
            HasOptional(a => a.StatusUser).WithMany(b => b.Users).HasForeignKey(c => c.StatusActual).WillCascadeOnDelete(false); // FK_Users_StatusUser
            HasOptional(a => a.Telephon).WithMany(b => b.Users).HasForeignKey(c => c.IdTelephon).WillCascadeOnDelete(false); // FK_Users_Telephon
        }
    }

    // UserRulesRuk
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UserRulesRukConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserRulesRuk>
    {
        public UserRulesRukConfiguration()
            : this("dbo")
        {
        }

        public UserRulesRukConfiguration(string schema)
        {
            ToTable("UserRulesRuk", schema);
            HasKey(x => x.IdRuleIfns);

            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdRuleIfns).HasColumnName(@"IdRuleIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameRule).HasColumnName(@"NameRule").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // UsersAis3
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersAis3Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersAis3>
    {
        public UsersAis3Configuration()
            : this("dbo")
        {
        }

        public UsersAis3Configuration(string schema)
        {
            ToTable("UsersAis3", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.CodeIfns).HasColumnName(@"CodeIfns").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Department).HasColumnName(@"Department").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Position).HasColumnName(@"Position").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.Organization).HasColumnName(@"Organization").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Bloking).HasColumnName(@"Bloking").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NumberActiveDirectory).HasColumnName(@"NumberActiveDirectory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UsersAis3TemplateAndRule
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersAis3TemplateAndRuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersAis3TemplateAndRule>
    {
        public UsersAis3TemplateAndRuleConfiguration()
            : this("dbo")
        {
        }

        public UsersAis3TemplateAndRuleConfiguration(string schema)
        {
            ToTable("UsersAis3TemplateAndRule", schema);
            HasKey(x => x.IdTemlateRuleAll);

            Property(x => x.IdTemlateRuleAll).HasColumnName(@"IdTemlateRuleAll").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired();
            Property(x => x.IdTemplateIfns).HasColumnName(@"IdTemplateIfns").HasColumnType("int").IsOptional();
            Property(x => x.IdRuleIfns).HasColumnName(@"IdRuleIfns").HasColumnType("int").IsOptional();
            Property(x => x.IdRuleIfnsNotTemplate).HasColumnName(@"IdRuleIfnsNotTemplate").HasColumnType("int").IsOptional();
            Property(x => x.NameRuleNothing).HasColumnName(@"NameRuleNothing").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.RuleIfn).WithMany(b => b.UsersAis3TemplateAndRule).HasForeignKey(c => c.IdRuleIfns); // FK_UsersAis3TemplateAndRule_RuleIfns
            HasOptional(a => a.TemplateAllIfn).WithMany(b => b.UsersAis3TemplateAndRule).HasForeignKey(c => c.IdTemplateIfns).WillCascadeOnDelete(false); // FK_UsersAis3TemplateAndRule_TemplateAllIfns
            HasRequired(a => a.UsersAis3).WithMany(b => b.UsersAis3TemplateAndRule).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_UsersAis3TemplateAndRule_UsersAis3
        }
    }

    // UsersDoubleRulesTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersDoubleRulesTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersDoubleRulesTemplate>
    {
        public UsersDoubleRulesTemplateConfiguration()
            : this("dbo")
        {
        }

        public UsersDoubleRulesTemplateConfiguration(string schema)
        {
            ToTable("UsersDoubleRulesTemplate", schema);
            HasKey(x => new { x.IdTemplateIfns, x.IdRuleIfns });

            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdTemplateIfns).HasColumnName(@"IdTemplateIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameTemplate).HasColumnName(@"NameTemplate").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IdRuleIfns).HasColumnName(@"IdRuleIfns").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameRule).HasColumnName(@"NameRule").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
        }
    }

    // UsersIsActualsStat
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersIsActualsStatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersIsActualsStat>
    {
        public UsersIsActualsStatConfiguration()
            : this("dbo")
        {
        }

        public UsersIsActualsStatConfiguration(string schema)
        {
            ToTable("UsersIsActualsStat", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ChangeType).HasColumnName(@"ChangeType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.NameUsers).HasColumnName(@"NameUsers").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.SmallNameUsers).HasColumnName(@"SmallNameUsers").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdOtdel).HasColumnName(@"IdOtdel").HasColumnType("int").IsOptional();
            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();
            Property(x => x.DateCreate).HasColumnName(@"DateCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // UsersNotTechnical
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UsersNotTechnicalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsersNotTechnical>
    {
        public UsersNotTechnicalConfiguration()
            : this("dbo")
        {
        }

        public UsersNotTechnicalConfiguration(string schema)
        {
            ToTable("UsersNotTechnical", schema);
            HasKey(x => new { x.IdUser, x.NameUser });

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SmallName).HasColumnName(@"SmallName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TabelNumber).HasColumnName(@"TabelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NamePosition).HasColumnName(@"NamePosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.NameOtdel).HasColumnName(@"NameOtdel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
        }
    }

    // ValueCharacteristicJson
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ValueCharacteristicJsonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ValueCharacteristicJson>
    {
        public ValueCharacteristicJsonConfiguration()
            : this("dbo")
        {
        }

        public ValueCharacteristicJsonConfiguration(string schema)
        {
            ToTable("ValueCharacteristicJson", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NotOnBalance).HasColumnName(@"NotOnBalance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.RequiresReplacement).HasColumnName(@"RequiresReplacement").HasColumnType("bit").IsRequired();
            Property(x => x.Appointment).HasColumnName(@"Appointment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.VirtualizationEnvironment).HasColumnName(@"VirtualizationEnvironment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Building).HasColumnName(@"Building").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FloorLocation).HasColumnName(@"FloorLocation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.RoomLocation).HasColumnName(@"RoomLocation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Room).HasColumnName(@"Room").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Division).HasColumnName(@"Division").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ActualOsVersion).HasColumnName(@"ActualOsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OsActualVersion).HasColumnName(@"OsActualVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ZagsName).HasColumnName(@"ZagsName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ZagsAddress).HasColumnName(@"ZagsAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeOfUse).HasColumnName(@"TypeOfUse").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ModelInDeliveryAccordance).HasColumnName(@"ModelInDeliveryAccordance").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TransferContractNumber).HasColumnName(@"TransferContractNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PsVersion).HasColumnName(@"PsVersion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NetBiosName).HasColumnName(@"NetBiosName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.AdditionalIPs).HasColumnName(@"AdditionalIPs").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CpuCount).HasColumnName(@"CpuCount").HasColumnType("int").IsOptional();
            Property(x => x.CoreCount).HasColumnName(@"CoreCount").HasColumnType("int").IsOptional();
            Property(x => x.CpuType).HasColumnName(@"CpuType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.CpuFrequencyMhz).HasColumnName(@"CpuFrequencyMhz").HasColumnType("int").IsOptional();
            Property(x => x.RamType).HasColumnName(@"RamType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.RamSize).HasColumnName(@"RamSize").HasColumnType("int").IsOptional();
            Property(x => x.CdOrDvd).HasColumnName(@"CdOrDvd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Fdd).HasColumnName(@"Fdd").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Raid).HasColumnName(@"Raid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TotalDiskSpaceGb).HasColumnName(@"TotalDiskSpaceGb").HasColumnType("int").IsOptional();
            Property(x => x.HddCount).HasColumnName(@"HddCount").HasColumnType("int").IsOptional();
            Property(x => x.HddSize).HasColumnName(@"HddSize").HasColumnType("int").IsOptional();
            Property(x => x.HddType).HasColumnName(@"HddType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.BoardsNumber).HasColumnName(@"BoardsNumber").HasColumnType("int").IsOptional();
            Property(x => x.FreeBoardsNumber).HasColumnName(@"FreeBoardsNumber").HasColumnType("int").IsOptional();
            Property(x => x.NetworkAdapter).HasColumnName(@"NetworkAdapter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NetworkAdapterSpeed).HasColumnName(@"NetworkAdapterSpeed").HasColumnType("int").IsOptional();
            Property(x => x.InternalAnalogNumber).HasColumnName(@"InternalAnalogNumber").HasColumnType("int").IsOptional();
            Property(x => x.InternalDigitNumber).HasColumnName(@"InternalDigitNumber").HasColumnType("int").IsOptional();
            Property(x => x.ConnectedPcInventoryNumber).HasColumnName(@"ConnectedPcInventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ConnectedUpsInventoryNumber).HasColumnName(@"ConnectedUpsInventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplayInventoryNumber).HasColumnName(@"DisplayInventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplayServiceNumber).HasColumnName(@"DisplayServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplayBrand).HasColumnName(@"DisplayBrand").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplayType).HasColumnName(@"DisplayType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplaySize).HasColumnName(@"DisplaySize").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DisplayMaxResolution).HasColumnName(@"DisplayMaxResolution").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeOfAnalogConnection).HasColumnName(@"TypeOfAnalogConnection").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TypeOfDigitConnection).HasColumnName(@"TypeOfDigitConnection").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.AdminsCount).HasColumnName(@"AdminsCount").HasColumnType("int").IsOptional();
            Property(x => x.KeyNumber).HasColumnName(@"KeyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.StreamerBrand).HasColumnName(@"StreamerBrand").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.StreamerCartridgeMark).HasColumnName(@"StreamerCartridgeMark").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OperatingSystem).HasColumnName(@"OperatingSystem").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServicePack).HasColumnName(@"ServicePack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.OfficeSuite).HasColumnName(@"OfficeSuite").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Fio).HasColumnName(@"Fio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ResponsiblePerson).HasColumnName(@"ResponsiblePerson").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MacAddress).HasColumnName(@"MacAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Guarantee).HasColumnName(@"Guarantee").HasColumnType("datetime").IsOptional();
            Property(x => x.YearOfIssue).HasColumnName(@"YearOfIssue").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ComputerName).HasColumnName(@"ComputerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InventoryNumber).HasColumnName(@"InventoryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Comments).HasColumnName(@"Comments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SupplyContract).HasColumnName(@"SupplyContract").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ContractSto).HasColumnName(@"ContractSto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.ServiceNumber).HasColumnName(@"ServiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.SerialNumber).HasColumnName(@"SerialNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.MailServer).HasColumnName(@"MailServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FirewallMailServer).HasColumnName(@"FirewallMailServer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.FirewallForVks).HasColumnName(@"FirewallForVks").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            // Foreign keys
            HasRequired(a => a.EpoDocument).WithOptional(b => b.ValueCharacteristicJson); // FK_ValueCharacteristicJson_EpoDocument
        }
    }

    #endregion

}
// </auto-generated>
